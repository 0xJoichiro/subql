name: "Node-to-docker"
on:
  push:
    branches:
      - docker-from-source
  release:
    types:
      - published
  workflow_dispatch:
    inputs:
      isLatest:
        description: 'Add latest tag'
        default: 'true'
        required: true

jobs:
  node-build-push-docker-onfinality:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 100
          token: ${{ secrets.REPO_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: onfinality
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - run: yarn

      - name: build
        run: yarn build

      ## node
      - name: Get updated node version
        id: get-node-version
        run: |
          sh .github/workflows/scripts/nodeVersion.sh

      - name: Set execute permissions for the script
        run: chmod +x .github/workflows/scripts/replace-versions.sh

      # Replace workspace:* with actual versions
      - name: Replace workspace dependencies with actual versions
        run: |
          ./.github/workflows/scripts/replace-versions.sh

      - name: Build and push
        if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.isLatest == 'false')
        uses: docker/build-push-action@v2
        with:
          push: true
          platforms: arm64,amd64
          file: ./packages/node/Dockerfile
          tags: onfinality/subql-node:dockertest
          build-args: RELEASE_VERSION=${{ steps.get-node-version.outputs.NODE_VERSION }}

      - name: Build and push
        if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && github.event.inputs.isLatest == 'true')
        uses: docker/build-push-action@v2
        with:
          push: true
          platforms: arm64,amd64
          file: ./packages/node/Dockerfile
          tags: onfinality/subql-node:v${{ steps.get-node-version.outputs.NODE_VERSION }},onfinality/subql-node:latest
          build-args: RELEASE_VERSION=${{ steps.get-node-version.outputs.NODE_VERSION }}

      # Revert package.json to its original state after publishing
      - name: Revert package.json
        run: git checkout -- ./packages/node/package.json

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  node-build-push-docker-subquery:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 100
          token: ${{ secrets.REPO_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: subquerynetwork
          password: ${{ secrets.SQ_DOCKERHUB_TOKEN }}

      - run: yarn

      - name: build
        run: yarn build

      - name: Set execute permissions for the script
        run: chmod +x .github/workflows/scripts/replace-versions.sh

      # Replace workspace:* with actual versions
      - name: Replace workspace dependencies with actual versions
        run: |
          ./.github/workflows/scripts/replace-versions.sh

      - name: Build and push
        if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.isLatest == 'false')
        uses: docker/build-push-action@v2
        with:
          push: true
          platforms: arm64,amd64
          file: ./packages/node/Dockerfile
          tags: subquerynetwork/subql-node-substrate:dockertest,

      - name: Build and push
        if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && github.event.inputs.isLatest == 'true')
        uses: docker/build-push-action@v2
        with:
          push: true
          platforms: arm64,amd64
          file: ./packages/node/Dockerfile
          tags: subquerynetwork/subql-node-substrate:v${{ steps.get-node-version.outputs.NODE_VERSION }},subquerynetwork/subql-node-substrate:latest

      # Revert package.json to its original state after publishing
      - name: Revert package.json
        run: git checkout -- ./packages/node/package.json

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

