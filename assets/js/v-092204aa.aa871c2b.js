(self.webpackChunksubql_mono=self.webpackChunksubql_mono||[]).push([[114],{7790:(e,n,a)=>{"use strict";a.r(n),a.d(n,{data:()=>s});const s={key:"v-092204aa",path:"/run/run.html",title:"Running SubQuery Locally",lang:"English",frontmatter:{},excerpt:"",headers:[{level:2,title:"Using Docker",slug:"using-docker",children:[]},{level:2,title:"Running a Indexer (subql/node)",slug:"running-a-indexer-subql-node",children:[{level:3,title:"Installation",slug:"installation",children:[]},{level:3,title:"Key Commands",slug:"key-commands",children:[{level:4,title:"Point to local project path",slug:"point-to-local-project-path",children:[]},{level:4,title:"Connect to database",slug:"connect-to-database",children:[]},{level:4,title:"Specify a configuration file",slug:"specify-a-configuration-file",children:[]},{level:4,title:"Change the block fetching batch size",slug:"change-the-block-fetching-batch-size",children:[]},{level:4,title:"Local mode",slug:"local-mode",children:[]}]}]},{level:2,title:"Running a Query Service (subql/query)",slug:"running-a-query-service-subql-query",children:[{level:3,title:"Installation",slug:"installation-1",children:[]},{level:3,title:"Runing the Query service",slug:"runing-the-query-service",children:[]}]}],filePathRelative:"run/run.md",git:{updatedTime:1621226203e3,contributors:[]}}},2054:(e,n,a)=>{"use strict";a.r(n),a.d(n,{default:()=>C});var s=a(6252);const l=(0,s.Wm)("h1",{id:"running-subquery-locally"},[(0,s.Wm)("a",{class:"header-anchor",href:"#running-subquery-locally"},"#"),(0,s.Uk)(" Running SubQuery Locally")],-1),r=(0,s.Uk)("This guide works through how to run a local SubQuery node on your own infrastructure, this includes both the indexer and query service. Don't want to worry about running your own SubQuery infrastructure? SubQuery provides a "),t={href:"https://explorer.subquery.network",target:"_blank",rel:"noopener noreferrer"},o=(0,s.Uk)("managed hosted service"),i=(0,s.Uk)(" to the community for free. "),c=(0,s.Uk)("Follow our publishing guide"),u=(0,s.Uk)(" to see how you can upload your project to "),p={href:"https://project.subquery.network",target:"_blank",rel:"noopener noreferrer"},d=(0,s.Uk)("SubQuery Projects"),h=(0,s.Uk)("."),b=(0,s.uE)('<h2 id="using-docker"><a class="header-anchor" href="#using-docker">#</a> Using Docker</h2><p>An alternative solution is to run a <strong>Docker Container</strong>, defined by the <code>docker-compose.yml</code> file. For a new project that has been just initalised you won&#39;t need to change anything here.</p><p>Under the project directory run following command:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>docker-compose pull <span class="token operator">&amp;&amp;</span> docker-compose up\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',4),m=(0,s.Uk)("It may take some time to download the required packages ("),g={href:"https://www.npmjs.com/package/@subql/node",target:"_blank",rel:"noopener noreferrer"},y=(0,s.Wm)("code",null,"@subql/node",-1),f=(0,s.Uk)(", "),k={href:"https://www.npmjs.com/package/@subql/query",target:"_blank",rel:"noopener noreferrer"},v=(0,s.Wm)("code",null,"@subql/query",-1),q=(0,s.Uk)(", and Postgres) for the first time but soon you'll see a running SubQuery node."),x=(0,s.Wm)("h2",{id:"running-a-indexer-subql-node"},[(0,s.Wm)("a",{class:"header-anchor",href:"#running-a-indexer-subql-node"},"#"),(0,s.Uk)(" Running a Indexer (subql/node)")],-1),w=(0,s.Wm)("p",null,"Requirements:",-1),W={href:"https://www.postgresql.org/",target:"_blank",rel:"noopener noreferrer"},j=(0,s.Uk)("Postgres"),S=(0,s.Uk)(" database (version 12 or higher). As after "),U=(0,s.Wm)("a",{href:"#start-a-local-subquery-node"},"SubQuery node",-1),_=(0,s.Uk)(" is indexing the blockchain, extracted data need to be stored in an external database instance."),Q=(0,s.uE)('<p>SubQuery node is an implementation that extracts substrate-based blockchain data per the SubQuery project, and saves it into a Postgres database.</p><h3 id="installation"><a class="header-anchor" href="#installation">#</a> Installation</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># Yarn</span>\n<span class="token function">yarn</span> global <span class="token function">add</span> @subql/node\n\n<span class="token comment"># NPM</span>\n<span class="token function">npm</span> <span class="token function">install</span> -g @subql/node\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>Once installed, you can can start a node</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>subql-node <span class="token operator">&lt;</span>command<span class="token operator">&gt;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="key-commands"><a class="header-anchor" href="#key-commands">#</a> Key Commands</h3><p>The following commands will assist you to complete the configuration of SubQuery node and begin indexing. To find out more, you can always run <code>--help</code>.</p><h4 id="point-to-local-project-path"><a class="header-anchor" href="#point-to-local-project-path">#</a> Point to local project path</h4><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>subql-node -f your-project-path \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="connect-to-database"><a class="header-anchor" href="#connect-to-database">#</a> Connect to database</h4><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>export DB_USER=postgres \nexport DB_PASS=postgres \nexport DB_DATABASE=postgres \nexport DB_HOST=localhost \nexport DB_POST=5432\nsubql-node -f your-project-path \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>Depending on the configuration of your Postgres database (e.g. a different database password), please ensure also that both the indexer (<code>subql/node</code>) and the query service (<code>subql/query</code>) is able to establish connection to it</p><h4 id="specify-a-configuration-file"><a class="header-anchor" href="#specify-a-configuration-file">#</a> Specify a configuration file</h4><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>subql-node -c your-project-config.yml\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>This will point the query node to a configure file which can be in YAML or JSON format, check out the example below.</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">subquery</span><span class="token punctuation">:</span> ../../../../subql<span class="token punctuation">-</span>example/extrinsics\n<span class="token key atrule">subqueryName</span><span class="token punctuation">:</span> extrinsics\nbatchSize<span class="token punctuation">:</span><span class="token number">100</span>\nlocalMode<span class="token punctuation">:</span><span class="token boolean important">true</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="change-the-block-fetching-batch-size"><a class="header-anchor" href="#change-the-block-fetching-batch-size">#</a> Change the block fetching batch size</h4><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>subql-node -f your-project-path --batch-size 200\n\nResult:\n[IndexerManager] fetch block [203, 402]\n[IndexerManager] fetch block [403, 602]\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>When the indexer first indexes the chain, fetching single blocks will significantly decrease the performance. Increasing the batch-size to adjust the number of blocks fetched and will decrease the overall processing time. Currently default batch-size been set to 100.</p><h4 id="local-mode"><a class="header-anchor" href="#local-mode">#</a> Local mode</h4><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>subql-node -f your-project-path --local\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>For development debugging purpose, user can run the node in local mode. Switch to local model will create Postgres tables in default schema <code>public</code>.</p><p>If not using local mode, it will create a new Postgres schema with the initial <code>subquery_ </code> and corresponding project tables.</p><h2 id="running-a-query-service-subql-query"><a class="header-anchor" href="#running-a-query-service-subql-query">#</a> Running a Query Service (subql/query)</h2><h3 id="installation-1"><a class="header-anchor" href="#installation-1">#</a> Installation</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># Yarn</span>\n<span class="token function">yarn</span> global <span class="token function">add</span> @subql/query\n\n<span class="token comment"># NPM</span>\n<span class="token function">npm</span> <span class="token function">install</span> -g @subql/query\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="runing-the-query-service"><a class="header-anchor" href="#runing-the-query-service">#</a> Runing the Query service</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>export DB_HOST=localhost\nsubql-query --name &lt;project_name&gt; --playground\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>',28),P=(0,s.Uk)("Make sure the project name is same as the project name when you "),R=(0,s.Uk)("initialize the project"),D=(0,s.Uk)(". Also check the environment variables are correct."),I=(0,s.Wm)("p",null,[(0,s.Uk)("After running subql-query service successfully, open your browser and head to "),(0,s.Wm)("code",null,"http://localhost:3000"),(0,s.Uk)(".")],-1),z=(0,s.Wm)("p",null,"Finally, you should see a GraphQL playground showing in the Explorer and the schema that is ready to query.",-1),C={render:function(e,n){const a=(0,s.up)("OutboundLink"),C=(0,s.up)("RouterLink");return(0,s.wg)(),(0,s.j4)(s.HY,null,[l,(0,s.Wm)("p",null,[r,(0,s.Wm)("a",t,[o,(0,s.Wm)(a)]),i,(0,s.Wm)(C,{to:"/publish/publish.html"},{default:(0,s.w5)((()=>[c])),_:1}),u,(0,s.Wm)("a",p,[d,(0,s.Wm)(a)]),h]),b,(0,s.Wm)("p",null,[m,(0,s.Wm)("a",g,[y,(0,s.Wm)(a)]),f,(0,s.Wm)("a",k,[v,(0,s.Wm)(a)]),q]),x,w,(0,s.Wm)("ul",null,[(0,s.Wm)("li",null,[(0,s.Wm)("a",W,[j,(0,s.Wm)(a)]),S,U,_])]),Q,(0,s.Wm)("p",null,[P,(0,s.Wm)(C,{to:"/quickstart.html#initialise-the-starter-subquery-project"},{default:(0,s.w5)((()=>[R])),_:1}),D]),I,z],64)}}}}]);