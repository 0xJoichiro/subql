(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{382:function(e,t,a){"use strict";a.r(t);var n=a(44),s=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"define-the-subquery"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#define-the-subquery"}},[e._v("#")]),e._v(" Define the SubQuery")]),e._v(" "),a("h2",{attrs:{id:"the-manifest"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#the-manifest"}},[e._v("#")]),e._v(" The Manifest")]),e._v(" "),a("p",[e._v("Inside the "),a("code",[e._v("project.yaml")]),e._v(", defines the substrate extrinsic your subquery indexes, which events \\ calls\nfrom these extrinsic to pay attention to, and how to map event data to entities that our hosted node will\nstores and allows to query.")]),e._v(" "),a("h2",{attrs:{id:"the-graphql-schema"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#the-graphql-schema"}},[e._v("#")]),e._v(" The GraphQL Schema")]),e._v(" "),a("ul",[a("li",[e._v("Next, you need to define the GraphQL schemas inside of "),a("code",[e._v("schema.graphql")]),e._v(' file. To know how to write in  "GraphQL schema language",\nwe recommend to check out on '),a("a",{attrs:{href:"https://graphql.org/learn/schema/#type-language",target:"_blank",rel:"noopener noreferrer"}},[e._v("Schemas and Types"),a("OutboundLink")],1),e._v(".")])]),e._v(" "),a("h2",{attrs:{id:"mapping-function"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mapping-function"}},[e._v("#")]),e._v(" Mapping function")]),e._v(" "),a("p",[e._v("The mappings transform the substrate data your mappings are sourcing into entities defined in your schema. Mappings are written\nin a subset of TypeScript called AssemblyScript which can be compiled to WASM (WebAssembly).")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("We also provided an example of a mapping function in "),a("code",[e._v("src/mappings/Extrinsic.ts")]),e._v(". For each handler that is defined in "),a("code",[e._v("project.yaml")]),e._v("\nunder mapping.handlers, create an exported function of the same name.")])]),e._v(" "),a("li",[a("p",[e._v("Under the "),a("code",[e._v("src/index.ts")]),e._v("ï¼Œyou need to export the functions of handlers has defined in above.")])])]),e._v(" "),a("h3",{attrs:{id:"blockhandler"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#blockhandler"}},[e._v("#")]),e._v(" BlockHandler")]),e._v(" "),a("h3",{attrs:{id:"eventhandler"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eventhandler"}},[e._v("#")]),e._v(" EventHandler")]),e._v(" "),a("h2",{attrs:{id:"code-generation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#code-generation"}},[e._v("#")]),e._v(" Code Generation")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$subql codegen\n")])])]),a("ul",[a("li",[e._v("This will create a new directory "),a("code",[e._v("src/types")]),e._v(" which contains all generated entities in AssemblyScript.")]),e._v(" "),a("li",[e._v("Generated entity class for each types you have defined previously in "),a("code",[e._v("schema.graphql")]),e._v(". These classes provide type-safe\nentity loading, read and write access to entity fields.")])])])}),[],!1,null,null,null);t.default=s.exports}}]);