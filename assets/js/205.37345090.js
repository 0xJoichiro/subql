(window.webpackJsonp=window.webpackJsonp||[]).push([[205],{576:function(e,t,a){"use strict";a.r(t);var s=a(44),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"tutorials"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tutorials"}},[e._v("#")]),e._v(" Tutorials")]),e._v(" "),a("h2",{attrs:{id:"how-to-start-at-a-different-block-height"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-to-start-at-a-different-block-height"}},[e._v("#")]),e._v(" How to start at a different block height?")]),e._v(" "),a("h3",{attrs:{id:"video-guide"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#video-guide"}},[e._v("#")]),e._v(" Video guide")]),e._v(" "),a("figure",{staticClass:"video_container"},[a("iframe",{attrs:{src:"https://www.youtube.com/embed/ZiNSXDMHmBk",frameborder:"0",allowfullscreen:"true"}})]),e._v(" "),a("h3",{attrs:{id:"introduction"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[e._v("#")]),e._v(" Introduction")]),e._v(" "),a("p",[e._v("By default, all starter projects start synchronising the blockchain from the genesis block. In otherwords, from block 1. For large blockchains, this can typically take days or even weeks to fully synchronise.")]),e._v(" "),a("p",[e._v("To start a SubQuery node synchronising from a non-zero height, all you have to do is to modify your project.yaml file and change the startBlock key.")]),e._v(" "),a("p",[e._v("Below is a project.yaml file where the start block has been set to 1,000,000")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("specVersion: "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("0.0")]),e._v(".1\ndescription: "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('""')]),e._v("\nrepository: "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('""')]),e._v("\nschema: ./schema.graphql\nnetwork:\n  endpoint: wss://polkadot.api.onfinality.io/public-ws\n  dictionary: https://api.subquery.network/sq/subquery/dictionary-polkadot\ndataSources:\n  - name: main\n    kind: substrate/Runtime\n    startBlock: "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("1000000")]),e._v("\n    mapping:\n      handlers:\n        - handler: handleBlock\n          kind: substrate/BlockHandler\n")])])]),a("h3",{attrs:{id:"why-not-start-from-zero"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#why-not-start-from-zero"}},[e._v("#")]),e._v(" Why not start from zero?")]),e._v(" "),a("p",[e._v("The main reason is that it can reduce the time to synchronise the blockchain. This means that if you are only interested in transactions in the last 3 months, you can only synchronise the last 3 months worth meaning less waiting time and you can start your development faster.")]),e._v(" "),a("h3",{attrs:{id:"what-are-the-drawbacks-of-not-starting-from-zero"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-are-the-drawbacks-of-not-starting-from-zero"}},[e._v("#")]),e._v(" What are the drawbacks of not starting from zero?")]),e._v(" "),a("p",[e._v("The most obvious drawback will be that you won’t be able to query for data on the blockchain for blocks that you don’t have.")]),e._v(" "),a("h3",{attrs:{id:"how-to-figure-out-the-current-blockchain-height"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-to-figure-out-the-current-blockchain-height"}},[e._v("#")]),e._v(" How to figure out the current blockchain height?")]),e._v(" "),a("p",[e._v("If you are using the Polkadot network, you can visit "),a("a",{attrs:{href:"https://polkascan.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://polkascan.io/"),a("OutboundLink")],1),e._v(', select the network, and then view the  "Finalised Block" figure.')]),e._v(" "),a("h3",{attrs:{id:"do-i-have-to-do-a-rebuild-or-a-codegen"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#do-i-have-to-do-a-rebuild-or-a-codegen"}},[e._v("#")]),e._v(" Do I have to do a rebuild or a codegen?")]),e._v(" "),a("p",[e._v("No. Because you are modifying the project.yaml file, which is essentially a configuration file, you will not have to rebuild or regenerate the typescript code.")]),e._v(" "),a("h2",{attrs:{id:"how-to-change-the-blockchain-fetching-batch-size"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-to-change-the-blockchain-fetching-batch-size"}},[e._v("#")]),e._v(" How to change the blockchain fetching batch size?")]),e._v(" "),a("h3",{attrs:{id:"video-guide-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#video-guide-2"}},[e._v("#")]),e._v(" Video guide")]),e._v(" "),a("figure",{staticClass:"video_container"},[a("iframe",{attrs:{src:"https://www.youtube.com/embed/LO_Gea_IN_s",frameborder:"0",allowfullscreen:"true"}})]),e._v(" "),a("h3",{attrs:{id:"introduction-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#introduction-2"}},[e._v("#")]),e._v(" Introduction")]),e._v(" "),a("p",[e._v("The default batch size is 100, but this can be changed by using the extra command "),a("code",[e._v("--batch-size=xx")]),e._v(".")]),e._v(" "),a("p",[e._v("You need to this to the command line as an extra flag or if you are using Docker, modify the docker-compose.yml with:")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("subquery-node:\n    image: onfinality/subql-node:latest\n    depends_on:\n      - "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"postgres"')]),e._v("\n    restart: always\n    environment:\n      DB_USER: postgres\n      DB_PASS: postgres\n      DB_DATABASE: postgres\n      DB_HOST: postgres\n      DB_PORT: "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("5432")]),e._v("\n    volumes:\n      - ./:/app\n    command:\n      - -f"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/app\n      - --local\n      - --batch-size"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("50")]),e._v("\n\n")])])]),a("p",[e._v("This example sets the batch size to 50.")]),e._v(" "),a("h3",{attrs:{id:"why-change-the-batch-size"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#why-change-the-batch-size"}},[e._v("#")]),e._v(" Why change the batch size?")]),e._v(" "),a("p",[e._v("Using a smaller batch size can reduce memory usage and not leave users hanging for large queries. In otherwords, your application can be more responsive.")]),e._v(" "),a("h2",{attrs:{id:"how-to-run-an-indexer-node"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-to-run-an-indexer-node"}},[e._v("#")]),e._v(" How to run an indexer node?")]),e._v(" "),a("h3",{attrs:{id:"video-guide-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#video-guide-3"}},[e._v("#")]),e._v(" Video guide")]),e._v(" "),a("figure",{staticClass:"video_container"},[a("iframe",{attrs:{src:"https://www.youtube.com/embed/QfNsR12ItnA",frameborder:"0",allowfullscreen:"true"}})]),e._v(" "),a("h3",{attrs:{id:"introduction-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#introduction-3"}},[e._v("#")]),e._v(" Introduction")]),e._v(" "),a("p",[e._v("Running an indexer node is another option outside of using Docker or having a project hosted for you at "),a("a",{attrs:{href:"https://project.subquery.network/",target:"_blank",rel:"noopener noreferrer"}},[e._v("SubQuery Projects"),a("OutboundLink")],1),e._v(". It requires more time and effort but will enhance your understanding of how SubQuery works under the covers.")]),e._v(" "),a("h3",{attrs:{id:"postgres"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#postgres"}},[e._v("#")]),e._v(" Postgres")]),e._v(" "),a("p",[e._v("Running an indexer node on your infrastructure will require the setup of a Postgres database. You can install Postgres from "),a("a",{attrs:{href:"https://www.postgresql.org/download/",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),a("OutboundLink")],1),e._v(" and ensure the version is 12 or greater.")]),e._v(" "),a("h3",{attrs:{id:"install-subql-node"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install-subql-node"}},[e._v("#")]),e._v(" Install subql/node")]),e._v(" "),a("p",[e._v("Then to run a SubQuery node, run the following command:")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" -g @subql/node\n")])])]),a("p",[e._v("The -g flag means to install it globally which means on OSX, the location will be /usr/local/lib/node_modules.")]),e._v(" "),a("p",[e._v("Once installed, you can check the version by running:")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" subql-node --version\n"),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("0.19")]),e._v(".1\n")])])]),a("h3",{attrs:{id:"setting-db-configs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setting-db-configs"}},[e._v("#")]),e._v(" Setting DB configs")]),e._v(" "),a("p",[e._v("Next, you need to set the following environmental variables:")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("DB_USER")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("postgres\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("DB_PASS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("postgres\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("DB_DATABASE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("postgres\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("DB_HOST")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("localhost\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("DB_PORT")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("5432")]),e._v("\n")])])]),a("p",[e._v("Of course, if you have different values for the above keys, please adjust accordingly. Note that the "),a("code",[e._v("env")]),e._v(" command will display the current environment variables and that this process only sets these values temporarily. That is, they are only valid for the duration of the terminal session. To set them permanently, store them in your ~/bash_profile instead.")]),e._v(" "),a("h3",{attrs:{id:"indexing-a-project"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#indexing-a-project"}},[e._v("#")]),e._v(" Indexing a project")]),e._v(" "),a("p",[e._v("To start indexing a project, navigate into your project folder and run the following command:")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("subql-node -f "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(".")]),e._v("\n")])])]),a("p",[e._v("If you do not have a project handy, "),a("code",[e._v("git clone https://github.com/subquery/subql-helloworld")]),e._v(". You should see the indexer node kick into life and start indexing blocks.")]),e._v(" "),a("h3",{attrs:{id:"inspecting-postgres"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#inspecting-postgres"}},[e._v("#")]),e._v(" Inspecting Postgres")]),e._v(" "),a("p",[e._v("If you navigate to Postgres, you should see two tables created. "),a("code",[e._v("public.subqueries")]),e._v(" and "),a("code",[e._v("subquery_1.starter_entities")]),e._v(".")]),e._v(" "),a("p",[a("code",[e._v("public.subqueries")]),e._v(" only contains 1 row which the indexer checks upon start up to “understand the current state” so it knows where to continue from. The "),a("code",[e._v("starter_entities")]),e._v(" table contains the indexes. To view the data, run "),a("code",[e._v("select (*) from subquery_1.starter_entities")]),e._v(".")])])}),[],!1,null,null,null);t.default=r.exports}}]);