(self.webpackChunksubql_mono=self.webpackChunksubql_mono||[]).push([[818],{1290:(e,n,r)=>{"use strict";r.r(n),r.d(n,{data:()=>a});const a={key:"v-64f5e74b",path:"/quickstart.html",title:"Quick Start Guide",lang:"English",frontmatter:{},excerpt:"",headers:[{level:2,title:"Preparation",slug:"preparation",children:[{level:3,title:"Local Development Environment",slug:"local-development-environment",children:[]},{level:3,title:"Install the SubQuery CLI",slug:"install-the-subquery-cli",children:[]}]},{level:2,title:"Initialise the Starter SubQuery Project",slug:"initialise-the-starter-subquery-project",children:[]},{level:2,title:"Configure and Build the Starter Project",slug:"configure-and-build-the-starter-project",children:[{level:3,title:"GraphQL Model Generation",slug:"graphql-model-generation",children:[]}]},{level:2,title:"Build the Project",slug:"build-the-project",children:[]},{level:2,title:"Running and Querying your Starter Project",slug:"running-and-querying-your-starter-project",children:[{level:3,title:"Run your SubQuery Project",slug:"run-your-subquery-project",children:[]},{level:3,title:"Query your Project",slug:"query-your-project",children:[]}]},{level:2,title:"Next Steps",slug:"next-steps",children:[]}],filePathRelative:"quickstart.md",git:{updatedTime:1622286542e3,contributors:[]}}},3993:(e,n,r)=>{"use strict";r.r(n),r.d(n,{default:()=>je});var a=r(6252);const s=(0,a.Wm)("h1",{id:"quick-start-guide"},[(0,a.Wm)("a",{class:"header-anchor",href:"#quick-start-guide"},"#"),(0,a.Uk)(" Quick Start Guide")],-1),t=(0,a.Wm)("p",null,"In this Quick Start guide, we're going to create a simple starter project that you can be used as a framework for developing your own SubQuery Project.",-1),o=(0,a.Wm)("p",null,"At the end of this guide, you'll have a working SubQuery project running on a SubQuery node with a GraphQL endpoint that you can query data from.",-1),l=(0,a.Uk)("If you haven't already, we suggest that you familiarise yourself with the "),u=(0,a.Uk)("terminology"),i=(0,a.Uk)(" used in SubQuery."),c=(0,a.Wm)("h2",{id:"preparation"},[(0,a.Wm)("a",{class:"header-anchor",href:"#preparation"},"#"),(0,a.Uk)(" Preparation")],-1),p=(0,a.Wm)("h3",{id:"local-development-environment"},[(0,a.Wm)("a",{class:"header-anchor",href:"#local-development-environment"},"#"),(0,a.Uk)(" Local Development Environment")],-1),d={href:"https://www.typescriptlang.org/",target:"_blank",rel:"noopener noreferrer"},h=(0,a.Uk)("Typescript"),m=(0,a.Uk)(" is required to compile project and define types."),b=(0,a.Uk)("Both SubQuery CLI and generated Project have dependencies and require a modern version "),y={href:"https://nodejs.org/en/",target:"_blank",rel:"noopener noreferrer"},g=(0,a.Uk)("Node"),k=(0,a.Uk)("."),f=(0,a.Wm)("li",null,"SubQuery Nodes require Docker",-1),w=(0,a.uE)('<h3 id="install-the-subquery-cli"><a class="header-anchor" href="#install-the-subquery-cli">#</a> Install the SubQuery CLI</h3><p>Install SubQuery CLI globally on your terminal by using Yarn or NPM:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># Yarn</span>\n<span class="token function">yarn</span> global <span class="token function">add</span> @subql/cli\n\n<span class="token comment"># NPM</span>\n<span class="token function">npm</span> <span class="token function">install</span> -g @subql/cli\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>You can then run help to see available commands and usage provide by CLI</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>subql <span class="token builtin class-name">help</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="initialise-the-starter-subquery-project"><a class="header-anchor" href="#initialise-the-starter-subquery-project">#</a> Initialise the Starter SubQuery Project</h2><p>Inside the directory in which you want to create a SubQuery project, simply replace <code>PROJECT_NAME</code> with your own and run the command:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>subql init --starter PROJECT_NAME\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>You&#39;ll be asked certain questions as the SubQuery project is initalised:</p>',9),v=(0,a.Wm)("li",null,"Git repository (Optional): Provide a Git URL to a repo that this SubQuery project will be hosted in (when hosted in SubQuery Explorer)",-1),j=(0,a.Uk)("RPC endpoint (Required): Provide a wss URL to a running RPC enpoint that will be used by default for this poject. You can quickly access public endpoints for different Polkadot networks or even create your own private dedicated node using "),q={href:"https://app.onfinality.io",target:"_blank",rel:"noopener noreferrer"},W=(0,a.Uk)("OnFinality"),U=(0,a.Uk)(" or just use the default Polkadot endpoint."),Q=(0,a.Wm)("li",null,"Authors (Required): Enter the owner of this SubQuery project here",-1),S=(0,a.Wm)("li",null,"Description (Optional): You can provide a short paragraph about your project that describe what data it contains and what users can do with it",-1),P=(0,a.Wm)("li",null,[(0,a.Uk)("Version (Required): Enter a custom version number or use the default ("),(0,a.Wm)("code",null,"1.0.0"),(0,a.Uk)(")")],-1),x=(0,a.Wm)("li",null,[(0,a.Uk)("License (Required): Provide the software license for this project or accept the default ("),(0,a.Wm)("code",null,"Apache-2.0"),(0,a.Uk)(")")],-1),L=(0,a.Uk)("After the initialisation process is complete, you should see a folder with your project name has been created inside the directory. The contents of this directoy should be identical to what's listed in the "),_=(0,a.Uk)("Directory Structure"),E=(0,a.Uk)("."),R=(0,a.uE)('<p>Last, under the project directory, run following command to install the new project&#39;s dependencies.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> PROJECT_NAME\n\n<span class="token comment"># Yarn</span>\n<span class="token function">yarn</span> <span class="token function">install</span>\n\n<span class="token comment"># NPM</span>\n<span class="token function">npm</span> <span class="token function">install</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="configure-and-build-the-starter-project"><a class="header-anchor" href="#configure-and-build-the-starter-project">#</a> Configure and Build the Starter Project</h2><p>In the starter package that you just initialised, we have provided a standard set of configuration for your new project. You will mainly be working on the following files:</p><ul><li>The Manifest in <code>project.yaml</code></li><li>The GraphQL Schema in <code>schema.graphql</code></li><li>The Mapping functions in <code>src/mappings/</code> directory</li></ul><p>For more information on how to write the SubQuery, check out our documentation under <a href="/create/introduction">Create a project</a></p><h3 id="graphql-model-generation"><a class="header-anchor" href="#graphql-model-generation">#</a> GraphQL Model Generation</h3>',7),I=(0,a.Uk)("In order to "),C={href:"http://localhost:8080/run/run.html",target:"_blank",rel:"noopener noreferrer"},G=(0,a.Uk)("index"),N=(0,a.Uk)(" your SubQuery project, you must first generate the required GraphQL models that you have defined in your GraphQL Schema file ("),Y=(0,a.Wm)("code",null,"schema.graphql",-1),M=(0,a.Uk)("). Run this command in the root of the project directory."),A=(0,a.uE)('<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># Yarn</span>\n<span class="token function">yarn</span> codegen\n\n<span class="token comment"># NPM </span>\n<span class="token function">npm</span> run-script codegen\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>You&#39;ll find the generated models in the <code>/src/types/models</code> directory</p><h2 id="build-the-project"><a class="header-anchor" href="#build-the-project">#</a> Build the Project</h2><p>In order run your SubQuery Project on a locally hosted SubQuery Node, you need to build your work.</p><p>Run the build command from the project&#39;s root directory.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># Yarn</span>\n<span class="token function">yarn</span> build\n\n<span class="token comment"># NPM</span>\n<span class="token function">npm</span> run-script build\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="running-and-querying-your-starter-project"><a class="header-anchor" href="#running-and-querying-your-starter-project">#</a> Running and Querying your Starter Project</h2>',7),T=(0,a.Uk)("Although you can quickly publish your new project to "),O={href:"https://project.subquery.network",target:"_blank",rel:"noopener noreferrer"},D=(0,a.Uk)("SubQuery Projects"),B=(0,a.Uk)(" and query it using our "),F={href:"https://explorer.subquery.network",target:"_blank",rel:"noopener noreferrer"},J=(0,a.Uk)("Explorer"),H=(0,a.Uk)(", the easiest way to run SubQuery nodes locally is in a Docker container, if you don't already have Docker you can install it from "),V={href:"https://docs.docker.com/get-docker/",target:"_blank",rel:"noopener noreferrer"},z=(0,a.Uk)("docker.com"),K=(0,a.Uk)("."),X=(0,a.uE)('<p><a href="/publish/publish"><em>Skip this and publish your new project to SubQuery Projects</em></a></p><h3 id="run-your-subquery-project"><a class="header-anchor" href="#run-your-subquery-project">#</a> Run your SubQuery Project</h3><p>All configuration that controls how a SubQuery node is run is defined in this <code>docker-compose.yml</code> file. For a new project that has been just initalised you won&#39;t need to change anything here, but you can read more about the file and the settings in our <a href="./run/run">Run a Project section</a></p><p>Under the project directory run following command:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>docker-compose pull <span class="token operator">&amp;&amp;</span> docker-compose up\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',5),Z=(0,a.Uk)("It may take some time to download the required packages ("),$={href:"https://www.npmjs.com/package/@subql/node",target:"_blank",rel:"noopener noreferrer"},ee=(0,a.Wm)("code",null,"@subql/node",-1),ne=(0,a.Uk)(", "),re={href:"https://www.npmjs.com/package/@subql/query",target:"_blank",rel:"noopener noreferrer"},ae=(0,a.Wm)("code",null,"@subql/query",-1),se=(0,a.Uk)(", and Postgres) for the first time but soon you'll see a running SubQuery node."),te=(0,a.Wm)("h3",{id:"query-your-project"},[(0,a.Wm)("a",{class:"header-anchor",href:"#query-your-project"},"#"),(0,a.Uk)(" Query your Project")],-1),oe=(0,a.Uk)("Open your browser and head to "),le={href:"http://localhost:3000",target:"_blank",rel:"noopener noreferrer"},ue=(0,a.Uk)("http://localhost:3000"),ie=(0,a.Uk)("."),ce=(0,a.Wm)("p",null,[(0,a.Uk)("You should see a GraphQL playground is showing in the explorer and the schemas that ready to query. On the top right of the playground, you'll find a "),(0,a.Wm)("em",null,"Docs"),(0,a.Uk)(" button that will open a documentation draw. This documentation is automatically generated and helps you find what entities and methods you can query.")],-1),pe=(0,a.Uk)("For a new SubQuery starter project, you can try the following query to get a taste of how it works or "),de=(0,a.Uk)("learn more about the GraphQL Query language."),he=(0,a.Uk)("."),me=(0,a.uE)('<div class="language-graphql ext-graphql line-numbers-mode"><pre class="language-graphql"><code><span class="token punctuation">{</span>\n  <span class="token keyword">query</span><span class="token punctuation">{</span>\n    starterEntities<span class="token punctuation">(</span><span class="token attr-name">first</span><span class="token punctuation">:</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n      nodes<span class="token punctuation">{</span>\n        field1<span class="token punctuation">,</span>\n        field2<span class="token punctuation">,</span>\n        field3\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="next-steps"><a class="header-anchor" href="#next-steps">#</a> Next Steps</h2>',2),be=(0,a.Uk)("Congratulations, you now have a locally running SubQuery project that accepts GraphQL API requests for sample data. In the next guide, we'll show you how to publish your new project to "),ye={href:"https://project.subquery.network",target:"_blank",rel:"noopener noreferrer"},ge=(0,a.Uk)("SubQuery Projects"),ke=(0,a.Uk)(" and query it using our "),fe={href:"https://explorer.subquery.network",target:"_blank",rel:"noopener noreferrer"},we=(0,a.Uk)("Explorer"),ve=(0,a.Uk)("Publish your new project to SubQuery Projects"),je={render:function(e,n){const r=(0,a.up)("RouterLink"),je=(0,a.up)("OutboundLink");return(0,a.wg)(),(0,a.j4)(a.HY,null,[s,t,o,(0,a.Wm)("p",null,[l,(0,a.Wm)(r,{to:"/#terminology"},{default:(0,a.w5)((()=>[u])),_:1}),i]),c,p,(0,a.Wm)("ul",null,[(0,a.Wm)("li",null,[(0,a.Wm)("a",d,[h,(0,a.Wm)(je)]),m]),(0,a.Wm)("li",null,[b,(0,a.Wm)("a",y,[g,(0,a.Wm)(je)]),k]),f]),w,(0,a.Wm)("ul",null,[v,(0,a.Wm)("li",null,[j,(0,a.Wm)("a",q,[W,(0,a.Wm)(je)]),U]),Q,S,P,x]),(0,a.Wm)("p",null,[L,(0,a.Wm)(r,{to:"/create/introduction.html#directory-structure"},{default:(0,a.w5)((()=>[_])),_:1}),E]),R,(0,a.Wm)("p",null,[I,(0,a.Wm)("a",C,[G,(0,a.Wm)(je)]),N,Y,M]),A,(0,a.Wm)("p",null,[T,(0,a.Wm)("a",O,[D,(0,a.Wm)(je)]),B,(0,a.Wm)("a",F,[J,(0,a.Wm)(je)]),H,(0,a.Wm)("a",V,[z,(0,a.Wm)(je)]),K]),X,(0,a.Wm)("p",null,[Z,(0,a.Wm)("a",$,[ee,(0,a.Wm)(je)]),ne,(0,a.Wm)("a",re,[ae,(0,a.Wm)(je)]),se]),te,(0,a.Wm)("p",null,[oe,(0,a.Wm)("a",le,[ue,(0,a.Wm)(je)]),ie]),ce,(0,a.Wm)("p",null,[pe,(0,a.Wm)(r,{to:"/query/graphql.html"},{default:(0,a.w5)((()=>[de])),_:1}),he]),me,(0,a.Wm)("p",null,[be,(0,a.Wm)("a",ye,[ge,(0,a.Wm)(je)]),ke,(0,a.Wm)("a",fe,[we,(0,a.Wm)(je)])]),(0,a.Wm)("p",null,[(0,a.Wm)(r,{to:"/publish/publish.html"},{default:(0,a.w5)((()=>[ve])),_:1})])],64)}}}}]);