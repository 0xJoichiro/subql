(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{502:function(e,t,n){"use strict";n.r(t);var s=n(1),a=Object(s.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"graphql-schema"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#graphql-schema"}},[e._v("#")]),e._v(" GraphQL-Schema")]),e._v(" "),n("h2",{attrs:{id:"definieren-von-entitaten"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#definieren-von-entitaten"}},[e._v("#")]),e._v(" Definieren von Entitäten")]),e._v(" "),n("p",[e._v("Die "),n("code",[e._v("schema.graphql")]),e._v(" Datei definiert die verschiedenen GraphQL Schemas. Aufgrund der Funktionsweise der GraphQL-Abfragesprache bestimmt die Schemadatei im Wesentlichen die Form Ihrer Daten aus SubQuery. Um mehr über das Schreiben in der GraphQL-Schemasprache zu erfahren, empfehlen wir Ihnen, sich "),n("a",{attrs:{href:"https://graphql.org/learn/schema/#type-language",target:"_blank",rel:"noopener noreferrer"}},[e._v("Schemas und Typen"),n("OutboundLink")],1),e._v(" anzusehen.")]),e._v(" "),n("p",[n("strong",[e._v("Wichtig: Wenn Sie Änderungen an der Schemadatei vornehmen, stellen Sie bitte sicher, dass Sie Ihr Typenverzeichnis mit dem folgenden Befehl "),n("code",[e._v("yarn codegen")]),e._v(". neu generieren")])]),e._v(" "),n("h3",{attrs:{id:"entitaten"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#entitaten"}},[e._v("#")]),e._v(" Entitäten")]),e._v(" "),n("p",[e._v("Jede Entität muss ihre Pflichtfelder "),n("code",[e._v("id")]),e._v(" mit dem Typ "),n("code",[e._v("ID!")]),e._v(" definieren. Er wird als Primärschlüssel verwendet und ist unter allen Entitäten desselben Typs eindeutig.")]),e._v(" "),n("p",[e._v("Felder, die keine Null-Werte enthalten können, sind in der Entität durch gekennzeichnet Bitte sehen Sie das Beispiel unten:")]),e._v(" "),n("div",{staticClass:"language-graphql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-graphql"}},[n("code",[e._v("Typ Beispiel "),n("span",{pre:!0,attrs:{class:"token directive function"}},[e._v("@entity")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" ID"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# id-Feld ist immer erforderlich und muss so aussehen")]),e._v("\n   "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" String"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Das ist ein Pflichtfeld")]),e._v("\n   "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("address")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" String "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Dies ist ein optionales Feld")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br")])]),n("h3",{attrs:{id:"unterstutzte-skalare-und-typen"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#unterstutzte-skalare-und-typen"}},[e._v("#")]),e._v(" Unterstützte Skalare und Typen")]),e._v(" "),n("p",[e._v("Wir unterstützen derzeit fließende Skalartypen:")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("ID")])]),e._v(" "),n("li",[n("code",[e._v("Int")])]),e._v(" "),n("li",[n("code",[e._v("String")])]),e._v(" "),n("li",[n("code",[e._v("BigInt")])]),e._v(" "),n("li",[n("code",[e._v("Datum")])]),e._v(" "),n("li",[n("code",[e._v("Boolean")])]),e._v(" "),n("li",[n("code",[e._v("<EntityName>")]),e._v(" für verschachtelte Beziehungsentitäten können Sie den Namen der definierten Entität als eines der Felder verwenden. Siehe "),n("a",{attrs:{href:"#entity-relationships"}},[e._v("Beziehungen zu Entitäten")]),e._v(".")]),e._v(" "),n("li",[n("code",[e._v("JSON")]),e._v(" kann strukturierte Daten alternativ speichern, siehe "),n("a",{attrs:{href:"#json-type"}},[e._v("JSON-Typ")])])]),e._v(" "),n("h2",{attrs:{id:"indizierung-nach-nicht-primarschlussel-feld"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#indizierung-nach-nicht-primarschlussel-feld"}},[e._v("#")]),e._v(" Indizierung nach Nicht-Primärschlüssel-Feld")]),e._v(" "),n("p",[e._v("Um die Abfrageleistung zu verbessern, indizieren Sie ein Entitätsfeld einfach, indem Sie die Annotation "),n("code",[e._v("@index")]),e._v(" in einem Nicht-Primärschlüsselfeld implementieren.")]),e._v(" "),n("p",[e._v("Allerdings erlauben wir Benutzern nicht, "),n("code",[e._v("@index")]),e._v(" Anmerkungen zu irgendeinem "),n("a",{attrs:{href:"#json-type"}},[e._v("JSON")]),e._v(" Objekt hinzuzufügen. Standardmäßig werden Indizes automatisch zu Fremdschlüsseln und für JSON-Felder in der Datenbank hinzugefügt, jedoch nur, um die Leistung des Abfragedienstes zu verbessern.")]),e._v(" "),n("p",[e._v("Hier ist ein Beispiel.")]),e._v(" "),n("div",{staticClass:"language-graphql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-graphql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("type")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("User")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token directive function"}},[e._v("@entity")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" ID"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" String"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token directive function"}},[e._v("@index")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("unique")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#  kann auf wahr oder falsch")]),e._v("\n  Titel gesetzt werden"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("title")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" Title"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Indizes werden automatisch zum Fremdschlüsselfeld hinzugefügt")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("type")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Title")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token directive function"}},[e._v("@entity")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" ID"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" String"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token directive function"}},[e._v("@index")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("unique")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br")])]),n("p",[e._v("Angenommen, wir kennen den Namen dieses Benutzers, kennen aber nicht den genauen ID-Wert, anstatt alle Benutzer zu extrahieren und dann nach Namen zu filtern, können wir "),n("code",[e._v("@index")]),e._v(" hinter dem Namensfeld hinzufügen. Dies macht die Abfrage viel schneller und wir können zusätzlich das "),n("code",[e._v("unique: true")]),e._v(" übergeben, um die Eindeutigkeit zu gewährleisten.")]),e._v(" "),n("p",[n("strong",[e._v("Wenn ein Feld nicht eindeutig ist, ist die maximale Ergebnismenge 100")])]),e._v(" "),n("p",[e._v("Wenn die Codegenerierung ausgeführt wird, wird automatisch ein "),n("code",[e._v("getByName")]),e._v(" nach dem "),n("code",[e._v("Benutzer")]),e._v("-Modell erstellt, und das Fremdschlüsselfeld "),n("code",[e._v("Titel")]),e._v(" erstellt ein "),n("code",[e._v("getByTitleId")]),e._v("-Methode, die beide direkt in der Mapping-Funktion aufgerufen werden können.")]),e._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("/* Vorbereitung eines Datensatzes für die Titelentität */")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("INSERT")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("INTO")]),e._v(" titles "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("VALUES")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'id_1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'Captain'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("div",{staticClass:"language-typescript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-typescript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// Handler in der Mapping-Funktion")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("import")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("User"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("from")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'../types/models/User'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("import")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("Title"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("from")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'../types/models/Title'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" jack "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("await")]),e._v(" User"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("getByName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'Jack Sparrow'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" captainTitle "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("await")]),e._v(" Title"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("getByName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v("'Captain'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" pirateLords "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("await")]),e._v(" User"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("getByTitleId")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("captainTitle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// Liste aller Captains")]),e._v("\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br")])]),n("h2",{attrs:{id:"entitats-beziehungen"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#entitats-beziehungen"}},[e._v("#")]),e._v(" Entitäts-Beziehungen")]),e._v(" "),n("p",[e._v("Eine Entität hat oft verschachtelte Beziehungen zu anderen Entitäten. Wenn Sie den Feldwert auf einen anderen Entitätsnamen festlegen, wird standardmäßig eine Eins-zu-Eins-Beziehung zwischen diesen beiden Entitäten definiert.")]),e._v(" "),n("p",[e._v("Anhand der folgenden Beispiele können verschiedene Entitätsbeziehungen (eins-zu-eins, eins-zu-viele und viele-zu-viele) konfiguriert werden.")]),e._v(" "),n("h3",{attrs:{id:"ein-zu-eins-beziehungen"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ein-zu-eins-beziehungen"}},[e._v("#")]),e._v(" Ein-zu-Eins-Beziehungen")]),e._v(" "),n("p",[e._v("Eins-zu-eins-Beziehungen sind die Standardeinstellung, wenn nur eine einzelne Entität einer anderen zugeordnet wird.")]),e._v(" "),n("p",[e._v("Beispiel: Ein Reisepass gehört nur einer Person und eine Person hat nur einen Reisepass (in diesem Beispiel):")]),e._v(" "),n("div",{staticClass:"language-graphql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-graphql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("type")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Person")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token directive function"}},[e._v("@entity")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" ID"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("type")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Passport")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token directive function"}},[e._v("@entity")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" ID"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("Besitzer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" Person"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br")])]),n("p",[e._v("oder")]),e._v(" "),n("div",{staticClass:"language-graphql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-graphql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("type")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Person")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token directive function"}},[e._v("@entity")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" ID"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("passport")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" Passport"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("type")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Passport")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token directive function"}},[e._v("@entity")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" ID"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("owner")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" Person"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br")])]),n("h3",{attrs:{id:"one-to-many-beziehungen"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#one-to-many-beziehungen"}},[e._v("#")]),e._v(" One-to-Many Beziehungen")]),e._v(" "),n("p",[e._v("Sie können eckige Klammern verwenden, um anzugeben, dass ein Feldtyp mehrere Entitäten enthält.")]),e._v(" "),n("p",[e._v("Beispiel: Eine Person kann mehrere Konten haben.")]),e._v(" "),n("div",{staticClass:"language-graphql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-graphql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("type")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Person")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token directive function"}},[e._v("@entity")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" ID"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("accounts")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("Account"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("type")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Account")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token directive function"}},[e._v("@entity")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" ID"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("publicAddress")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" String"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br")])]),n("h3",{attrs:{id:"viele-zu-viele-beziehungen"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#viele-zu-viele-beziehungen"}},[e._v("#")]),e._v(" Viele-zu-Viele-Beziehungen")]),e._v(" "),n("p",[e._v("Eine Viele-zu-Viele-Beziehung kann erreicht werden, indem eine Abbildungsentität implementiert wird, um die anderen beiden Entitäten zu verbinden.")]),e._v(" "),n("p",[e._v("Beispiel: Jede Person ist Teil mehrerer Gruppen (PersonGroup) und Gruppen haben mehrere verschiedene Personen (PersonGroup).")]),e._v(" "),n("div",{staticClass:"language-graphql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-graphql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("type")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Person")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token directive function"}},[e._v("@entity")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" ID"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" String"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("groups")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("PersonGroup"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("type")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("PersonGroup")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token directive function"}},[e._v("@entity")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" ID"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("person")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" Person"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("Group")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" Group"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("type")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Group")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token directive function"}},[e._v("@entity")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" ID"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" String"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("persons")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("PersonGroup"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br"),n("span",{staticClass:"line-number"},[e._v("13")]),n("br"),n("span",{staticClass:"line-number"},[e._v("14")]),n("br"),n("span",{staticClass:"line-number"},[e._v("15")]),n("br"),n("span",{staticClass:"line-number"},[e._v("16")]),n("br"),n("span",{staticClass:"line-number"},[e._v("17")]),n("br")])]),n("p",[e._v("Außerdem ist es möglich, eine Verbindung derselben Entität in mehreren Feldern der mittleren Entität zu erstellen.")]),e._v(" "),n("p",[e._v("Ein Konto kann beispielsweise über mehrere Überweisungen verfügen und jede Überweisung hat ein Quell- und ein Zielkonto.")]),e._v(" "),n("p",[e._v("Dadurch wird eine bidirektionale Beziehung zwischen zwei Konten (von und zu) über die Transfertabelle hergestellt.")]),e._v(" "),n("div",{staticClass:"language-graphql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-graphql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("type")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Account")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token directive function"}},[e._v("@entity")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" ID"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("publicAddress")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" String"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("type")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Transfer")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token directive function"}},[e._v("@entity")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" ID"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("amount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" BigInt\n  "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("from")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" Account"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("to")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" Account"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br")])]),n("h3",{attrs:{id:"reverse-lookups"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#reverse-lookups"}},[e._v("#")]),e._v(" Reverse-Lookups")]),e._v(" "),n("p",[e._v("Um eine umgekehrte Suche einer Entität zu einer Beziehung zu ermöglichen, hängen Sie "),n("code",[e._v("@derivedFrom")]),e._v(" an das Feld an und zeigen Sie auf ihr umgekehrtes Nachschlagefeld einer anderen Entität.")]),e._v(" "),n("p",[e._v("Dadurch wird ein virtuelles Feld auf der Entität erstellt, das abgefragt werden kann.")]),e._v(" "),n("p",[e._v('Auf die Überweisung "von" einem Konto kann von der Kontoentität aus zugegriffen werden, indem der Wert von sentTransfer oder ReceivedTransfer so eingestellt wird, dass ihr Wert aus den entsprechenden from- oder to-Feldern abgeleitet wird.')]),e._v(" "),n("div",{staticClass:"language-graphql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-graphql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("type")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Account")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token directive function"}},[e._v("@entity")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" ID"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("publicAddress")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" String"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("sentTransfers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("Transfer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token directive function"}},[e._v("@derivedFrom")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("field")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"from"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("receivedTransfers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("Transfer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token directive function"}},[e._v("@derivedFrom")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("field")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"to"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("type")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Transfer")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token directive function"}},[e._v("@entity")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" ID"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("amount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" BigInt\n  "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("from")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" Account"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("to")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" Account"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br"),n("span",{staticClass:"line-number"},[e._v("13")]),n("br")])]),n("h2",{attrs:{id:"json-type"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#json-type"}},[e._v("#")]),e._v(" JSON type")]),e._v(" "),n("p",[e._v("Wir unterstützen das Speichern von Daten als JSON-Typ, was eine schnelle Möglichkeit zum Speichern strukturierter Daten darstellt. Wir generieren automatisch entsprechende JSON-Schnittstellen zum Abfragen dieser Daten und sparen Ihnen Zeit beim Definieren und Verwalten von Entitäten.")]),e._v(" "),n("p",[e._v("Wir empfehlen Benutzern, den JSON-Typ in den folgenden Szenarien zu verwenden:")]),e._v(" "),n("ul",[n("li",[e._v("Das Speichern strukturierter Daten in einem einzelnen Feld ist einfacher zu verwalten als das Erstellen mehrerer separater Entitäten.")]),e._v(" "),n("li",[e._v("Speichern beliebiger Schlüssel/Wert-Benutzereinstellungen (wobei der Wert boolesch, textuell oder numerisch sein kann und Sie keine separaten Spalten für verschiedene Datentypen haben möchten)")]),e._v(" "),n("li",[e._v("Das Schema ist flüchtig und ändert sich häufig")])]),e._v(" "),n("h3",{attrs:{id:"json-direktive-definieren"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#json-direktive-definieren"}},[e._v("#")]),e._v(" JSON-Direktive definieren")]),e._v(" "),n("p",[e._v("Definieren Sie die Eigenschaft als JSON-Typ, indem Sie die Annotation "),n("code",[e._v("jsonField")]),e._v(" in der Entität hinzufügen. Dadurch werden automatisch Schnittstellen für alle JSON-Objekte in Ihrem Projekt unter "),n("code",[e._v("types/interfaces.ts")]),e._v(" generiert, auf die Sie in Ihrer Mapping-Funktion zugreifen können.")]),e._v(" "),n("p",[e._v("Im Gegensatz zur Entität erfordert das jsonField-Direktivenobjekt kein "),n("code",[e._v("id")]),e._v("-Feld. Ein JSON-Objekt kann auch mit anderen JSON-Objekten verschachtelt werden.")]),e._v(" "),n("div",{staticClass:"language-graphql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-graphql"}},[n("code",[e._v("schreibe AddressDetail "),n("span",{pre:!0,attrs:{class:"token directive function"}},[e._v("@jsonField")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n   "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("street")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" String"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("district")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" String"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("type")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("ContactCard")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token directive function"}},[e._v("@jsonField")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("phone")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" String"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("address")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" AddressDetail "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Nested JSON")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("type")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("User")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token directive function"}},[e._v("@entity")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("id")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" ID"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("contact")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("ContactCard"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Speichern Sie eine Liste von JSON-Objekten")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br"),n("span",{staticClass:"line-number"},[e._v("13")]),n("br"),n("span",{staticClass:"line-number"},[e._v("14")]),n("br")])]),n("h3",{attrs:{id:"abfragen-von-json-feldern"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#abfragen-von-json-feldern"}},[e._v("#")]),e._v(" Abfragen von JSON-Feldern")]),e._v(" "),n("p",[e._v("Der Nachteil der Verwendung von JSON-Typen ist eine geringfügige Auswirkung auf die Abfrageeffizienz beim Filtern, da es sich bei jeder Textsuche um die gesamte Entität handelt.")]),e._v(" "),n("p",[e._v("Die Auswirkungen sind in unserem Abfrageservice jedoch noch akzeptabel. Hier ist ein Beispiel für die Verwendung des Operators "),n("code",[e._v("enthält")]),e._v(" in der GraphQL-Abfrage für ein JSON-Feld, um die ersten fünf Benutzer zu finden, die eine Telefonnummer besitzen, die „0064“ enthält.")]),e._v(" "),n("div",{staticClass:"language-graphql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-graphql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#Um die ersten 5 Benutzer zu finden, enthält die eigene Telefonnummer '0064'.")]),e._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("query")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  user"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("first")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[e._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("filter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("contactCard")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("contains")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),n("span",{pre:!0,attrs:{class:"token attr-name"}},[e._v("phone")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"0064"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    nodes "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n      id\n      contactCard\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br")])])])}),[],!1,null,null,null);t.default=a.exports}}]);