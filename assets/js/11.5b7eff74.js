(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{388:function(e,t,a){"use strict";a.r(t);var r=a(44),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"creating-a-subquery-project"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-subquery-project"}},[e._v("#")]),e._v(" Creating a SubQuery Project")]),e._v(" "),a("h2",{attrs:{id:"basic-workflow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#basic-workflow"}},[e._v("#")]),e._v(" Basic Workflow")]),e._v(" "),a("p",[e._v("Some of the following examples will assume you have successfully initialized the starter package in the "),a("RouterLink",{attrs:{to:"/quickstart/quickstart.html"}},[e._v("Quick start")]),e._v(" section. From that starter package, we'll walk through the standard process to customise and implement your own SubQuery project.")],1),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("subql init --starter PROJECT_NAME\n")])])]),a("p",[e._v("More advanced users can jump directly to the resources they need from a fresh project.")]),e._v(" "),a("p",[e._v("Creating a bespoke SubQuery project is usually done in the following manner:")]),e._v(" "),a("ol",[a("li",[e._v("Initalise your project using "),a("code",[e._v("subql init PROJECT_NAME")])]),e._v(" "),a("li",[e._v("Update the Manifest file ("),a("code",[e._v("project.yaml")]),e._v(") to include information about your blockchain, and the entities that you will map - see "),a("a",{attrs:{href:"/create/manifest"}},[e._v("Manifest File")])]),e._v(" "),a("li",[e._v("Create GraphQL entities in your schema ("),a("code",[e._v("schema.graphql")]),e._v(") that define the shape of the data that you will extract and persist for querying - see "),a("a",{attrs:{href:"/create/graphql"}},[e._v("GraphQL Schema")])]),e._v(" "),a("li",[e._v("Add all the mapping functions you wish to invoke to transform chain data to the GraphQL entities that you have defined - see "),a("a",{attrs:{href:"/create/mapping"}},[e._v("Mapping")])]),e._v(" "),a("li",[e._v("Generate code, build, and publish to SubQuery Projects (or run in your own local node) - see "),a("RouterLink",{attrs:{to:"/quickstart/quickstart.html#running-and-querying-your-starter-project"}},[e._v("Running and Querying your Starter Project")]),e._v(" in our quick start guide.")],1)]),e._v(" "),a("h2",{attrs:{id:"directory-structure"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#directory-structure"}},[e._v("#")]),e._v(" Directory Structure")]),e._v(" "),a("p",[e._v("Following map provides an overview of the directory structure of a SubQuery project.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("- project-name\n  L package.json\n  L project.yaml\n  L README.md\n  L schema.graphql\n  L tsconfig.json\n  L docker-compose.yml\n  L src\n    L index.ts\n    L mappings\n      L mappingHandlers.ts\n")])])]),a("h2",{attrs:{id:"code-generation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#code-generation"}},[e._v("#")]),e._v(" Code Generation")]),e._v(" "),a("p",[e._v("Whenever you change your GraphQL entities, you must regenerate your types directory with the following command.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("yarn codegen\n")])])]),a("p",[e._v("This will create a new directory (or update the existing) "),a("code",[e._v("src/types")]),e._v(" which contains generated entity classes for each type you have defined previously in "),a("code",[e._v("schema.graphql")]),e._v(". These classes provide type-safe entity loading, read and write access to entity fields - see more about this process in "),a("a",{attrs:{href:"/create/graphql"}},[e._v("the GraphQL Schema")]),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"build"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#build"}},[e._v("#")]),e._v(" Build")]),e._v(" "),a("p",[e._v("In order run your SubQuery Project on a locally hosted SubQuery Node, you need to build your work.")]),e._v(" "),a("p",[e._v("Run the build command from the project's root directory.")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Yarn")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("yarn")]),e._v(" build\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# NPM")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" run-script build\n")])])]),a("h2",{attrs:{id:"logging"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#logging"}},[e._v("#")]),e._v(" Logging")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("console.log")]),e._v(" method is "),a("strong",[e._v("no longer supported")]),e._v(". Instead a "),a("code",[e._v("logger")]),e._v(" module has been injected in the types, which means we can support a logger that can accept various logging levels.")]),e._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[e._v("logger"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Info level message"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\nlogger"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("debug")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Debugger level message"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\nlogger"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("warn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Warning level message"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])])]),a("p",[e._v("In addition, viewing the debug messages requires adding "),a("code",[e._v("--log-level debug")]),e._v(" in your command line.")]),e._v(" "),a("h2",{attrs:{id:"subquery-examples"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subquery-examples"}},[e._v("#")]),e._v(" SubQuery Examples")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("Example")]),e._v(" "),a("th",[e._v("Description")]),e._v(" "),a("th",[e._v("Keywords")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[a("a",{attrs:{href:"https://github.com/subquery/subql-examples/tree/main/extrinsic-finalized-block",target:"_blank",rel:"noopener noreferrer"}},[e._v("extrinsic-finalized-block"),a("OutboundLink")],1)]),e._v(" "),a("td",[e._v("Index extrinsics and so they can be queried by hash.")]),e._v(" "),a("td",[e._v("blockHandler")])]),e._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://github.com/subquery/subql-examples/tree/main/block-timestamp",target:"_blank",rel:"noopener noreferrer"}},[e._v("block-timestamp"),a("OutboundLink")],1)]),e._v(" "),a("td",[e._v("Indexes timestamp of each finalized block.")]),e._v(" "),a("td",[e._v("callHandler")])]),e._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://github.com/subquery/subql-examples/tree/main/sum-reward",target:"_blank",rel:"noopener noreferrer"}},[e._v("sum-reward"),a("OutboundLink")],1)]),e._v(" "),a("td",[e._v("Indexes staking bond, reward and slash from events of finalized block.")]),e._v(" "),a("td",[e._v("eventHandler")])]),e._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://github.com/subquery/subql-examples/tree/main/kitty",target:"_blank",rel:"noopener noreferrer"}},[e._v("kitty"),a("OutboundLink")],1)]),e._v(" "),a("td",[e._v("Indexes birthinfo of kitties.")]),e._v(" "),a("td",[e._v("callHandler, eventHandler, customTypes")])]),e._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://github.com/subquery/subql-examples/tree/main/validator-threshold",target:"_blank",rel:"noopener noreferrer"}},[e._v("validator-threshold"),a("OutboundLink")],1)]),e._v(" "),a("td",[e._v("Indexes the least staking amount required for a validator to be elected.")]),e._v(" "),a("td",[e._v("blockHandler, @polkadot/api")])]),e._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://github.com/subquery/subql-examples/tree/main/entity-relation",target:"_blank",rel:"noopener noreferrer"}},[e._v("entity-relation"),a("OutboundLink")],1)]),e._v(" "),a("td",[e._v("Indexes balance transfers between accounts, also indexes utility batchAll to find out the content of the extrinsic calls")]),e._v(" "),a("td",[e._v("One-to-many, many-to-many relationship")])])])])])}),[],!1,null,null,null);t.default=s.exports}}]);