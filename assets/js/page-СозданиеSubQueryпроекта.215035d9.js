(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{654:function(e,t,s){"use strict";s.r(t);var a=s(1),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"создание-subquery-проекта"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#создание-subquery-проекта"}},[e._v("#")]),e._v(" Создание SubQuery проекта")]),e._v(" "),s("p",[e._v("In the "),s("RouterLink",{attrs:{to:"/quickstart/quickstart.html"}},[e._v("quick start")]),e._v(" guide, we very quickly ran through an example to give you a taste of what SubQuery is and how it works. Here we'll take a closer look at the workflow when creating your project and the key files you'll be working with.")],1),e._v(" "),s("h2",{attrs:{id:"the-basic-workflow"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#the-basic-workflow"}},[e._v("#")]),e._v(" The Basic Workflow")]),e._v(" "),s("p",[e._v("Some of the following examples will assume you have successfully initialized the starter package in the "),s("RouterLink",{attrs:{to:"/ru/quickstart/quickstart.html"}},[e._v("Quick start")]),e._v(" section. From that starter package, we'll walk through the standard process to customise and implement your SubQuery project.")],1),e._v(" "),s("ol",[s("li",[e._v("Инициализируйте ваш проект с помощью "),s("code",[e._v("subql init PROJECT_NAME")])]),e._v(" "),s("li",[e._v("Update the Manifest file ("),s("code",[e._v("project.yaml")]),e._v(") to include information about your blockchain, and the entities that you will map - see "),s("RouterLink",{attrs:{to:"/ru/create/manifest.html"}},[e._v("Manifest File")])],1),e._v(" "),s("li",[e._v("Create GraphQL entities in your schema ("),s("code",[e._v("schema.graphql")]),e._v(") that define the shape of the data that you will extract and persist for querying - see "),s("RouterLink",{attrs:{to:"/ru/create/graphql.html"}},[e._v("GraphQL Schema")])],1),e._v(" "),s("li",[e._v("Add all the mapping functions (eg "),s("code",[e._v("mappingHandlers.ts")]),e._v(") you wish to invoke to transform chain data to the GraphQL entities that you have defined - see "),s("RouterLink",{attrs:{to:"/ru/create/mapping.html"}},[e._v("Mapping")])],1),e._v(" "),s("li",[e._v("Generate, build, and publish your code to SubQuery Projects (or run in your own local node) - see "),s("RouterLink",{attrs:{to:"/ru/create/quickstart.html#running-and-querying-your-starter-project"}},[e._v("Running and Querying your Starter Project")]),e._v(" in our quick start guide.")],1)]),e._v(" "),s("h2",{attrs:{id:"directory-structure"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#directory-structure"}},[e._v("#")]),e._v(" Directory Structure")]),e._v(" "),s("p",[e._v("The following map provides an overview of the directory structure of a SubQuery project when the "),s("code",[e._v("init")]),e._v(" command is run.")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("- project-name\n  L package.json\n  L project.yaml\n  L README.md\n  L schema.graphql\n  L tsconfig.json\n  L docker-compose.yml\n  L src\n    L index.ts\n    L mappings\n      L mappingHandlers.ts\n  L .gitignore\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br")])]),s("p",[e._v("For example:")]),e._v(" "),s("p",[s("img",{attrs:{src:"/assets/img/subQuery_directory_stucture.png",alt:"SubQuery directory structure"}})]),e._v(" "),s("h2",{attrs:{id:"code-generation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#code-generation"}},[e._v("#")]),e._v(" Code Generation")]),e._v(" "),s("p",[e._v("Whenever you change your GraphQL entities, you must regenerate your types directory with the following command.")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("yarn codegen\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("This will create a new directory (or update the existing) "),s("code",[e._v("src/types")]),e._v(" which contain generated entity classes for each type you have defined previously in "),s("code",[e._v("schema.graphql")]),e._v(". These classes provide type-safe entity loading, read and write access to entity fields - see more about this process in "),s("RouterLink",{attrs:{to:"/ru/create/graphql.html"}},[e._v("the GraphQL Schema")]),e._v(".")],1),e._v(" "),s("h2",{attrs:{id:"сборка"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#сборка"}},[e._v("#")]),e._v(" Сборка")]),e._v(" "),s("p",[e._v("In order to run your SubQuery Project on a locally hosted SubQuery Node, you need to first build your work.")]),e._v(" "),s("p",[e._v("Run the build command from the project's root directory.")]),e._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Yarn")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("yarn")]),e._v(" build\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# NPM")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" run-script build\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br")])]),s("h2",{attrs:{id:"ведение-журнала"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ведение-журнала"}},[e._v("#")]),e._v(" Ведение журнала")]),e._v(" "),s("p",[e._v("Метод "),s("code",[e._v("console.log")]),e._v(" "),s("strong",[e._v("больше не поддерживается")]),e._v(". Instead, a "),s("code",[e._v("logger")]),e._v(" module has been injected in the types, which means we can support a logger that can accept various logging levels.")]),e._v(" "),s("div",{staticClass:"language-typescript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[e._v("logger"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("info")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'Info level message'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\nlogger"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("debug")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'Debugger level message'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\nlogger"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("warn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'Warning level message'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br")])]),s("p",[e._v("Чтобы использовать "),s("code",[e._v("logger.info")]),e._v(" или "),s("code",[e._v("logger.warn")]),e._v(", просто поместите строку в файл сопоставления.")]),e._v(" "),s("p",[s("img",{attrs:{src:"/assets/img/logging_info.png",alt:"logging.info"}})]),e._v(" "),s("p",[e._v("Для использования "),s("code",[e._v("logger.debug")]),e._v("требуется дополнительный шаг. Добавьте "),s("code",[e._v("--log-level=debug")]),e._v(" в вашу командную строку.")]),e._v(" "),s("p",[e._v("If you are running a docker container, add this line to your "),s("code",[e._v("docker-compose.yaml")]),e._v(" file.")]),e._v(" "),s("p",[s("img",{attrs:{src:"/assets/img/logging_debug.png",alt:"logging.debug"}})]),e._v(" "),s("p",[e._v("You should now see the new logging in the terminal screen.")]),e._v(" "),s("p",[s("img",{attrs:{src:"/assets/img/subquery_logging.png",alt:"logging.debug"}})])])}),[],!1,null,null,null);t.default=r.exports}}]);