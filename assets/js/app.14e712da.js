(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[]]);!function(e){function t(t){for(var r,a,s=t[0],u=t[1],l=t[2],d=0,h=[];d<s.length;d++)a=s[d],Object.prototype.hasOwnProperty.call(o,a)&&o[a]&&h.push(o[a][0]),o[a]=0;for(r in u)Object.prototype.hasOwnProperty.call(u,r)&&(e[r]=u[r]);for(c&&c(t);h.length;)h.shift()();return i.push.apply(i,l||[]),n()}function n(){for(var e,t=0;t<i.length;t++){for(var n=i[t],r=!0,s=1;s<n.length;s++){var u=n[s];0!==o[u]&&(r=!1)}r&&(i.splice(t--,1),e=a(a.s=n[0]))}return e}var r={},o={1:0},i=[];function a(t){if(r[t])return r[t].exports;var n=r[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,a),n.l=!0,n.exports}a.e=function(e){var t=[],n=o[e];if(0!==n)if(n)t.push(n[2]);else{var r=new Promise((function(t,r){n=o[e]=[t,r]}));t.push(n[2]=r);var i,s=document.createElement("script");s.charset="utf-8",s.timeout=120,a.nc&&s.setAttribute("nonce",a.nc),s.src=function(e){return a.p+"assets/js/"+({}[e]||e)+"."+{2:"55fe9868",3:"c1509cc8",4:"2df6fe54",5:"1de3cb7e",6:"bd855a5e",7:"145e2f29",8:"42af1e98",9:"16079c0b",10:"b0a59540",11:"39887549",12:"0b6be2fb",13:"26a2c3bf",14:"bfea80cf",15:"aea06584",16:"7f4b549b",17:"e44a7b0e",18:"8dc7b684",19:"bccabd2c",20:"3a531377",21:"5d30a697",22:"1b7c6ec0",23:"830e167d",24:"9d72ccbb",25:"adadd6c6",26:"f2dd6694",27:"d5956563",28:"9f88e46f",29:"0583c229",30:"51bd537a",31:"6b1c6383"}[e]+".js"}(e);var u=new Error;i=function(t){s.onerror=s.onload=null,clearTimeout(l);var n=o[e];if(0!==n){if(n){var r=t&&("load"===t.type?"missing":t.type),i=t&&t.target&&t.target.src;u.message="Loading chunk "+e+" failed.\n("+r+": "+i+")",u.name="ChunkLoadError",u.type=r,u.request=i,n[1](u)}o[e]=void 0}};var l=setTimeout((function(){i({type:"timeout",target:s})}),12e4);s.onerror=s.onload=i,document.head.appendChild(s)}return Promise.all(t)},a.m=e,a.c=r,a.d=function(e,t,n){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(a.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)a.d(n,r,function(t){return e[t]}.bind(null,r));return n},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="/",a.oe=function(e){throw console.error(e),e};var s=window.webpackJsonp=window.webpackJsonp||[],u=s.push.bind(s);s.push=t,s=s.slice();for(var l=0;l<s.length;l++)t(s[l]);var c=u;i.push([188,0]),n()}([function(e,t,n){var r=n(3),o=n(24).f,i=n(12),a=n(14),s=n(73),u=n(117),l=n(104);e.exports=function(e,t){var n,c,d,h,p,f=e.target,y=e.global,m=e.stat;if(n=y?r:m?r[f]||s(f,{}):(r[f]||{}).prototype)for(c in t){if(h=t[c],d=e.noTargetGet?(p=o(n,c))&&p.value:n[c],!l(y?c:f+(m?".":"#")+c,e.forced)&&void 0!==d){if(typeof h==typeof d)continue;u(h,d)}(e.sham||d&&d.sham)&&i(h,"sham",!0),a(n,c,h,e)}}},function(e,t,n){var r=n(3),o=n(50),i=n(7),a=n(52),s=n(75),u=n(112),l=o("wks"),c=r.Symbol,d=u?c:c&&c.withoutSetter||a;e.exports=function(e){return i(l,e)&&(s||"string"==typeof l[e])||(s&&i(c,e)?l[e]=c[e]:l[e]=d("Symbol."+e)),l[e]}},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t){var n=function(e){return e&&e.Math==Math&&e};e.exports=n("object"==typeof globalThis&&globalThis)||n("object"==typeof window&&window)||n("object"==typeof self&&self)||n("object"==typeof global&&global)||function(){return this}()||Function("return this")()},function(e,t){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},function(e,t,n){var r=n(4);e.exports=function(e){if(!r(e))throw TypeError(String(e)+" is not an object");return e}},function(e,t,n){var r=n(2);e.exports=!r((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(e,t,n){var r=n(10),o={}.hasOwnProperty;e.exports=Object.hasOwn||function(e,t){return o.call(r(e),t)}},function(e,t,n){var r=n(6),o=n(110),i=n(5),a=n(51),s=Object.defineProperty;t.f=r?s:function(e,t,n){if(i(e),t=a(t,!0),i(n),o)try{return s(e,t,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported");return"value"in n&&(e[t]=n.value),e}},function(e,t,n){var r=n(83),o=n(14),i=n(200);r||o(Object.prototype,"toString",i,{unsafe:!0})},function(e,t,n){var r=n(23);e.exports=function(e){return Object(r(e))}},function(e,t,n){"use strict";var r=n(107).charAt,o=n(28),i=n(116),a=o.set,s=o.getterFor("String Iterator");i(String,"String",(function(e){a(this,{type:"String Iterator",string:String(e),index:0})}),(function(){var e,t=s(this),n=t.string,o=t.index;return o>=n.length?{value:void 0,done:!0}:(e=r(n,o),t.index+=e.length,{value:e,done:!1})}))},function(e,t,n){var r=n(6),o=n(8),i=n(31);e.exports=r?function(e,t,n){return o.f(e,t,i(1,n))}:function(e,t,n){return e[t]=n,e}},function(e,t,n){var r=n(46),o=Math.min;e.exports=function(e){return e>0?o(r(e),9007199254740991):0}},function(e,t,n){var r=n(3),o=n(12),i=n(7),a=n(73),s=n(79),u=n(28),l=u.get,c=u.enforce,d=String(String).split("String");(e.exports=function(e,t,n,s){var u,l=!!s&&!!s.unsafe,h=!!s&&!!s.enumerable,p=!!s&&!!s.noTargetGet;"function"==typeof n&&("string"!=typeof t||i(n,"name")||o(n,"name",t),(u=c(n)).source||(u.source=d.join("string"==typeof t?t:""))),e!==r?(l?!p&&e[t]&&(h=!0):delete e[t],h?e[t]=n:o(e,t,n)):h?e[t]=n:a(t,n)})(Function.prototype,"toString",(function(){return"function"==typeof this&&l(this).source||s(this)}))},function(e,t,n){var r=n(36),o=n(23);e.exports=function(e){return r(o(e))}},function(e,t,n){var r=n(3),o=n(129),i=n(102),a=n(12),s=n(1),u=s("iterator"),l=s("toStringTag"),c=i.values;for(var d in o){var h=r[d],p=h&&h.prototype;if(p){if(p[u]!==c)try{a(p,u,c)}catch(e){p[u]=c}if(p[l]||a(p,l,d),o[d])for(var f in i)if(p[f]!==i[f])try{a(p,f,i[f])}catch(e){p[f]=i[f]}}}},function(e,t){var n=Array.isArray;e.exports=n},function(e,t,n){var r=n(140),o="object"==typeof self&&self&&self.Object===Object&&self,i=r||o||Function("return this")();e.exports=i},function(e,t,n){var r=n(111),o=n(3),i=function(e){return"function"==typeof e?e:void 0};e.exports=function(e,t){return arguments.length<2?i(r[e])||i(o[e]):r[e]&&r[e][t]||o[e]&&o[e][t]}},function(e,t){e.exports=!1},function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(String(e)+" is not a function");return e}},function(e,t,n){var r=n(227),o=n(230);e.exports=function(e,t){var n=o(e,t);return r(n)?n:void 0}},function(e,t){e.exports=function(e){if(null==e)throw TypeError("Can't call method on "+e);return e}},function(e,t,n){var r=n(6),o=n(80),i=n(31),a=n(15),s=n(51),u=n(7),l=n(110),c=Object.getOwnPropertyDescriptor;t.f=r?c:function(e,t){if(e=a(e),t=s(t,!0),l)try{return c(e,t)}catch(e){}if(u(e,t))return i(!o.f.call(e,t),e[t])}},function(e,t){e.exports=function(e){return null!=e&&"object"==typeof e}},function(e,t){var n={}.toString;e.exports=function(e){return n.call(e).slice(8,-1)}},function(e,t,n){"use strict";var r=n(0),o=n(29).filter;r({target:"Array",proto:!0,forced:!n(58)("filter")},{filter:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}})},function(e,t,n){var r,o,i,a=n(189),s=n(3),u=n(4),l=n(12),c=n(7),d=n(72),h=n(54),p=n(38),f=s.WeakMap;if(a||d.state){var y=d.state||(d.state=new f),m=y.get,g=y.has,b=y.set;r=function(e,t){if(g.call(y,e))throw new TypeError("Object already initialized");return t.facade=e,b.call(y,e,t),t},o=function(e){return m.call(y,e)||{}},i=function(e){return g.call(y,e)}}else{var v=h("state");p[v]=!0,r=function(e,t){if(c(e,v))throw new TypeError("Object already initialized");return t.facade=e,l(e,v,t),t},o=function(e){return c(e,v)?e[v]:{}},i=function(e){return c(e,v)}}e.exports={set:r,get:o,has:i,enforce:function(e){return i(e)?o(e):r(e,{})},getterFor:function(e){return function(t){var n;if(!u(t)||(n=o(t)).type!==e)throw TypeError("Incompatible receiver, "+e+" required");return n}}}},function(e,t,n){var r=n(48),o=n(36),i=n(10),a=n(13),s=n(108),u=[].push,l=function(e){var t=1==e,n=2==e,l=3==e,c=4==e,d=6==e,h=7==e,p=5==e||d;return function(f,y,m,g){for(var b,v,w=i(f),k=o(w),x=r(y,m,3),j=a(k.length),q=0,S=g||s,_=t?S(f,j):n||h?S(f,0):void 0;j>q;q++)if((p||q in k)&&(v=x(b=k[q],q,w),e))if(t)_[q]=v;else if(v)switch(e){case 3:return!0;case 5:return b;case 6:return q;case 2:u.call(_,b)}else switch(e){case 4:return!1;case 7:u.call(_,b)}return d?-1:l||c?c:_}};e.exports={forEach:l(0),map:l(1),filter:l(2),some:l(3),every:l(4),find:l(5),findIndex:l(6),filterOut:l(7)}},function(e,t,n){"use strict";var r=n(2);e.exports=function(e,t){var n=[][e];return!!n&&r((function(){n.call(null,t||function(){throw 1},1)}))}},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t,n){var r,o=n(5),i=n(169),a=n(78),s=n(38),u=n(115),l=n(74),c=n(54),d=c("IE_PROTO"),h=function(){},p=function(e){return"<script>"+e+"<\/script>"},f=function(){try{r=document.domain&&new ActiveXObject("htmlfile")}catch(e){}var e,t;f=r?function(e){e.write(p("")),e.close();var t=e.parentWindow.Object;return e=null,t}(r):((t=l("iframe")).style.display="none",u.appendChild(t),t.src=String("javascript:"),(e=t.contentWindow.document).open(),e.write(p("document.F=Object")),e.close(),e.F);for(var n=a.length;n--;)delete f.prototype[a[n]];return f()};s[d]=!0,e.exports=Object.create||function(e,t){var n;return null!==e?(h.prototype=o(e),n=new h,h.prototype=null,n[d]=e):n=f(),void 0===t?n:i(n,t)}},function(e,t,n){var r=n(26);e.exports=Array.isArray||function(e){return"Array"==r(e)}},function(e,t,n){"use strict";var r=n(0),o=n(3),i=n(19),a=n(20),s=n(6),u=n(75),l=n(112),c=n(2),d=n(7),h=n(33),p=n(4),f=n(5),y=n(10),m=n(15),g=n(51),b=n(31),v=n(32),w=n(53),k=n(69),x=n(206),j=n(81),q=n(24),S=n(8),_=n(80),T=n(12),P=n(14),O=n(50),I=n(54),C=n(38),A=n(52),E=n(1),L=n(135),Q=n(136),$=n(47),R=n(28),z=n(29).forEach,M=I("hidden"),N=E("toPrimitive"),D=R.set,H=R.getterFor("Symbol"),B=Object.prototype,F=o.Symbol,U=i("JSON","stringify"),G=q.f,W=S.f,V=x.f,Y=_.f,J=O("symbols"),K=O("op-symbols"),Z=O("string-to-symbol-registry"),X=O("symbol-to-string-registry"),ee=O("wks"),te=o.QObject,ne=!te||!te.prototype||!te.prototype.findChild,re=s&&c((function(){return 7!=v(W({},"a",{get:function(){return W(this,"a",{value:7}).a}})).a}))?function(e,t,n){var r=G(B,t);r&&delete B[t],W(e,t,n),r&&e!==B&&W(B,t,r)}:W,oe=function(e,t){var n=J[e]=v(F.prototype);return D(n,{type:"Symbol",tag:e,description:t}),s||(n.description=t),n},ie=l?function(e){return"symbol"==typeof e}:function(e){return Object(e)instanceof F},ae=function(e,t,n){e===B&&ae(K,t,n),f(e);var r=g(t,!0);return f(n),d(J,r)?(n.enumerable?(d(e,M)&&e[M][r]&&(e[M][r]=!1),n=v(n,{enumerable:b(0,!1)})):(d(e,M)||W(e,M,b(1,{})),e[M][r]=!0),re(e,r,n)):W(e,r,n)},se=function(e,t){f(e);var n=m(t),r=w(n).concat(de(n));return z(r,(function(t){s&&!ue.call(n,t)||ae(e,t,n[t])})),e},ue=function(e){var t=g(e,!0),n=Y.call(this,t);return!(this===B&&d(J,t)&&!d(K,t))&&(!(n||!d(this,t)||!d(J,t)||d(this,M)&&this[M][t])||n)},le=function(e,t){var n=m(e),r=g(t,!0);if(n!==B||!d(J,r)||d(K,r)){var o=G(n,r);return!o||!d(J,r)||d(n,M)&&n[M][r]||(o.enumerable=!0),o}},ce=function(e){var t=V(m(e)),n=[];return z(t,(function(e){d(J,e)||d(C,e)||n.push(e)})),n},de=function(e){var t=e===B,n=V(t?K:m(e)),r=[];return z(n,(function(e){!d(J,e)||t&&!d(B,e)||r.push(J[e])})),r};(u||(P((F=function(){if(this instanceof F)throw TypeError("Symbol is not a constructor");var e=arguments.length&&void 0!==arguments[0]?String(arguments[0]):void 0,t=A(e),n=function(e){this===B&&n.call(K,e),d(this,M)&&d(this[M],t)&&(this[M][t]=!1),re(this,t,b(1,e))};return s&&ne&&re(B,t,{configurable:!0,set:n}),oe(t,e)}).prototype,"toString",(function(){return H(this).tag})),P(F,"withoutSetter",(function(e){return oe(A(e),e)})),_.f=ue,S.f=ae,q.f=le,k.f=x.f=ce,j.f=de,L.f=function(e){return oe(E(e),e)},s&&(W(F.prototype,"description",{configurable:!0,get:function(){return H(this).description}}),a||P(B,"propertyIsEnumerable",ue,{unsafe:!0}))),r({global:!0,wrap:!0,forced:!u,sham:!u},{Symbol:F}),z(w(ee),(function(e){Q(e)})),r({target:"Symbol",stat:!0,forced:!u},{for:function(e){var t=String(e);if(d(Z,t))return Z[t];var n=F(t);return Z[t]=n,X[n]=t,n},keyFor:function(e){if(!ie(e))throw TypeError(e+" is not a symbol");if(d(X,e))return X[e]},useSetter:function(){ne=!0},useSimple:function(){ne=!1}}),r({target:"Object",stat:!0,forced:!u,sham:!s},{create:function(e,t){return void 0===t?v(e):se(v(e),t)},defineProperty:ae,defineProperties:se,getOwnPropertyDescriptor:le}),r({target:"Object",stat:!0,forced:!u},{getOwnPropertyNames:ce,getOwnPropertySymbols:de}),r({target:"Object",stat:!0,forced:c((function(){j.f(1)}))},{getOwnPropertySymbols:function(e){return j.f(y(e))}}),U)&&r({target:"JSON",stat:!0,forced:!u||c((function(){var e=F();return"[null]"!=U([e])||"{}"!=U({a:e})||"{}"!=U(Object(e))}))},{stringify:function(e,t,n){for(var r,o=[e],i=1;arguments.length>i;)o.push(arguments[i++]);if(r=t,(p(t)||void 0!==e)&&!ie(e))return h(t)||(t=function(e,t){if("function"==typeof r&&(t=r.call(this,e,t)),!ie(t))return t}),o[1]=t,U.apply(null,o)}});F.prototype[N]||T(F.prototype,N,F.prototype.valueOf),$(F,"Symbol"),C[M]=!0},function(e,t,n){var r=n(41),o=n(212),i=n(213),a=r?r.toStringTag:void 0;e.exports=function(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":a&&a in Object(e)?o(e):i(e)}},function(e,t,n){var r=n(2),o=n(26),i="".split;e.exports=r((function(){return!Object("z").propertyIsEnumerable(0)}))?function(e){return"String"==o(e)?i.call(e,""):Object(e)}:Object},function(e,t,n){var r,o,i=n(3),a=n(76),s=i.process,u=s&&s.versions,l=u&&u.v8;l?o=(r=l.split("."))[0]<4?1:r[0]+r[1]:a&&(!(r=a.match(/Edge\/(\d+)/))||r[1]>=74)&&(r=a.match(/Chrome\/(\d+)/))&&(o=r[1]),e.exports=o&&+o},function(e,t){e.exports={}},function(e,t){e.exports={}},function(e,t,n){"use strict";var r=n(0),o=n(6),i=n(3),a=n(7),s=n(4),u=n(8).f,l=n(117),c=i.Symbol;if(o&&"function"==typeof c&&(!("description"in c.prototype)||void 0!==c().description)){var d={},h=function(){var e=arguments.length<1||void 0===arguments[0]?void 0:String(arguments[0]),t=this instanceof h?new c(e):void 0===e?c():c(e);return""===e&&(d[t]=!0),t};l(h,c);var p=h.prototype=c.prototype;p.constructor=h;var f=p.toString,y="Symbol(test)"==String(c("test")),m=/^Symbol\((.*)\)[^)]+$/;u(p,"description",{configurable:!0,get:function(){var e=s(this)?this.valueOf():this,t=f.call(e);if(a(d,e))return"";var n=y?t.slice(7,-1):t.replace(m,"$1");return""===n?void 0:n}}),r({global:!0,forced:!0},{Symbol:h})}},function(e,t,n){var r=n(18).Symbol;e.exports=r},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));n(101);var r=n(43);n(34),n(40),n(9),n(59),n(11),n(16),n(137);var o=n(65);function i(e){return function(e){if(Array.isArray(e))return Object(r.a)(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||Object(o.a)(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},function(e,t,n){"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}n.d(t,"a",(function(){return r}))},function(e,t,n){"use strict";function r(e,t,n,r,o,i,a,s){var u,l="function"==typeof e?e.options:e;if(t&&(l.render=t,l.staticRenderFns=n,l._compiled=!0),r&&(l.functional=!0),i&&(l._scopeId="data-v-"+i),a?(u=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),o&&o.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(a)},l._ssrRegister=u):o&&(u=s?function(){o.call(this,(l.functional?this.parent:this).$root.$options.shadowRoot)}:o),u)if(l.functional){l._injectStyles=u;var c=l.render;l.render=function(e,t){return u.call(t),c(e,t)}}else{var d=l.beforeCreate;l.beforeCreate=d?[].concat(d,u):[u]}return{exports:e,options:l}}n.d(t,"a",(function(){return r}))},function(e,t,n){"use strict";var r=n(0),o=n(71);r({target:"RegExp",proto:!0,forced:/./.exec!==o},{exec:o})},function(e,t){var n=Math.ceil,r=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?r:n)(e)}},function(e,t,n){var r=n(8).f,o=n(7),i=n(1)("toStringTag");e.exports=function(e,t,n){e&&!o(e=n?e:e.prototype,i)&&r(e,i,{configurable:!0,value:t})}},function(e,t,n){var r=n(21);e.exports=function(e,t,n){if(r(e),void 0===t)return e;switch(n){case 0:return function(){return e.call(t)};case 1:return function(n){return e.call(t,n)};case 2:return function(n,r){return e.call(t,n,r)};case 3:return function(n,r,o){return e.call(t,n,r,o)}}return function(){return e.apply(t,arguments)}}},function(e,t,n){"use strict";var r=n(0),o=n(4),i=n(33),a=n(114),s=n(13),u=n(15),l=n(57),c=n(1),d=n(58)("slice"),h=c("species"),p=[].slice,f=Math.max;r({target:"Array",proto:!0,forced:!d},{slice:function(e,t){var n,r,c,d=u(this),y=s(d.length),m=a(e,y),g=a(void 0===t?y:t,y);if(i(d)&&("function"!=typeof(n=d.constructor)||n!==Array&&!i(n.prototype)?o(n)&&null===(n=n[h])&&(n=void 0):n=void 0,n===Array||void 0===n))return p.call(d,m,g);for(r=new(void 0===n?Array:n)(f(g-m,0)),c=0;m<g;m++,c++)m in d&&l(r,c,d[m]);return r.length=c,r}})},function(e,t,n){var r=n(20),o=n(72);(e.exports=function(e,t){return o[e]||(o[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.14.0",mode:r?"pure":"global",copyright:"© 2021 Denis Pushkarev (zloirock.ru)"})},function(e,t,n){var r=n(4);e.exports=function(e,t){if(!r(e))return e;var n,o;if(t&&"function"==typeof(n=e.toString)&&!r(o=n.call(e)))return o;if("function"==typeof(n=e.valueOf)&&!r(o=n.call(e)))return o;if(!t&&"function"==typeof(n=e.toString)&&!r(o=n.call(e)))return o;throw TypeError("Can't convert object to primitive value")}},function(e,t){var n=0,r=Math.random();e.exports=function(e){return"Symbol("+String(void 0===e?"":e)+")_"+(++n+r).toString(36)}},function(e,t,n){var r=n(113),o=n(78);e.exports=Object.keys||function(e){return r(e,o)}},function(e,t,n){var r=n(50),o=n(52),i=r("keys");e.exports=function(e){return i[e]||(i[e]=o(e))}},function(e,t,n){var r=n(26),o=n(3);e.exports="process"==r(o.process)},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));n(9);function r(e,t,n,r,o,i,a){try{var s=e[i](a),u=s.value}catch(e){return void n(e)}s.done?t(u):Promise.resolve(u).then(r,o)}function o(e){return function(){var t=this,n=arguments;return new Promise((function(o,i){var a=e.apply(t,n);function s(e){r(a,o,i,s,u,"next",e)}function u(e){r(a,o,i,s,u,"throw",e)}s(void 0)}))}}},function(e,t,n){"use strict";var r=n(51),o=n(8),i=n(31);e.exports=function(e,t,n){var a=r(t);a in e?o.f(e,a,i(0,n)):e[a]=n}},function(e,t,n){var r=n(2),o=n(1),i=n(37),a=o("species");e.exports=function(e){return i>=51||!r((function(){var t=[];return(t.constructor={})[a]=function(){return{foo:1}},1!==t[e](Boolean).foo}))}},function(e,t,n){n(136)("iterator")},function(e,t,n){var r=n(217),o=n(218),i=n(219),a=n(220),s=n(221);function u(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}u.prototype.clear=r,u.prototype.delete=o,u.prototype.get=i,u.prototype.has=a,u.prototype.set=s,e.exports=u},function(e,t,n){var r=n(142);e.exports=function(e,t){for(var n=e.length;n--;)if(r(e[n][0],t))return n;return-1}},function(e,t,n){var r=n(22)(Object,"create");e.exports=r},function(e,t,n){var r=n(239);e.exports=function(e,t){var n=e.__data__;return r(t)?n["string"==typeof t?"string":"hash"]:n.map}},function(e,t,n){var r=n(92);e.exports=function(e){if("string"==typeof e||r(e))return e;var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));n(49),n(9),n(84),n(137),n(11);var r=n(43);function o(e,t){if(e){if("string"==typeof e)return Object(r.a)(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Object(r.a)(e,t):void 0}}},function(e,t,n){var r,o;
/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */void 0===(o="function"==typeof(r=function(){var e,t,n={version:"0.2.0"},r=n.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function o(e,t,n){return e<t?t:e>n?n:e}function i(e){return 100*(-1+e)}n.configure=function(e){var t,n;for(t in e)void 0!==(n=e[t])&&e.hasOwnProperty(t)&&(r[t]=n);return this},n.status=null,n.set=function(e){var t=n.isStarted();e=o(e,r.minimum,1),n.status=1===e?null:e;var u=n.render(!t),l=u.querySelector(r.barSelector),c=r.speed,d=r.easing;return u.offsetWidth,a((function(t){""===r.positionUsing&&(r.positionUsing=n.getPositioningCSS()),s(l,function(e,t,n){var o;return(o="translate3d"===r.positionUsing?{transform:"translate3d("+i(e)+"%,0,0)"}:"translate"===r.positionUsing?{transform:"translate("+i(e)+"%,0)"}:{"margin-left":i(e)+"%"}).transition="all "+t+"ms "+n,o}(e,c,d)),1===e?(s(u,{transition:"none",opacity:1}),u.offsetWidth,setTimeout((function(){s(u,{transition:"all "+c+"ms linear",opacity:0}),setTimeout((function(){n.remove(),t()}),c)}),c)):setTimeout(t,c)})),this},n.isStarted=function(){return"number"==typeof n.status},n.start=function(){n.status||n.set(0);var e=function(){setTimeout((function(){n.status&&(n.trickle(),e())}),r.trickleSpeed)};return r.trickle&&e(),this},n.done=function(e){return e||n.status?n.inc(.3+.5*Math.random()).set(1):this},n.inc=function(e){var t=n.status;return t?("number"!=typeof e&&(e=(1-t)*o(Math.random()*t,.1,.95)),t=o(t+e,0,.994),n.set(t)):n.start()},n.trickle=function(){return n.inc(Math.random()*r.trickleRate)},e=0,t=0,n.promise=function(r){return r&&"resolved"!==r.state()?(0===t&&n.start(),e++,t++,r.always((function(){0==--t?(e=0,n.done()):n.set((e-t)/e)})),this):this},n.render=function(e){if(n.isRendered())return document.getElementById("nprogress");l(document.documentElement,"nprogress-busy");var t=document.createElement("div");t.id="nprogress",t.innerHTML=r.template;var o,a=t.querySelector(r.barSelector),u=e?"-100":i(n.status||0),c=document.querySelector(r.parent);return s(a,{transition:"all 0 linear",transform:"translate3d("+u+"%,0,0)"}),r.showSpinner||(o=t.querySelector(r.spinnerSelector))&&h(o),c!=document.body&&l(c,"nprogress-custom-parent"),c.appendChild(t),t},n.remove=function(){c(document.documentElement,"nprogress-busy"),c(document.querySelector(r.parent),"nprogress-custom-parent");var e=document.getElementById("nprogress");e&&h(e)},n.isRendered=function(){return!!document.getElementById("nprogress")},n.getPositioningCSS=function(){var e=document.body.style,t="WebkitTransform"in e?"Webkit":"MozTransform"in e?"Moz":"msTransform"in e?"ms":"OTransform"in e?"O":"";return t+"Perspective"in e?"translate3d":t+"Transform"in e?"translate":"margin"};var a=function(){var e=[];function t(){var n=e.shift();n&&n(t)}return function(n){e.push(n),1==e.length&&t()}}(),s=function(){var e=["Webkit","O","Moz","ms"],t={};function n(n){return n=n.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(e,t){return t.toUpperCase()})),t[n]||(t[n]=function(t){var n=document.body.style;if(t in n)return t;for(var r,o=e.length,i=t.charAt(0).toUpperCase()+t.slice(1);o--;)if((r=e[o]+i)in n)return r;return t}(n))}function r(e,t,r){t=n(t),e.style[t]=r}return function(e,t){var n,o,i=arguments;if(2==i.length)for(n in t)void 0!==(o=t[n])&&t.hasOwnProperty(n)&&r(e,n,o);else r(e,i[1],i[2])}}();function u(e,t){return("string"==typeof e?e:d(e)).indexOf(" "+t+" ")>=0}function l(e,t){var n=d(e),r=n+t;u(n,t)||(e.className=r.substring(1))}function c(e,t){var n,r=d(e);u(e,t)&&(n=r.replace(" "+t+" "," "),e.className=n.substring(1,n.length-1))}function d(e){return(" "+(e.className||"")+" ").replace(/\s+/gi," ")}function h(e){e&&e.parentNode&&e.parentNode.removeChild(e)}return n})?r.call(t,n,t,e):r)||(e.exports=o)},function(e,t,n){"use strict";var r=n(0),o=n(29).map;r({target:"Array",proto:!0,forced:!n(58)("map")},{map:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}})},function(e,t,n){"use strict";var r=n(166),o=n(5),i=n(13),a=n(46),s=n(23),u=n(174),l=n(208),c=n(167),d=Math.max,h=Math.min;r("replace",2,(function(e,t,n,r){var p=r.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE,f=r.REPLACE_KEEPS_$0,y=p?"$":"$0";return[function(n,r){var o=s(this),i=null==n?void 0:n[e];return void 0!==i?i.call(n,o,r):t.call(String(o),n,r)},function(e,r){if(!p&&f||"string"==typeof r&&-1===r.indexOf(y)){var s=n(t,e,this,r);if(s.done)return s.value}var m=o(e),g=String(this),b="function"==typeof r;b||(r=String(r));var v=m.global;if(v){var w=m.unicode;m.lastIndex=0}for(var k=[];;){var x=c(m,g);if(null===x)break;if(k.push(x),!v)break;""===String(x[0])&&(m.lastIndex=u(g,i(m.lastIndex),w))}for(var j,q="",S=0,_=0;_<k.length;_++){x=k[_];for(var T=String(x[0]),P=d(h(a(x.index),g.length),0),O=[],I=1;I<x.length;I++)O.push(void 0===(j=x[I])?j:String(j));var C=x.groups;if(b){var A=[T].concat(O,P,g);void 0!==C&&A.push(C);var E=String(r.apply(void 0,A))}else E=l(T,g,P,O,C,r);P>=S&&(q+=g.slice(S,P)+E,S=P+T.length)}return q+g.slice(S)}]}))},function(e,t,n){var r=n(113),o=n(78).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return r(e,o)}},function(e,t,n){var r=n(5),o=n(190);e.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=!1,n={};try{(e=Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set).call(n,[]),t=n instanceof Array}catch(e){}return function(n,i){return r(n),o(i),t?e.call(n,i):n.__proto__=i,n}}():void 0)},function(e,t,n){"use strict";var r,o,i=n(172),a=n(173),s=n(50),u=RegExp.prototype.exec,l=s("native-string-replace",String.prototype.replace),c=u,d=(r=/a/,o=/b*/g,u.call(r,"a"),u.call(o,"a"),0!==r.lastIndex||0!==o.lastIndex),h=a.UNSUPPORTED_Y||a.BROKEN_CARET,p=void 0!==/()??/.exec("")[1];(d||p||h)&&(c=function(e){var t,n,r,o,a=this,s=h&&a.sticky,c=i.call(a),f=a.source,y=0,m=e;return s&&(-1===(c=c.replace("y","")).indexOf("g")&&(c+="g"),m=String(e).slice(a.lastIndex),a.lastIndex>0&&(!a.multiline||a.multiline&&"\n"!==e[a.lastIndex-1])&&(f="(?: "+f+")",m=" "+m,y++),n=new RegExp("^(?:"+f+")",c)),p&&(n=new RegExp("^"+f+"$(?!\\s)",c)),d&&(t=a.lastIndex),r=u.call(s?n:a,m),s?r?(r.input=r.input.slice(y),r[0]=r[0].slice(y),r.index=a.lastIndex,a.lastIndex+=r[0].length):a.lastIndex=0:d&&r&&(a.lastIndex=a.global?r.index+r[0].length:t),p&&r&&r.length>1&&l.call(r[0],n,(function(){for(o=1;o<arguments.length-2;o++)void 0===arguments[o]&&(r[o]=void 0)})),r}),e.exports=c},function(e,t,n){var r=n(3),o=n(73),i=r["__core-js_shared__"]||o("__core-js_shared__",{});e.exports=i},function(e,t,n){var r=n(3),o=n(12);e.exports=function(e,t){try{o(r,e,t)}catch(n){r[e]=t}return t}},function(e,t,n){var r=n(3),o=n(4),i=r.document,a=o(i)&&o(i.createElement);e.exports=function(e){return a?i.createElement(e):{}}},function(e,t,n){var r=n(37),o=n(2);e.exports=!!Object.getOwnPropertySymbols&&!o((function(){var e=Symbol();return!String(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&r&&r<41}))},function(e,t,n){var r=n(19);e.exports=r("navigator","userAgent")||""},function(e,t,n){var r=n(15),o=n(13),i=n(114),a=function(e){return function(t,n,a){var s,u=r(t),l=o(u.length),c=i(a,l);if(e&&n!=n){for(;l>c;)if((s=u[c++])!=s)return!0}else for(;l>c;c++)if((e||c in u)&&u[c]===n)return e||c||0;return!e&&-1}};e.exports={includes:a(!0),indexOf:a(!1)}},function(e,t){e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(e,t,n){var r=n(72),o=Function.toString;"function"!=typeof r.inspectSource&&(r.inspectSource=function(e){return o.call(e)}),e.exports=r.inspectSource},function(e,t,n){"use strict";var r={}.propertyIsEnumerable,o=Object.getOwnPropertyDescriptor,i=o&&!r.call({1:2},1);t.f=i?function(e){var t=o(this,e);return!!t&&t.enumerable}:r},function(e,t){t.f=Object.getOwnPropertySymbols},function(e,t,n){var r=n(7),o=n(10),i=n(54),a=n(120),s=i("IE_PROTO"),u=Object.prototype;e.exports=a?Object.getPrototypeOf:function(e){return e=o(e),r(e,s)?e[s]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?u:null}},function(e,t,n){var r={};r[n(1)("toStringTag")]="z",e.exports="[object z]"===String(r)},function(e,t,n){var r=n(6),o=n(8).f,i=Function.prototype,a=i.toString,s=/^\s*function ([^ (]*)/;r&&!("name"in i)&&o(i,"name",{configurable:!0,get:function(){try{return a.call(this).match(s)[1]}catch(e){return""}}})},function(e,t,n){var r=n(211),o=n(25),i=Object.prototype,a=i.hasOwnProperty,s=i.propertyIsEnumerable,u=r(function(){return arguments}())?r:function(e){return o(e)&&a.call(e,"callee")&&!s.call(e,"callee")};e.exports=u},function(e,t,n){var r=n(22)(n(18),"Map");e.exports=r},function(e,t){e.exports=function(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)}},function(e,t,n){var r=n(231),o=n(238),i=n(240),a=n(241),s=n(242);function u(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}u.prototype.clear=r,u.prototype.delete=o,u.prototype.get=i,u.prototype.has=a,u.prototype.set=s,e.exports=u},function(e,t){e.exports=function(e){var t=-1,n=Array(e.size);return e.forEach((function(e){n[++t]=e})),n}},function(e,t){e.exports=function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=9007199254740991}},function(e,t,n){var r=n(17),o=n(92),i=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,a=/^\w*$/;e.exports=function(e,t){if(r(e))return!1;var n=typeof e;return!("number"!=n&&"symbol"!=n&&"boolean"!=n&&null!=e&&!o(e))||(a.test(e)||!i.test(e)||null!=t&&e in Object(t))}},function(e,t,n){var r=n(35),o=n(25);e.exports=function(e){return"symbol"==typeof e||o(e)&&"[object Symbol]"==r(e)}},function(e,t){e.exports=function(e){return e}},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));n(101);n(34),n(40),n(9),n(59),n(11),n(16);var r=n(65);function o(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,s=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){s=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(s)throw o}}return i}}(e,t)||Object(r.a)(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},function(e,t,n){"use strict";var r=n(0),o=n(29).some;r({target:"Array",proto:!0,forced:!n(30)("some")},{some:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}})},function(e,t,n){var r=n(0),o=n(10),i=n(53);r({target:"Object",stat:!0,forced:n(2)((function(){i(1)}))},{keys:function(e){return i(o(e))}})},function(e,t,n){"use strict";var r=n(0),o=n(133);r({target:"Array",proto:!0,forced:[].forEach!=o},{forEach:o})},function(e,t,n){var r=n(3),o=n(129),i=n(133),a=n(12);for(var s in o){var u=r[s],l=u&&u.prototype;if(l&&l.forEach!==i)try{a(l,"forEach",i)}catch(e){l.forEach=i}}},function(e,t,n){var r=n(105),o=n(39),i=n(1)("iterator");e.exports=function(e){if(null!=e)return e[i]||e["@@iterator"]||o[r(e)]}},function(e,t,n){var r=function(e){"use strict";var t=Object.prototype,n=t.hasOwnProperty,r="function"==typeof Symbol?Symbol:{},o=r.iterator||"@@iterator",i=r.asyncIterator||"@@asyncIterator",a=r.toStringTag||"@@toStringTag";function s(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{s({},"")}catch(e){s=function(e,t,n){return e[t]=n}}function u(e,t,n,r){var o=t&&t.prototype instanceof d?t:d,i=Object.create(o.prototype),a=new j(r||[]);return i._invoke=function(e,t,n){var r="suspendedStart";return function(o,i){if("executing"===r)throw new Error("Generator is already running");if("completed"===r){if("throw"===o)throw i;return S()}for(n.method=o,n.arg=i;;){var a=n.delegate;if(a){var s=w(a,n);if(s){if(s===c)continue;return s}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if("suspendedStart"===r)throw r="completed",n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r="executing";var u=l(e,t,n);if("normal"===u.type){if(r=n.done?"completed":"suspendedYield",u.arg===c)continue;return{value:u.arg,done:n.done}}"throw"===u.type&&(r="completed",n.method="throw",n.arg=u.arg)}}}(e,n,a),i}function l(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}e.wrap=u;var c={};function d(){}function h(){}function p(){}var f={};s(f,o,(function(){return this}));var y=Object.getPrototypeOf,m=y&&y(y(q([])));m&&m!==t&&n.call(m,o)&&(f=m);var g=p.prototype=d.prototype=Object.create(f);function b(e){["next","throw","return"].forEach((function(t){s(e,t,(function(e){return this._invoke(t,e)}))}))}function v(e,t){var r;this._invoke=function(o,i){function a(){return new t((function(r,a){!function r(o,i,a,s){var u=l(e[o],e,i);if("throw"!==u.type){var c=u.arg,d=c.value;return d&&"object"==typeof d&&n.call(d,"__await")?t.resolve(d.__await).then((function(e){r("next",e,a,s)}),(function(e){r("throw",e,a,s)})):t.resolve(d).then((function(e){c.value=e,a(c)}),(function(e){return r("throw",e,a,s)}))}s(u.arg)}(o,i,r,a)}))}return r=r?r.then(a,a):a()}}function w(e,t){var n=e.iterator[t.method];if(void 0===n){if(t.delegate=null,"throw"===t.method){if(e.iterator.return&&(t.method="return",t.arg=void 0,w(e,t),"throw"===t.method))return c;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return c}var r=l(n,e.iterator,t.arg);if("throw"===r.type)return t.method="throw",t.arg=r.arg,t.delegate=null,c;var o=r.arg;return o?o.done?(t[e.resultName]=o.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,c):o:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,c)}function k(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function x(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function j(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(k,this),this.reset(!0)}function q(e){if(e){var t=e[o];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var r=-1,i=function t(){for(;++r<e.length;)if(n.call(e,r))return t.value=e[r],t.done=!1,t;return t.value=void 0,t.done=!0,t};return i.next=i}}return{next:S}}function S(){return{value:void 0,done:!0}}return h.prototype=p,s(g,"constructor",p),s(p,"constructor",h),h.displayName=s(p,a,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===h||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,p):(e.__proto__=p,s(e,a,"GeneratorFunction")),e.prototype=Object.create(g),e},e.awrap=function(e){return{__await:e}},b(v.prototype),s(v.prototype,i,(function(){return this})),e.AsyncIterator=v,e.async=function(t,n,r,o,i){void 0===i&&(i=Promise);var a=new v(u(t,n,r,o),i);return e.isGeneratorFunction(n)?a:a.next().then((function(e){return e.done?e.value:a.next()}))},b(g),s(g,a,"Generator"),s(g,o,(function(){return this})),s(g,"toString",(function(){return"[object Generator]"})),e.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){for(;t.length;){var r=t.pop();if(r in e)return n.value=r,n.done=!1,n}return n.done=!0,n}},e.values=q,j.prototype={constructor:j,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(x),!e)for(var t in this)"t"===t.charAt(0)&&n.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function r(n,r){return a.type="throw",a.arg=e,t.next=n,r&&(t.method="next",t.arg=void 0),!!r}for(var o=this.tryEntries.length-1;o>=0;--o){var i=this.tryEntries[o],a=i.completion;if("root"===i.tryLoc)return r("end");if(i.tryLoc<=this.prev){var s=n.call(i,"catchLoc"),u=n.call(i,"finallyLoc");if(s&&u){if(this.prev<i.catchLoc)return r(i.catchLoc,!0);if(this.prev<i.finallyLoc)return r(i.finallyLoc)}else if(s){if(this.prev<i.catchLoc)return r(i.catchLoc,!0)}else{if(!u)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return r(i.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&n.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var i=o;break}}i&&("break"===e||"continue"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=e,a.arg=t,i?(this.method="next",this.next=i.finallyLoc,c):this.complete(a)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),c},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),x(n),c}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var o=r.arg;x(n)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,n){return this.delegate={iterator:q(e),resultName:t,nextLoc:n},"next"===this.method&&(this.arg=void 0),c}},e}(e.exports);try{regeneratorRuntime=r}catch(e){Function("r","regeneratorRuntime = r")(r)}},function(e,t,n){n(0)({target:"Array",stat:!0},{isArray:n(33)})},function(e,t,n){"use strict";var r=n(15),o=n(103),i=n(39),a=n(28),s=n(116),u=a.set,l=a.getterFor("Array Iterator");e.exports=s(Array,"Array",(function(e,t){u(this,{type:"Array Iterator",target:r(e),index:0,kind:t})}),(function(){var e=l(this),t=e.target,n=e.kind,r=e.index++;return!t||r>=t.length?(e.target=void 0,{value:void 0,done:!0}):"keys"==n?{value:r,done:!1}:"values"==n?{value:t[r],done:!1}:{value:[r,t[r]],done:!1}}),"values"),i.Arguments=i.Array,o("keys"),o("values"),o("entries")},function(e,t,n){var r=n(1),o=n(32),i=n(8),a=r("unscopables"),s=Array.prototype;null==s[a]&&i.f(s,a,{configurable:!0,value:o(null)}),e.exports=function(e){s[a][e]=!0}},function(e,t,n){var r=n(2),o=/#|\.prototype\./,i=function(e,t){var n=s[a(e)];return n==l||n!=u&&("function"==typeof t?r(t):!!t)},a=i.normalize=function(e){return String(e).replace(o,".").toLowerCase()},s=i.data={},u=i.NATIVE="N",l=i.POLYFILL="P";e.exports=i},function(e,t,n){var r=n(83),o=n(26),i=n(1)("toStringTag"),a="Arguments"==o(function(){return arguments}());e.exports=r?o:function(e){var t,n,r;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),i))?n:a?o(t):"Object"==(r=o(t))&&"function"==typeof t.callee?"Arguments":r}},function(e,t,n){var r=n(5),o=n(21),i=n(1)("species");e.exports=function(e,t){var n,a=r(e).constructor;return void 0===a||null==(n=r(a)[i])?t:o(n)}},function(e,t,n){var r=n(46),o=n(23),i=function(e){return function(t,n){var i,a,s=String(o(t)),u=r(n),l=s.length;return u<0||u>=l?e?"":void 0:(i=s.charCodeAt(u))<55296||i>56319||u+1===l||(a=s.charCodeAt(u+1))<56320||a>57343?e?s.charAt(u):i:e?s.slice(u,u+2):a-56320+(i-55296<<10)+65536}};e.exports={codeAt:i(!1),charAt:i(!0)}},function(e,t,n){var r=n(4),o=n(33),i=n(1)("species");e.exports=function(e,t){var n;return o(e)&&("function"!=typeof(n=e.constructor)||n!==Array&&!o(n.prototype)?r(n)&&null===(n=n[i])&&(n=void 0):n=void 0),new(void 0===n?Array:n)(0===t?0:t)}},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t,n){var r=n(6),o=n(2),i=n(74);e.exports=!r&&!o((function(){return 7!=Object.defineProperty(i("div"),"a",{get:function(){return 7}}).a}))},function(e,t,n){var r=n(3);e.exports=r},function(e,t,n){var r=n(75);e.exports=r&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(e,t,n){var r=n(7),o=n(15),i=n(77).indexOf,a=n(38);e.exports=function(e,t){var n,s=o(e),u=0,l=[];for(n in s)!r(a,n)&&r(s,n)&&l.push(n);for(;t.length>u;)r(s,n=t[u++])&&(~i(l,n)||l.push(n));return l}},function(e,t,n){var r=n(46),o=Math.max,i=Math.min;e.exports=function(e,t){var n=r(e);return n<0?o(n+t,0):i(n,t)}},function(e,t,n){var r=n(19);e.exports=r("document","documentElement")},function(e,t,n){"use strict";var r=n(0),o=n(178),i=n(82),a=n(70),s=n(47),u=n(12),l=n(14),c=n(1),d=n(20),h=n(39),p=n(119),f=p.IteratorPrototype,y=p.BUGGY_SAFARI_ITERATORS,m=c("iterator"),g=function(){return this};e.exports=function(e,t,n,c,p,b,v){o(n,t,c);var w,k,x,j=function(e){if(e===p&&P)return P;if(!y&&e in _)return _[e];switch(e){case"keys":case"values":case"entries":return function(){return new n(this,e)}}return function(){return new n(this)}},q=t+" Iterator",S=!1,_=e.prototype,T=_[m]||_["@@iterator"]||p&&_[p],P=!y&&T||j(p),O="Array"==t&&_.entries||T;if(O&&(w=i(O.call(new e)),f!==Object.prototype&&w.next&&(d||i(w)===f||(a?a(w,f):"function"!=typeof w[m]&&u(w,m,g)),s(w,q,!0,!0),d&&(h[q]=g))),"values"==p&&T&&"values"!==T.name&&(S=!0,P=function(){return T.call(this)}),d&&!v||_[m]===P||u(_,m,P),h[t]=P,p)if(k={values:j("values"),keys:b?P:j("keys"),entries:j("entries")},v)for(x in k)(y||S||!(x in _))&&l(_,x,k[x]);else r({target:t,proto:!0,forced:y||S},k);return k}},function(e,t,n){var r=n(7),o=n(118),i=n(24),a=n(8);e.exports=function(e,t){for(var n=o(t),s=a.f,u=i.f,l=0;l<n.length;l++){var c=n[l];r(e,c)||s(e,c,u(t,c))}}},function(e,t,n){var r=n(19),o=n(69),i=n(81),a=n(5);e.exports=r("Reflect","ownKeys")||function(e){var t=o.f(a(e)),n=i.f;return n?t.concat(n(e)):t}},function(e,t,n){"use strict";var r,o,i,a=n(2),s=n(82),u=n(12),l=n(7),c=n(1),d=n(20),h=c("iterator"),p=!1;[].keys&&("next"in(i=[].keys())?(o=s(s(i)))!==Object.prototype&&(r=o):p=!0);var f=null==r||a((function(){var e={};return r[h].call(e)!==e}));f&&(r={}),d&&!f||l(r,h)||u(r,h,(function(){return this})),e.exports={IteratorPrototype:r,BUGGY_SAFARI_ITERATORS:p}},function(e,t,n){var r=n(2);e.exports=!r((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype}))},function(e,t,n){var r=n(3);e.exports=r.Promise},function(e,t,n){var r=n(1),o=n(39),i=r("iterator"),a=Array.prototype;e.exports=function(e){return void 0!==e&&(o.Array===e||a[i]===e)}},function(e,t,n){var r=n(5);e.exports=function(e){var t=e.return;if(void 0!==t)return r(t.call(e)).value}},function(e,t,n){var r=n(1)("iterator"),o=!1;try{var i=0,a={next:function(){return{done:!!i++}},return:function(){o=!0}};a[r]=function(){return this},Array.from(a,(function(){throw 2}))}catch(e){}e.exports=function(e,t){if(!t&&!o)return!1;var n=!1;try{var i={};i[r]=function(){return{next:function(){return{done:n=!0}}}},e(i)}catch(e){}return n}},function(e,t,n){var r,o,i,a=n(3),s=n(2),u=n(48),l=n(115),c=n(74),d=n(126),h=n(55),p=a.location,f=a.setImmediate,y=a.clearImmediate,m=a.process,g=a.MessageChannel,b=a.Dispatch,v=0,w={},k=function(e){if(w.hasOwnProperty(e)){var t=w[e];delete w[e],t()}},x=function(e){return function(){k(e)}},j=function(e){k(e.data)},q=function(e){a.postMessage(e+"",p.protocol+"//"+p.host)};f&&y||(f=function(e){for(var t=[],n=1;arguments.length>n;)t.push(arguments[n++]);return w[++v]=function(){("function"==typeof e?e:Function(e)).apply(void 0,t)},r(v),v},y=function(e){delete w[e]},h?r=function(e){m.nextTick(x(e))}:b&&b.now?r=function(e){b.now(x(e))}:g&&!d?(i=(o=new g).port2,o.port1.onmessage=j,r=u(i.postMessage,i,1)):a.addEventListener&&"function"==typeof postMessage&&!a.importScripts&&p&&"file:"!==p.protocol&&!s(q)?(r=q,a.addEventListener("message",j,!1)):r="onreadystatechange"in c("script")?function(e){l.appendChild(c("script")).onreadystatechange=function(){l.removeChild(this),k(e)}}:function(e){setTimeout(x(e),0)}),e.exports={set:f,clear:y}},function(e,t,n){var r=n(76);e.exports=/(?:iphone|ipod|ipad).*applewebkit/i.test(r)},function(e,t,n){var r=n(5),o=n(4),i=n(128);e.exports=function(e,t){if(r(e),o(t)&&t.constructor===e)return t;var n=i.f(e);return(0,n.resolve)(t),n.promise}},function(e,t,n){"use strict";var r=n(21),o=function(e){var t,n;this.promise=new e((function(e,r){if(void 0!==t||void 0!==n)throw TypeError("Bad Promise constructor");t=e,n=r})),this.resolve=r(t),this.reject=r(n)};e.exports.f=function(e){return new o(e)}},function(e,t){e.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},function(e,t,n){var r=n(0),o=n(2),i=n(10),a=n(82),s=n(120);r({target:"Object",stat:!0,forced:o((function(){a(1)})),sham:!s},{getPrototypeOf:function(e){return a(i(e))}})},function(e,t,n){var r=n(171);e.exports=function(e){if(r(e))throw TypeError("The method doesn't accept regular expressions");return e}},function(e,t,n){var r=n(1)("match");e.exports=function(e){var t=/./;try{"/./"[e](t)}catch(n){try{return t[r]=!1,"/./"[e](t)}catch(e){}}return!1}},function(e,t,n){"use strict";var r=n(29).forEach,o=n(30)("forEach");e.exports=o?[].forEach:function(e){return r(this,e,arguments.length>1?arguments[1]:void 0)}},function(e,t,n){var r=n(2);e.exports=!r((function(){return Object.isExtensible(Object.preventExtensions({}))}))},function(e,t,n){var r=n(1);t.f=r},function(e,t,n){var r=n(111),o=n(7),i=n(135),a=n(8).f;e.exports=function(e){var t=r.Symbol||(r.Symbol={});o(t,e)||a(t,e,{value:i.f(e)})}},function(e,t,n){var r=n(0),o=n(183);r({target:"Array",stat:!0,forced:!n(124)((function(e){Array.from(e)}))},{from:o})},function(e,t,n){n(0)({target:"Object",stat:!0,sham:!n(6)},{create:n(32)})},function(e,t){e.exports=function(e,t){for(var n=-1,r=t.length,o=e.length;++n<r;)e[o+n]=t[n];return e}},function(e,t){var n="object"==typeof global&&global&&global.Object===Object&&global;e.exports=n},function(e,t,n){var r=n(60),o=n(222),i=n(223),a=n(224),s=n(225),u=n(226);function l(e){var t=this.__data__=new r(e);this.size=t.size}l.prototype.clear=o,l.prototype.delete=i,l.prototype.get=a,l.prototype.has=s,l.prototype.set=u,e.exports=l},function(e,t){e.exports=function(e,t){return e===t||e!=e&&t!=t}},function(e,t,n){var r=n(35),o=n(87);e.exports=function(e){if(!o(e))return!1;var t=r(e);return"[object Function]"==t||"[object GeneratorFunction]"==t||"[object AsyncFunction]"==t||"[object Proxy]"==t}},function(e,t){var n=Function.prototype.toString;e.exports=function(e){if(null!=e){try{return n.call(e)}catch(e){}try{return e+""}catch(e){}}return""}},function(e,t,n){var r=n(243),o=n(25);e.exports=function e(t,n,i,a,s){return t===n||(null==t||null==n||!o(t)&&!o(n)?t!=t&&n!=n:r(t,n,i,a,e,s))}},function(e,t,n){var r=n(147),o=n(246),i=n(148);e.exports=function(e,t,n,a,s,u){var l=1&n,c=e.length,d=t.length;if(c!=d&&!(l&&d>c))return!1;var h=u.get(e),p=u.get(t);if(h&&p)return h==t&&p==e;var f=-1,y=!0,m=2&n?new r:void 0;for(u.set(e,t),u.set(t,e);++f<c;){var g=e[f],b=t[f];if(a)var v=l?a(b,g,f,t,e,u):a(g,b,f,e,t,u);if(void 0!==v){if(v)continue;y=!1;break}if(m){if(!o(t,(function(e,t){if(!i(m,t)&&(g===e||s(g,e,n,a,u)))return m.push(t)}))){y=!1;break}}else if(g!==b&&!s(g,b,n,a,u)){y=!1;break}}return u.delete(e),u.delete(t),y}},function(e,t,n){var r=n(88),o=n(244),i=n(245);function a(e){var t=-1,n=null==e?0:e.length;for(this.__data__=new r;++t<n;)this.add(e[t])}a.prototype.add=a.prototype.push=o,a.prototype.has=i,e.exports=a},function(e,t){e.exports=function(e,t){return e.has(t)}},function(e,t,n){var r=n(256),o=n(262),i=n(153);e.exports=function(e){return i(e)?r(e):o(e)}},function(e,t,n){(function(e){var r=n(18),o=n(258),i=t&&!t.nodeType&&t,a=i&&"object"==typeof e&&e&&!e.nodeType&&e,s=a&&a.exports===i?r.Buffer:void 0,u=(s?s.isBuffer:void 0)||o;e.exports=u}).call(this,n(109)(e))},function(e,t){var n=/^(?:0|[1-9]\d*)$/;e.exports=function(e,t){var r=typeof e;return!!(t=null==t?9007199254740991:t)&&("number"==r||"symbol"!=r&&n.test(e))&&e>-1&&e%1==0&&e<t}},function(e,t,n){var r=n(259),o=n(260),i=n(261),a=i&&i.isTypedArray,s=a?o(a):r;e.exports=s},function(e,t,n){var r=n(143),o=n(90);e.exports=function(e){return null!=e&&o(e.length)&&!r(e)}},function(e,t,n){var r=n(22)(n(18),"Set");e.exports=r},function(e,t,n){var r=n(87);e.exports=function(e){return e==e&&!r(e)}},function(e,t){e.exports=function(e,t){return function(n){return null!=n&&(n[e]===t&&(void 0!==t||e in Object(n)))}}},function(e,t,n){var r=n(158),o=n(64);e.exports=function(e,t){for(var n=0,i=(t=r(t,e)).length;null!=e&&n<i;)e=e[o(t[n++])];return n&&n==i?e:void 0}},function(e,t,n){var r=n(17),o=n(91),i=n(273),a=n(276);e.exports=function(e,t){return r(e)?e:o(e,t)?[e]:i(a(e))}},function(e,t,n){n(0)({target:"Object",stat:!0},{setPrototypeOf:n(70)})},function(e,t,n){var r=n(0),o=n(19),i=n(21),a=n(5),s=n(4),u=n(32),l=n(305),c=n(2),d=o("Reflect","construct"),h=c((function(){function e(){}return!(d((function(){}),[],e)instanceof e)})),p=!c((function(){d((function(){}))})),f=h||p;r({target:"Reflect",stat:!0,forced:f,sham:f},{construct:function(e,t){i(e),a(t);var n=arguments.length<3?e:i(arguments[2]);if(p&&!h)return d(e,t,n);if(e==n){switch(t.length){case 0:return new e;case 1:return new e(t[0]);case 2:return new e(t[0],t[1]);case 3:return new e(t[0],t[1],t[2]);case 4:return new e(t[0],t[1],t[2],t[3])}var r=[null];return r.push.apply(r,t),new(l.apply(e,r))}var o=n.prototype,c=u(s(o)?o:Object.prototype),f=Function.apply.call(e,c,t);return s(f)?f:c}})},function(e,t,n){},function(e,t,n){},function(e,t,n){var r=n(209),o=n(214),i=n(285),a=n(293),s=n(302),u=n(186),l=i((function(e){var t=u(e);return s(t)&&(t=void 0),a(r(e,1,s,!0),o(t,2))}));e.exports=l},function(e,t){var n=/^\s+|\s+$/g,r=/^[-+]0x[0-9a-f]+$/i,o=/^0b[01]+$/i,i=/^0o[0-7]+$/i,a=parseInt,s="object"==typeof global&&global&&global.Object===Object&&global,u="object"==typeof self&&self&&self.Object===Object&&self,l=s||u||Function("return this")(),c=Object.prototype.toString,d=Math.max,h=Math.min,p=function(){return l.Date.now()};function f(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}function y(e){if("number"==typeof e)return e;if(function(e){return"symbol"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&"[object Symbol]"==c.call(e)}(e))return NaN;if(f(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=f(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(n,"");var s=o.test(e);return s||i.test(e)?a(e.slice(2),s?2:8):r.test(e)?NaN:+e}e.exports=function(e,t,n){var r,o,i,a,s,u,l=0,c=!1,m=!1,g=!0;if("function"!=typeof e)throw new TypeError("Expected a function");function b(t){var n=r,i=o;return r=o=void 0,l=t,a=e.apply(i,n)}function v(e){return l=e,s=setTimeout(k,t),c?b(e):a}function w(e){var n=e-u;return void 0===u||n>=t||n<0||m&&e-l>=i}function k(){var e=p();if(w(e))return x(e);s=setTimeout(k,function(e){var n=t-(e-u);return m?h(n,i-(e-l)):n}(e))}function x(e){return s=void 0,g&&r?b(e):(r=o=void 0,a)}function j(){var e=p(),n=w(e);if(r=arguments,o=this,u=e,n){if(void 0===s)return v(u);if(m)return s=setTimeout(k,t),b(u)}return void 0===s&&(s=setTimeout(k,t)),a}return t=y(t)||0,f(n)&&(c=!!n.leading,i=(m="maxWait"in n)?d(y(n.maxWait)||0,t):i,g="trailing"in n?!!n.trailing:g),j.cancel=function(){void 0!==s&&clearTimeout(s),l=0,r=u=o=s=void 0},j.flush=function(){return void 0===s?a:x(p())},j}},function(e,t,n){function r(t){return"function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?(e.exports=r=function(e){return typeof e},e.exports.default=e.exports,e.exports.__esModule=!0):(e.exports=r=function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e.exports.default=e.exports,e.exports.__esModule=!0),r(t)}n(34),n(40),n(9),n(59),n(11),n(16),e.exports=r,e.exports.default=e.exports,e.exports.__esModule=!0},function(e,t,n){"use strict";n(45);var r=n(14),o=n(71),i=n(2),a=n(1),s=n(12),u=a("species"),l=RegExp.prototype,c=!i((function(){var e=/./;return e.exec=function(){var e=[];return e.groups={a:"7"},e},"7"!=="".replace(e,"$<a>")})),d="$0"==="a".replace(/./,"$0"),h=a("replace"),p=!!/./[h]&&""===/./[h]("a","$0"),f=!i((function(){var e=/(?:)/,t=e.exec;e.exec=function(){return t.apply(this,arguments)};var n="ab".split(e);return 2!==n.length||"a"!==n[0]||"b"!==n[1]}));e.exports=function(e,t,n,h){var y=a(e),m=!i((function(){var t={};return t[y]=function(){return 7},7!=""[e](t)})),g=m&&!i((function(){var t=!1,n=/a/;return"split"===e&&((n={}).constructor={},n.constructor[u]=function(){return n},n.flags="",n[y]=/./[y]),n.exec=function(){return t=!0,null},n[y](""),!t}));if(!m||!g||"replace"===e&&(!c||!d||p)||"split"===e&&!f){var b=/./[y],v=n(y,""[e],(function(e,t,n,r,i){var a=t.exec;return a===o||a===l.exec?m&&!i?{done:!0,value:b.call(t,n,r)}:{done:!0,value:e.call(n,t,r)}:{done:!1}}),{REPLACE_KEEPS_$0:d,REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE:p}),w=v[0],k=v[1];r(String.prototype,e,w),r(l,y,2==t?function(e,t){return k.call(e,this,t)}:function(e){return k.call(e,this)})}h&&s(l[y],"sham",!0)}},function(e,t,n){var r=n(26),o=n(71);e.exports=function(e,t){var n=e.exec;if("function"==typeof n){var i=n.call(e,t);if("object"!=typeof i)throw TypeError("RegExp exec method returned something other than an Object or null");return i}if("RegExp"!==r(e))throw TypeError("RegExp#exec called on incompatible receiver");return o.call(e,t)}},function(e,t,n){"use strict";var r=n(0),o=n(77).indexOf,i=n(30),a=[].indexOf,s=!!a&&1/[1].indexOf(1,-0)<0,u=i("indexOf");r({target:"Array",proto:!0,forced:s||!u},{indexOf:function(e){return s?a.apply(this,arguments)||0:o(this,e,arguments.length>1?arguments[1]:void 0)}})},function(e,t,n){var r=n(6),o=n(8),i=n(5),a=n(53);e.exports=r?Object.defineProperties:function(e,t){i(e);for(var n,r=a(t),s=r.length,u=0;s>u;)o.f(e,n=r[u++],t[n]);return e}},function(e,t){e.exports=function(e,t,n){if(!(e instanceof t))throw TypeError("Incorrect "+(n?n+" ":"")+"invocation");return e}},function(e,t,n){var r=n(4),o=n(26),i=n(1)("match");e.exports=function(e){var t;return r(e)&&(void 0!==(t=e[i])?!!t:"RegExp"==o(e))}},function(e,t,n){"use strict";var r=n(5);e.exports=function(){var e=r(this),t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.dotAll&&(t+="s"),e.unicode&&(t+="u"),e.sticky&&(t+="y"),t}},function(e,t,n){"use strict";var r=n(2);function o(e,t){return RegExp(e,t)}t.UNSUPPORTED_Y=r((function(){var e=o("a","y");return e.lastIndex=2,null!=e.exec("abcd")})),t.BROKEN_CARET=r((function(){var e=o("^r","gy");return e.lastIndex=2,null!=e.exec("str")}))},function(e,t,n){"use strict";var r=n(107).charAt;e.exports=function(e,t,n){return t+(n?r(e,t).length:1)}},function(e,t,n){"use strict";var r=n(0),o=n(36),i=n(15),a=n(30),s=[].join,u=o!=Object,l=a("join",",");r({target:"Array",proto:!0,forced:u||!l},{join:function(e){return s.call(i(this),void 0===e?",":e)}})},function(e,t,n){"use strict";var r=n(0),o=n(2),i=n(33),a=n(4),s=n(10),u=n(13),l=n(57),c=n(108),d=n(58),h=n(1),p=n(37),f=h("isConcatSpreadable"),y=p>=51||!o((function(){var e=[];return e[f]=!1,e.concat()[0]!==e})),m=d("concat"),g=function(e){if(!a(e))return!1;var t=e[f];return void 0!==t?!!t:i(e)};r({target:"Array",proto:!0,forced:!y||!m},{concat:function(e){var t,n,r,o,i,a=s(this),d=c(a,0),h=0;for(t=-1,r=arguments.length;t<r;t++)if(g(i=-1===t?a:arguments[t])){if(h+(o=u(i.length))>9007199254740991)throw TypeError("Maximum allowed index exceeded");for(n=0;n<o;n++,h++)n in i&&l(d,h,i[n])}else{if(h>=9007199254740991)throw TypeError("Maximum allowed index exceeded");l(d,h++,i)}return d.length=h,d}})},function(e,t,n){var r=n(0),o=n(6);r({target:"Object",stat:!0,forced:!o,sham:!o},{defineProperty:n(8).f})},function(e,t,n){"use strict";var r=n(119).IteratorPrototype,o=n(32),i=n(31),a=n(47),s=n(39),u=function(){return this};e.exports=function(e,t,n){var l=t+" Iterator";return e.prototype=o(r,{next:i(1,n)}),a(e,l,!1,!0),s[l]=u,e}},function(e,t,n){var r=n(14);e.exports=function(e,t,n){for(var o in t)r(e,o,t[o],n);return e}},function(e,t,n){"use strict";var r=n(19),o=n(8),i=n(1),a=n(6),s=i("species");e.exports=function(e){var t=r(e),n=o.f;a&&t&&!t[s]&&n(t,s,{configurable:!0,get:function(){return this}})}},function(e,t,n){"use strict";var r=n(6),o=n(2),i=n(53),a=n(81),s=n(80),u=n(10),l=n(36),c=Object.assign,d=Object.defineProperty;e.exports=!c||o((function(){if(r&&1!==c({b:1},c(d({},"a",{enumerable:!0,get:function(){d(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var e={},t={},n=Symbol();return e[n]=7,"abcdefghijklmnopqrst".split("").forEach((function(e){t[e]=e})),7!=c({},e)[n]||"abcdefghijklmnopqrst"!=i(c({},t)).join("")}))?function(e,t){for(var n=u(e),o=arguments.length,c=1,d=a.f,h=s.f;o>c;)for(var p,f=l(arguments[c++]),y=d?i(f).concat(d(f)):i(f),m=y.length,g=0;m>g;)p=y[g++],r&&!h.call(f,p)||(n[p]=f[p]);return n}:c},function(e,t,n){var r=n(0),o=n(6),i=n(118),a=n(15),s=n(24),u=n(57);r({target:"Object",stat:!0,sham:!o},{getOwnPropertyDescriptors:function(e){for(var t,n,r=a(e),o=s.f,l=i(r),c={},d=0;l.length>d;)void 0!==(n=o(r,t=l[d++]))&&u(c,t,n);return c}})},function(e,t,n){"use strict";var r=n(48),o=n(10),i=n(207),a=n(122),s=n(13),u=n(57),l=n(99);e.exports=function(e){var t,n,c,d,h,p,f=o(e),y="function"==typeof this?this:Array,m=arguments.length,g=m>1?arguments[1]:void 0,b=void 0!==g,v=l(f),w=0;if(b&&(g=r(g,m>2?arguments[2]:void 0,2)),null==v||y==Array&&a(v))for(n=new y(t=s(f.length));t>w;w++)p=b?g(f[w],w):f[w],u(n,w,p);else for(h=(d=v.call(f)).next,n=new y;!(c=h.call(d)).done;w++)p=b?i(d,g,[c.value,w],!0):c.value,u(n,w,p);return n.length=w,n}},function(e,t,n){"use strict";var r=n(0),o=n(77).includes,i=n(103);r({target:"Array",proto:!0},{includes:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}}),i("includes")},function(e,t,n){"use strict";var r=n(0),o=n(131),i=n(23);r({target:"String",proto:!0,forced:!n(132)("includes")},{includes:function(e){return!!~String(i(this)).indexOf(o(e),arguments.length>1?arguments[1]:void 0)}})},function(e,t){e.exports=function(e){var t=null==e?0:e.length;return t?e[t-1]:void 0}},function(e,t,n){var r=n(14),o=Date.prototype,i=o.toString,a=o.getTime;new Date(NaN)+""!="Invalid Date"&&r(o,"toString",(function(){var e=a.call(this);return e==e?i.call(this):"Invalid Date"}))},function(e,t,n){e.exports=n(308)},function(e,t,n){var r=n(3),o=n(79),i=r.WeakMap;e.exports="function"==typeof i&&/native code/.test(o(i))},function(e,t,n){var r=n(4);e.exports=function(e){if(!r(e)&&null!==e)throw TypeError("Can't set "+String(e)+" as a prototype");return e}},function(e,t,n){"use strict";var r,o,i,a,s=n(0),u=n(20),l=n(3),c=n(19),d=n(121),h=n(14),p=n(179),f=n(70),y=n(47),m=n(180),g=n(4),b=n(21),v=n(170),w=n(79),k=n(192),x=n(124),j=n(106),q=n(125).set,S=n(193),_=n(127),T=n(195),P=n(128),O=n(196),I=n(28),C=n(104),A=n(1),E=n(197),L=n(55),Q=n(37),$=A("species"),R="Promise",z=I.get,M=I.set,N=I.getterFor(R),D=d&&d.prototype,H=d,B=D,F=l.TypeError,U=l.document,G=l.process,W=P.f,V=W,Y=!!(U&&U.createEvent&&l.dispatchEvent),J="function"==typeof PromiseRejectionEvent,K=!1,Z=C(R,(function(){var e=w(H)!==String(H);if(!e&&66===Q)return!0;if(u&&!B.finally)return!0;if(Q>=51&&/native code/.test(H))return!1;var t=new H((function(e){e(1)})),n=function(e){e((function(){}),(function(){}))};return(t.constructor={})[$]=n,!(K=t.then((function(){}))instanceof n)||!e&&E&&!J})),X=Z||!x((function(e){H.all(e).catch((function(){}))})),ee=function(e){var t;return!(!g(e)||"function"!=typeof(t=e.then))&&t},te=function(e,t){if(!e.notified){e.notified=!0;var n=e.reactions;S((function(){for(var r=e.value,o=1==e.state,i=0;n.length>i;){var a,s,u,l=n[i++],c=o?l.ok:l.fail,d=l.resolve,h=l.reject,p=l.domain;try{c?(o||(2===e.rejection&&ie(e),e.rejection=1),!0===c?a=r:(p&&p.enter(),a=c(r),p&&(p.exit(),u=!0)),a===l.promise?h(F("Promise-chain cycle")):(s=ee(a))?s.call(a,d,h):d(a)):h(r)}catch(e){p&&!u&&p.exit(),h(e)}}e.reactions=[],e.notified=!1,t&&!e.rejection&&re(e)}))}},ne=function(e,t,n){var r,o;Y?((r=U.createEvent("Event")).promise=t,r.reason=n,r.initEvent(e,!1,!0),l.dispatchEvent(r)):r={promise:t,reason:n},!J&&(o=l["on"+e])?o(r):"unhandledrejection"===e&&T("Unhandled promise rejection",n)},re=function(e){q.call(l,(function(){var t,n=e.facade,r=e.value;if(oe(e)&&(t=O((function(){L?G.emit("unhandledRejection",r,n):ne("unhandledrejection",n,r)})),e.rejection=L||oe(e)?2:1,t.error))throw t.value}))},oe=function(e){return 1!==e.rejection&&!e.parent},ie=function(e){q.call(l,(function(){var t=e.facade;L?G.emit("rejectionHandled",t):ne("rejectionhandled",t,e.value)}))},ae=function(e,t,n){return function(r){e(t,r,n)}},se=function(e,t,n){e.done||(e.done=!0,n&&(e=n),e.value=t,e.state=2,te(e,!0))},ue=function(e,t,n){if(!e.done){e.done=!0,n&&(e=n);try{if(e.facade===t)throw F("Promise can't be resolved itself");var r=ee(t);r?S((function(){var n={done:!1};try{r.call(t,ae(ue,n,e),ae(se,n,e))}catch(t){se(n,t,e)}})):(e.value=t,e.state=1,te(e,!1))}catch(t){se({done:!1},t,e)}}};if(Z&&(B=(H=function(e){v(this,H,R),b(e),r.call(this);var t=z(this);try{e(ae(ue,t),ae(se,t))}catch(e){se(t,e)}}).prototype,(r=function(e){M(this,{type:R,done:!1,notified:!1,parent:!1,reactions:[],rejection:!1,state:0,value:void 0})}).prototype=p(B,{then:function(e,t){var n=N(this),r=W(j(this,H));return r.ok="function"!=typeof e||e,r.fail="function"==typeof t&&t,r.domain=L?G.domain:void 0,n.parent=!0,n.reactions.push(r),0!=n.state&&te(n,!1),r.promise},catch:function(e){return this.then(void 0,e)}}),o=function(){var e=new r,t=z(e);this.promise=e,this.resolve=ae(ue,t),this.reject=ae(se,t)},P.f=W=function(e){return e===H||e===i?new o(e):V(e)},!u&&"function"==typeof d&&D!==Object.prototype)){a=D.then,K||(h(D,"then",(function(e,t){var n=this;return new H((function(e,t){a.call(n,e,t)})).then(e,t)}),{unsafe:!0}),h(D,"catch",B.catch,{unsafe:!0}));try{delete D.constructor}catch(e){}f&&f(D,B)}s({global:!0,wrap:!0,forced:Z},{Promise:H}),y(H,R,!1,!0),m(R),i=c(R),s({target:R,stat:!0,forced:Z},{reject:function(e){var t=W(this);return t.reject.call(void 0,e),t.promise}}),s({target:R,stat:!0,forced:u||Z},{resolve:function(e){return _(u&&this===i?H:this,e)}}),s({target:R,stat:!0,forced:X},{all:function(e){var t=this,n=W(t),r=n.resolve,o=n.reject,i=O((function(){var n=b(t.resolve),i=[],a=0,s=1;k(e,(function(e){var u=a++,l=!1;i.push(void 0),s++,n.call(t,e).then((function(e){l||(l=!0,i[u]=e,--s||r(i))}),o)})),--s||r(i)}));return i.error&&o(i.value),n.promise},race:function(e){var t=this,n=W(t),r=n.reject,o=O((function(){var o=b(t.resolve);k(e,(function(e){o.call(t,e).then(n.resolve,r)}))}));return o.error&&r(o.value),n.promise}})},function(e,t,n){var r=n(5),o=n(122),i=n(13),a=n(48),s=n(99),u=n(123),l=function(e,t){this.stopped=e,this.result=t};e.exports=function(e,t,n){var c,d,h,p,f,y,m,g=n&&n.that,b=!(!n||!n.AS_ENTRIES),v=!(!n||!n.IS_ITERATOR),w=!(!n||!n.INTERRUPTED),k=a(t,g,1+b+w),x=function(e){return c&&u(c),new l(!0,e)},j=function(e){return b?(r(e),w?k(e[0],e[1],x):k(e[0],e[1])):w?k(e,x):k(e)};if(v)c=e;else{if("function"!=typeof(d=s(e)))throw TypeError("Target is not iterable");if(o(d)){for(h=0,p=i(e.length);p>h;h++)if((f=j(e[h]))&&f instanceof l)return f;return new l(!1)}c=d.call(e)}for(y=c.next;!(m=y.call(c)).done;){try{f=j(m.value)}catch(e){throw u(c),e}if("object"==typeof f&&f&&f instanceof l)return f}return new l(!1)}},function(e,t,n){var r,o,i,a,s,u,l,c,d=n(3),h=n(24).f,p=n(125).set,f=n(126),y=n(194),m=n(55),g=d.MutationObserver||d.WebKitMutationObserver,b=d.document,v=d.process,w=d.Promise,k=h(d,"queueMicrotask"),x=k&&k.value;x||(r=function(){var e,t;for(m&&(e=v.domain)&&e.exit();o;){t=o.fn,o=o.next;try{t()}catch(e){throw o?a():i=void 0,e}}i=void 0,e&&e.enter()},f||m||y||!g||!b?w&&w.resolve?((l=w.resolve(void 0)).constructor=w,c=l.then,a=function(){c.call(l,r)}):a=m?function(){v.nextTick(r)}:function(){p.call(d,r)}:(s=!0,u=b.createTextNode(""),new g(r).observe(u,{characterData:!0}),a=function(){u.data=s=!s})),e.exports=x||function(e){var t={fn:e,next:void 0};i&&(i.next=t),o||(o=t,a()),i=t}},function(e,t,n){var r=n(76);e.exports=/web0s(?!.*chrome)/i.test(r)},function(e,t,n){var r=n(3);e.exports=function(e,t){var n=r.console;n&&n.error&&(1===arguments.length?n.error(e):n.error(e,t))}},function(e,t){e.exports=function(e){try{return{error:!1,value:e()}}catch(e){return{error:!0,value:e}}}},function(e,t){e.exports="object"==typeof window},function(e,t,n){var r=n(0),o=n(181);r({target:"Object",stat:!0,forced:Object.assign!==o},{assign:o})},function(e,t,n){"use strict";var r=n(0),o=n(20),i=n(121),a=n(2),s=n(19),u=n(106),l=n(127),c=n(14);if(r({target:"Promise",proto:!0,real:!0,forced:!!i&&a((function(){i.prototype.finally.call({then:function(){}},(function(){}))}))},{finally:function(e){var t=u(this,s("Promise")),n="function"==typeof e;return this.then(n?function(n){return l(t,e()).then((function(){return n}))}:e,n?function(n){return l(t,e()).then((function(){throw n}))}:e)}}),!o&&"function"==typeof i){var d=s("Promise").prototype.finally;i.prototype.finally!==d&&c(i.prototype,"finally",d,{unsafe:!0})}},function(e,t,n){"use strict";var r=n(83),o=n(105);e.exports=r?{}.toString:function(){return"[object "+o(this)+"]"}},function(e,t,n){"use strict";var r=n(0),o=n(202).left,i=n(30),a=n(37),s=n(55);r({target:"Array",proto:!0,forced:!i("reduce")||!s&&a>79&&a<83},{reduce:function(e){return o(this,e,arguments.length,arguments.length>1?arguments[1]:void 0)}})},function(e,t,n){var r=n(21),o=n(10),i=n(36),a=n(13),s=function(e){return function(t,n,s,u){r(n);var l=o(t),c=i(l),d=a(l.length),h=e?d-1:0,p=e?-1:1;if(s<2)for(;;){if(h in c){u=c[h],h+=p;break}if(h+=p,e?h<0:d<=h)throw TypeError("Reduce of empty array with no initial value")}for(;e?h>=0:d>h;h+=p)h in c&&(u=n(u,c[h],h,l));return u}};e.exports={left:s(!1),right:s(!0)}},function(e,t,n){"use strict";var r,o=n(0),i=n(24).f,a=n(13),s=n(131),u=n(23),l=n(132),c=n(20),d="".startsWith,h=Math.min,p=l("startsWith");o({target:"String",proto:!0,forced:!!(c||p||(r=i(String.prototype,"startsWith"),!r||r.writable))&&!p},{startsWith:function(e){var t=String(u(this));s(e);var n=a(h(arguments.length>1?arguments[1]:void 0,t.length)),r=String(e);return d?d.call(t,r,n):t.slice(n,n+r.length)===r}})},function(e,t,n){var r=n(0),o=n(134),i=n(2),a=n(4),s=n(205).onFreeze,u=Object.freeze;r({target:"Object",stat:!0,forced:i((function(){u(1)})),sham:!o},{freeze:function(e){return u&&a(e)?u(s(e)):e}})},function(e,t,n){var r=n(38),o=n(4),i=n(7),a=n(8).f,s=n(52),u=n(134),l=s("meta"),c=0,d=Object.isExtensible||function(){return!0},h=function(e){a(e,l,{value:{objectID:"O"+ ++c,weakData:{}}})},p=e.exports={REQUIRED:!1,fastKey:function(e,t){if(!o(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!i(e,l)){if(!d(e))return"F";if(!t)return"E";h(e)}return e[l].objectID},getWeakData:function(e,t){if(!i(e,l)){if(!d(e))return!0;if(!t)return!1;h(e)}return e[l].weakData},onFreeze:function(e){return u&&p.REQUIRED&&d(e)&&!i(e,l)&&h(e),e}};r[l]=!0},function(e,t,n){var r=n(15),o=n(69).f,i={}.toString,a="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return a&&"[object Window]"==i.call(e)?function(e){try{return o(e)}catch(e){return a.slice()}}(e):o(r(e))}},function(e,t,n){var r=n(5),o=n(123);e.exports=function(e,t,n,i){try{return i?t(r(n)[0],n[1]):t(n)}catch(t){throw o(e),t}}},function(e,t,n){var r=n(10),o=Math.floor,i="".replace,a=/\$([$&'`]|\d{1,2}|<[^>]*>)/g,s=/\$([$&'`]|\d{1,2})/g;e.exports=function(e,t,n,u,l,c){var d=n+e.length,h=u.length,p=s;return void 0!==l&&(l=r(l),p=a),i.call(c,p,(function(r,i){var a;switch(i.charAt(0)){case"$":return"$";case"&":return e;case"`":return t.slice(0,n);case"'":return t.slice(d);case"<":a=l[i.slice(1,-1)];break;default:var s=+i;if(0===s)return r;if(s>h){var c=o(s/10);return 0===c?r:c<=h?void 0===u[c-1]?i.charAt(1):u[c-1]+i.charAt(1):r}a=u[s-1]}return void 0===a?"":a}))}},function(e,t,n){var r=n(139),o=n(210);e.exports=function e(t,n,i,a,s){var u=-1,l=t.length;for(i||(i=o),s||(s=[]);++u<l;){var c=t[u];n>0&&i(c)?n>1?e(c,n-1,i,a,s):r(s,c):a||(s[s.length]=c)}return s}},function(e,t,n){var r=n(41),o=n(85),i=n(17),a=r?r.isConcatSpreadable:void 0;e.exports=function(e){return i(e)||o(e)||!!(a&&e&&e[a])}},function(e,t,n){var r=n(35),o=n(25);e.exports=function(e){return o(e)&&"[object Arguments]"==r(e)}},function(e,t,n){var r=n(41),o=Object.prototype,i=o.hasOwnProperty,a=o.toString,s=r?r.toStringTag:void 0;e.exports=function(e){var t=i.call(e,s),n=e[s];try{e[s]=void 0;var r=!0}catch(e){}var o=a.call(e);return r&&(t?e[s]=n:delete e[s]),o}},function(e,t){var n=Object.prototype.toString;e.exports=function(e){return n.call(e)}},function(e,t,n){var r=n(215),o=n(271),i=n(93),a=n(17),s=n(282);e.exports=function(e){return"function"==typeof e?e:null==e?i:"object"==typeof e?a(e)?o(e[0],e[1]):r(e):s(e)}},function(e,t,n){var r=n(216),o=n(270),i=n(156);e.exports=function(e){var t=o(e);return 1==t.length&&t[0][2]?i(t[0][0],t[0][1]):function(n){return n===e||r(n,e,t)}}},function(e,t,n){var r=n(141),o=n(145);e.exports=function(e,t,n,i){var a=n.length,s=a,u=!i;if(null==e)return!s;for(e=Object(e);a--;){var l=n[a];if(u&&l[2]?l[1]!==e[l[0]]:!(l[0]in e))return!1}for(;++a<s;){var c=(l=n[a])[0],d=e[c],h=l[1];if(u&&l[2]){if(void 0===d&&!(c in e))return!1}else{var p=new r;if(i)var f=i(d,h,c,e,t,p);if(!(void 0===f?o(h,d,3,i,p):f))return!1}}return!0}},function(e,t){e.exports=function(){this.__data__=[],this.size=0}},function(e,t,n){var r=n(61),o=Array.prototype.splice;e.exports=function(e){var t=this.__data__,n=r(t,e);return!(n<0)&&(n==t.length-1?t.pop():o.call(t,n,1),--this.size,!0)}},function(e,t,n){var r=n(61);e.exports=function(e){var t=this.__data__,n=r(t,e);return n<0?void 0:t[n][1]}},function(e,t,n){var r=n(61);e.exports=function(e){return r(this.__data__,e)>-1}},function(e,t,n){var r=n(61);e.exports=function(e,t){var n=this.__data__,o=r(n,e);return o<0?(++this.size,n.push([e,t])):n[o][1]=t,this}},function(e,t,n){var r=n(60);e.exports=function(){this.__data__=new r,this.size=0}},function(e,t){e.exports=function(e){var t=this.__data__,n=t.delete(e);return this.size=t.size,n}},function(e,t){e.exports=function(e){return this.__data__.get(e)}},function(e,t){e.exports=function(e){return this.__data__.has(e)}},function(e,t,n){var r=n(60),o=n(86),i=n(88);e.exports=function(e,t){var n=this.__data__;if(n instanceof r){var a=n.__data__;if(!o||a.length<199)return a.push([e,t]),this.size=++n.size,this;n=this.__data__=new i(a)}return n.set(e,t),this.size=n.size,this}},function(e,t,n){var r=n(143),o=n(228),i=n(87),a=n(144),s=/^\[object .+?Constructor\]$/,u=Function.prototype,l=Object.prototype,c=u.toString,d=l.hasOwnProperty,h=RegExp("^"+c.call(d).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");e.exports=function(e){return!(!i(e)||o(e))&&(r(e)?h:s).test(a(e))}},function(e,t,n){var r,o=n(229),i=(r=/[^.]+$/.exec(o&&o.keys&&o.keys.IE_PROTO||""))?"Symbol(src)_1."+r:"";e.exports=function(e){return!!i&&i in e}},function(e,t,n){var r=n(18)["__core-js_shared__"];e.exports=r},function(e,t){e.exports=function(e,t){return null==e?void 0:e[t]}},function(e,t,n){var r=n(232),o=n(60),i=n(86);e.exports=function(){this.size=0,this.__data__={hash:new r,map:new(i||o),string:new r}}},function(e,t,n){var r=n(233),o=n(234),i=n(235),a=n(236),s=n(237);function u(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}u.prototype.clear=r,u.prototype.delete=o,u.prototype.get=i,u.prototype.has=a,u.prototype.set=s,e.exports=u},function(e,t,n){var r=n(62);e.exports=function(){this.__data__=r?r(null):{},this.size=0}},function(e,t){e.exports=function(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t}},function(e,t,n){var r=n(62),o=Object.prototype.hasOwnProperty;e.exports=function(e){var t=this.__data__;if(r){var n=t[e];return"__lodash_hash_undefined__"===n?void 0:n}return o.call(t,e)?t[e]:void 0}},function(e,t,n){var r=n(62),o=Object.prototype.hasOwnProperty;e.exports=function(e){var t=this.__data__;return r?void 0!==t[e]:o.call(t,e)}},function(e,t,n){var r=n(62);e.exports=function(e,t){var n=this.__data__;return this.size+=this.has(e)?0:1,n[e]=r&&void 0===t?"__lodash_hash_undefined__":t,this}},function(e,t,n){var r=n(63);e.exports=function(e){var t=r(this,e).delete(e);return this.size-=t?1:0,t}},function(e,t){e.exports=function(e){var t=typeof e;return"string"==t||"number"==t||"symbol"==t||"boolean"==t?"__proto__"!==e:null===e}},function(e,t,n){var r=n(63);e.exports=function(e){return r(this,e).get(e)}},function(e,t,n){var r=n(63);e.exports=function(e){return r(this,e).has(e)}},function(e,t,n){var r=n(63);e.exports=function(e,t){var n=r(this,e),o=n.size;return n.set(e,t),this.size+=n.size==o?0:1,this}},function(e,t,n){var r=n(141),o=n(146),i=n(247),a=n(250),s=n(266),u=n(17),l=n(150),c=n(152),d="[object Object]",h=Object.prototype.hasOwnProperty;e.exports=function(e,t,n,p,f,y){var m=u(e),g=u(t),b=m?"[object Array]":s(e),v=g?"[object Array]":s(t),w=(b="[object Arguments]"==b?d:b)==d,k=(v="[object Arguments]"==v?d:v)==d,x=b==v;if(x&&l(e)){if(!l(t))return!1;m=!0,w=!1}if(x&&!w)return y||(y=new r),m||c(e)?o(e,t,n,p,f,y):i(e,t,b,n,p,f,y);if(!(1&n)){var j=w&&h.call(e,"__wrapped__"),q=k&&h.call(t,"__wrapped__");if(j||q){var S=j?e.value():e,_=q?t.value():t;return y||(y=new r),f(S,_,n,p,y)}}return!!x&&(y||(y=new r),a(e,t,n,p,f,y))}},function(e,t){e.exports=function(e){return this.__data__.set(e,"__lodash_hash_undefined__"),this}},function(e,t){e.exports=function(e){return this.__data__.has(e)}},function(e,t){e.exports=function(e,t){for(var n=-1,r=null==e?0:e.length;++n<r;)if(t(e[n],n,e))return!0;return!1}},function(e,t,n){var r=n(41),o=n(248),i=n(142),a=n(146),s=n(249),u=n(89),l=r?r.prototype:void 0,c=l?l.valueOf:void 0;e.exports=function(e,t,n,r,l,d,h){switch(n){case"[object DataView]":if(e.byteLength!=t.byteLength||e.byteOffset!=t.byteOffset)return!1;e=e.buffer,t=t.buffer;case"[object ArrayBuffer]":return!(e.byteLength!=t.byteLength||!d(new o(e),new o(t)));case"[object Boolean]":case"[object Date]":case"[object Number]":return i(+e,+t);case"[object Error]":return e.name==t.name&&e.message==t.message;case"[object RegExp]":case"[object String]":return e==t+"";case"[object Map]":var p=s;case"[object Set]":var f=1&r;if(p||(p=u),e.size!=t.size&&!f)return!1;var y=h.get(e);if(y)return y==t;r|=2,h.set(e,t);var m=a(p(e),p(t),r,l,d,h);return h.delete(e),m;case"[object Symbol]":if(c)return c.call(e)==c.call(t)}return!1}},function(e,t,n){var r=n(18).Uint8Array;e.exports=r},function(e,t){e.exports=function(e){var t=-1,n=Array(e.size);return e.forEach((function(e,r){n[++t]=[r,e]})),n}},function(e,t,n){var r=n(251),o=Object.prototype.hasOwnProperty;e.exports=function(e,t,n,i,a,s){var u=1&n,l=r(e),c=l.length;if(c!=r(t).length&&!u)return!1;for(var d=c;d--;){var h=l[d];if(!(u?h in t:o.call(t,h)))return!1}var p=s.get(e),f=s.get(t);if(p&&f)return p==t&&f==e;var y=!0;s.set(e,t),s.set(t,e);for(var m=u;++d<c;){var g=e[h=l[d]],b=t[h];if(i)var v=u?i(b,g,h,t,e,s):i(g,b,h,e,t,s);if(!(void 0===v?g===b||a(g,b,n,i,s):v)){y=!1;break}m||(m="constructor"==h)}if(y&&!m){var w=e.constructor,k=t.constructor;w==k||!("constructor"in e)||!("constructor"in t)||"function"==typeof w&&w instanceof w&&"function"==typeof k&&k instanceof k||(y=!1)}return s.delete(e),s.delete(t),y}},function(e,t,n){var r=n(252),o=n(253),i=n(149);e.exports=function(e){return r(e,i,o)}},function(e,t,n){var r=n(139),o=n(17);e.exports=function(e,t,n){var i=t(e);return o(e)?i:r(i,n(e))}},function(e,t,n){var r=n(254),o=n(255),i=Object.prototype.propertyIsEnumerable,a=Object.getOwnPropertySymbols,s=a?function(e){return null==e?[]:(e=Object(e),r(a(e),(function(t){return i.call(e,t)})))}:o;e.exports=s},function(e,t){e.exports=function(e,t){for(var n=-1,r=null==e?0:e.length,o=0,i=[];++n<r;){var a=e[n];t(a,n,e)&&(i[o++]=a)}return i}},function(e,t){e.exports=function(){return[]}},function(e,t,n){var r=n(257),o=n(85),i=n(17),a=n(150),s=n(151),u=n(152),l=Object.prototype.hasOwnProperty;e.exports=function(e,t){var n=i(e),c=!n&&o(e),d=!n&&!c&&a(e),h=!n&&!c&&!d&&u(e),p=n||c||d||h,f=p?r(e.length,String):[],y=f.length;for(var m in e)!t&&!l.call(e,m)||p&&("length"==m||d&&("offset"==m||"parent"==m)||h&&("buffer"==m||"byteLength"==m||"byteOffset"==m)||s(m,y))||f.push(m);return f}},function(e,t){e.exports=function(e,t){for(var n=-1,r=Array(e);++n<e;)r[n]=t(n);return r}},function(e,t){e.exports=function(){return!1}},function(e,t,n){var r=n(35),o=n(90),i=n(25),a={};a["[object Float32Array]"]=a["[object Float64Array]"]=a["[object Int8Array]"]=a["[object Int16Array]"]=a["[object Int32Array]"]=a["[object Uint8Array]"]=a["[object Uint8ClampedArray]"]=a["[object Uint16Array]"]=a["[object Uint32Array]"]=!0,a["[object Arguments]"]=a["[object Array]"]=a["[object ArrayBuffer]"]=a["[object Boolean]"]=a["[object DataView]"]=a["[object Date]"]=a["[object Error]"]=a["[object Function]"]=a["[object Map]"]=a["[object Number]"]=a["[object Object]"]=a["[object RegExp]"]=a["[object Set]"]=a["[object String]"]=a["[object WeakMap]"]=!1,e.exports=function(e){return i(e)&&o(e.length)&&!!a[r(e)]}},function(e,t){e.exports=function(e){return function(t){return e(t)}}},function(e,t,n){(function(e){var r=n(140),o=t&&!t.nodeType&&t,i=o&&"object"==typeof e&&e&&!e.nodeType&&e,a=i&&i.exports===o&&r.process,s=function(){try{var e=i&&i.require&&i.require("util").types;return e||a&&a.binding&&a.binding("util")}catch(e){}}();e.exports=s}).call(this,n(109)(e))},function(e,t,n){var r=n(263),o=n(264),i=Object.prototype.hasOwnProperty;e.exports=function(e){if(!r(e))return o(e);var t=[];for(var n in Object(e))i.call(e,n)&&"constructor"!=n&&t.push(n);return t}},function(e,t){var n=Object.prototype;e.exports=function(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||n)}},function(e,t,n){var r=n(265)(Object.keys,Object);e.exports=r},function(e,t){e.exports=function(e,t){return function(n){return e(t(n))}}},function(e,t,n){var r=n(267),o=n(86),i=n(268),a=n(154),s=n(269),u=n(35),l=n(144),c=l(r),d=l(o),h=l(i),p=l(a),f=l(s),y=u;(r&&"[object DataView]"!=y(new r(new ArrayBuffer(1)))||o&&"[object Map]"!=y(new o)||i&&"[object Promise]"!=y(i.resolve())||a&&"[object Set]"!=y(new a)||s&&"[object WeakMap]"!=y(new s))&&(y=function(e){var t=u(e),n="[object Object]"==t?e.constructor:void 0,r=n?l(n):"";if(r)switch(r){case c:return"[object DataView]";case d:return"[object Map]";case h:return"[object Promise]";case p:return"[object Set]";case f:return"[object WeakMap]"}return t}),e.exports=y},function(e,t,n){var r=n(22)(n(18),"DataView");e.exports=r},function(e,t,n){var r=n(22)(n(18),"Promise");e.exports=r},function(e,t,n){var r=n(22)(n(18),"WeakMap");e.exports=r},function(e,t,n){var r=n(155),o=n(149);e.exports=function(e){for(var t=o(e),n=t.length;n--;){var i=t[n],a=e[i];t[n]=[i,a,r(a)]}return t}},function(e,t,n){var r=n(145),o=n(272),i=n(279),a=n(91),s=n(155),u=n(156),l=n(64);e.exports=function(e,t){return a(e)&&s(t)?u(l(e),t):function(n){var a=o(n,e);return void 0===a&&a===t?i(n,e):r(t,a,3)}}},function(e,t,n){var r=n(157);e.exports=function(e,t,n){var o=null==e?void 0:r(e,t);return void 0===o?n:o}},function(e,t,n){var r=n(274),o=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,i=/\\(\\)?/g,a=r((function(e){var t=[];return 46===e.charCodeAt(0)&&t.push(""),e.replace(o,(function(e,n,r,o){t.push(r?o.replace(i,"$1"):n||e)})),t}));e.exports=a},function(e,t,n){var r=n(275);e.exports=function(e){var t=r(e,(function(e){return 500===n.size&&n.clear(),e})),n=t.cache;return t}},function(e,t,n){var r=n(88);function o(e,t){if("function"!=typeof e||null!=t&&"function"!=typeof t)throw new TypeError("Expected a function");var n=function(){var r=arguments,o=t?t.apply(this,r):r[0],i=n.cache;if(i.has(o))return i.get(o);var a=e.apply(this,r);return n.cache=i.set(o,a)||i,a};return n.cache=new(o.Cache||r),n}o.Cache=r,e.exports=o},function(e,t,n){var r=n(277);e.exports=function(e){return null==e?"":r(e)}},function(e,t,n){var r=n(41),o=n(278),i=n(17),a=n(92),s=r?r.prototype:void 0,u=s?s.toString:void 0;e.exports=function e(t){if("string"==typeof t)return t;if(i(t))return o(t,e)+"";if(a(t))return u?u.call(t):"";var n=t+"";return"0"==n&&1/t==-1/0?"-0":n}},function(e,t){e.exports=function(e,t){for(var n=-1,r=null==e?0:e.length,o=Array(r);++n<r;)o[n]=t(e[n],n,e);return o}},function(e,t,n){var r=n(280),o=n(281);e.exports=function(e,t){return null!=e&&o(e,t,r)}},function(e,t){e.exports=function(e,t){return null!=e&&t in Object(e)}},function(e,t,n){var r=n(158),o=n(85),i=n(17),a=n(151),s=n(90),u=n(64);e.exports=function(e,t,n){for(var l=-1,c=(t=r(t,e)).length,d=!1;++l<c;){var h=u(t[l]);if(!(d=null!=e&&n(e,h)))break;e=e[h]}return d||++l!=c?d:!!(c=null==e?0:e.length)&&s(c)&&a(h,c)&&(i(e)||o(e))}},function(e,t,n){var r=n(283),o=n(284),i=n(91),a=n(64);e.exports=function(e){return i(e)?r(a(e)):o(e)}},function(e,t){e.exports=function(e){return function(t){return null==t?void 0:t[e]}}},function(e,t,n){var r=n(157);e.exports=function(e){return function(t){return r(t,e)}}},function(e,t,n){var r=n(93),o=n(286),i=n(288);e.exports=function(e,t){return i(o(e,t,r),e+"")}},function(e,t,n){var r=n(287),o=Math.max;e.exports=function(e,t,n){return t=o(void 0===t?e.length-1:t,0),function(){for(var i=arguments,a=-1,s=o(i.length-t,0),u=Array(s);++a<s;)u[a]=i[t+a];a=-1;for(var l=Array(t+1);++a<t;)l[a]=i[a];return l[t]=n(u),r(e,this,l)}}},function(e,t){e.exports=function(e,t,n){switch(n.length){case 0:return e.call(t);case 1:return e.call(t,n[0]);case 2:return e.call(t,n[0],n[1]);case 3:return e.call(t,n[0],n[1],n[2])}return e.apply(t,n)}},function(e,t,n){var r=n(289),o=n(292)(r);e.exports=o},function(e,t,n){var r=n(290),o=n(291),i=n(93),a=o?function(e,t){return o(e,"toString",{configurable:!0,enumerable:!1,value:r(t),writable:!0})}:i;e.exports=a},function(e,t){e.exports=function(e){return function(){return e}}},function(e,t,n){var r=n(22),o=function(){try{var e=r(Object,"defineProperty");return e({},"",{}),e}catch(e){}}();e.exports=o},function(e,t){var n=Date.now;e.exports=function(e){var t=0,r=0;return function(){var o=n(),i=16-(o-r);if(r=o,i>0){if(++t>=800)return arguments[0]}else t=0;return e.apply(void 0,arguments)}}},function(e,t,n){var r=n(147),o=n(294),i=n(299),a=n(148),s=n(300),u=n(89);e.exports=function(e,t,n){var l=-1,c=o,d=e.length,h=!0,p=[],f=p;if(n)h=!1,c=i;else if(d>=200){var y=t?null:s(e);if(y)return u(y);h=!1,c=a,f=new r}else f=t?[]:p;e:for(;++l<d;){var m=e[l],g=t?t(m):m;if(m=n||0!==m?m:0,h&&g==g){for(var b=f.length;b--;)if(f[b]===g)continue e;t&&f.push(g),p.push(m)}else c(f,g,n)||(f!==p&&f.push(g),p.push(m))}return p}},function(e,t,n){var r=n(295);e.exports=function(e,t){return!!(null==e?0:e.length)&&r(e,t,0)>-1}},function(e,t,n){var r=n(296),o=n(297),i=n(298);e.exports=function(e,t,n){return t==t?i(e,t,n):r(e,o,n)}},function(e,t){e.exports=function(e,t,n,r){for(var o=e.length,i=n+(r?1:-1);r?i--:++i<o;)if(t(e[i],i,e))return i;return-1}},function(e,t){e.exports=function(e){return e!=e}},function(e,t){e.exports=function(e,t,n){for(var r=n-1,o=e.length;++r<o;)if(e[r]===t)return r;return-1}},function(e,t){e.exports=function(e,t,n){for(var r=-1,o=null==e?0:e.length;++r<o;)if(n(t,e[r]))return!0;return!1}},function(e,t,n){var r=n(154),o=n(301),i=n(89),a=r&&1/i(new r([,-0]))[1]==1/0?function(e){return new r(e)}:o;e.exports=a},function(e,t){e.exports=function(){}},function(e,t,n){var r=n(153),o=n(25);e.exports=function(e){return o(e)&&r(e)}},function(e,t,n){},function(e,t,n){},function(e,t,n){"use strict";var r=n(21),o=n(4),i=[].slice,a={},s=function(e,t,n){if(!(t in a)){for(var r=[],o=0;o<t;o++)r[o]="a["+o+"]";a[t]=Function("C,a","return new C("+r.join(",")+")")}return a[t](e,n)};e.exports=Function.bind||function(e){var t=r(this),n=i.call(arguments,1),a=function(){var r=n.concat(i.call(arguments));return this instanceof a?s(t,r.length,r):t.apply(e,r)};return o(t.prototype)&&(a.prototype=t.prototype),a}},function(e,t,n){"use strict";n(161)},function(e,t,n){"use strict";n(162)},function(e,t,n){"use strict";n.r(t);n(102),n(191),n(198),n(199);var r=n(56),o=(n(100),n(49),n(9),n(11),n(16),n(67),n(27),Object.freeze({}));function i(e){return null==e}function a(e){return null!=e}function s(e){return!0===e}function u(e){return"string"==typeof e||"number"==typeof e||"symbol"==typeof e||"boolean"==typeof e}function l(e){return null!==e&&"object"==typeof e}var c=Object.prototype.toString;function d(e){return"[object Object]"===c.call(e)}function h(e){return"[object RegExp]"===c.call(e)}function p(e){var t=parseFloat(String(e));return t>=0&&Math.floor(t)===t&&isFinite(e)}function f(e){return a(e)&&"function"==typeof e.then&&"function"==typeof e.catch}function y(e){return null==e?"":Array.isArray(e)||d(e)&&e.toString===c?JSON.stringify(e,null,2):String(e)}function m(e){var t=parseFloat(e);return isNaN(t)?e:t}function g(e,t){for(var n=Object.create(null),r=e.split(","),o=0;o<r.length;o++)n[r[o]]=!0;return t?function(e){return n[e.toLowerCase()]}:function(e){return n[e]}}g("slot,component",!0);var b=g("key,ref,slot,slot-scope,is");function v(e,t){if(e.length){var n=e.indexOf(t);if(n>-1)return e.splice(n,1)}}var w=Object.prototype.hasOwnProperty;function k(e,t){return w.call(e,t)}function x(e){var t=Object.create(null);return function(n){return t[n]||(t[n]=e(n))}}var j=/-(\w)/g,q=x((function(e){return e.replace(j,(function(e,t){return t?t.toUpperCase():""}))})),S=x((function(e){return e.charAt(0).toUpperCase()+e.slice(1)})),_=/\B([A-Z])/g,T=x((function(e){return e.replace(_,"-$1").toLowerCase()}));var P=Function.prototype.bind?function(e,t){return e.bind(t)}:function(e,t){function n(n){var r=arguments.length;return r?r>1?e.apply(t,arguments):e.call(t,n):e.call(t)}return n._length=e.length,n};function O(e,t){t=t||0;for(var n=e.length-t,r=new Array(n);n--;)r[n]=e[n+t];return r}function I(e,t){for(var n in t)e[n]=t[n];return e}function C(e){for(var t={},n=0;n<e.length;n++)e[n]&&I(t,e[n]);return t}function A(e,t,n){}var E=function(e,t,n){return!1},L=function(e){return e};function Q(e,t){if(e===t)return!0;var n=l(e),r=l(t);if(!n||!r)return!n&&!r&&String(e)===String(t);try{var o=Array.isArray(e),i=Array.isArray(t);if(o&&i)return e.length===t.length&&e.every((function(e,n){return Q(e,t[n])}));if(e instanceof Date&&t instanceof Date)return e.getTime()===t.getTime();if(o||i)return!1;var a=Object.keys(e),s=Object.keys(t);return a.length===s.length&&a.every((function(n){return Q(e[n],t[n])}))}catch(e){return!1}}function $(e,t){for(var n=0;n<e.length;n++)if(Q(e[n],t))return n;return-1}function R(e){var t=!1;return function(){t||(t=!0,e.apply(this,arguments))}}var z=["component","directive","filter"],M=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch"],N={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:E,isReservedAttr:E,isUnknownElement:E,getTagNamespace:A,parsePlatformTagName:L,mustUseProp:E,async:!0,_lifecycleHooks:M},D=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function H(e,t,n,r){Object.defineProperty(e,t,{value:n,enumerable:!!r,writable:!0,configurable:!0})}var B=new RegExp("[^"+D.source+".$_\\d]");var F,U="__proto__"in{},G="undefined"!=typeof window,W="undefined"!=typeof WXEnvironment&&!!WXEnvironment.platform,V=W&&WXEnvironment.platform.toLowerCase(),Y=G&&window.navigator.userAgent.toLowerCase(),J=Y&&/msie|trident/.test(Y),K=Y&&Y.indexOf("msie 9.0")>0,Z=Y&&Y.indexOf("edge/")>0,X=(Y&&Y.indexOf("android"),Y&&/iphone|ipad|ipod|ios/.test(Y)||"ios"===V),ee=(Y&&/chrome\/\d+/.test(Y),Y&&/phantomjs/.test(Y),Y&&Y.match(/firefox\/(\d+)/)),te={}.watch,ne=!1;if(G)try{var re={};Object.defineProperty(re,"passive",{get:function(){ne=!0}}),window.addEventListener("test-passive",null,re)}catch(e){}var oe=function(){return void 0===F&&(F=!G&&!W&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),F},ie=G&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function ae(e){return"function"==typeof e&&/native code/.test(e.toString())}var se,ue="undefined"!=typeof Symbol&&ae(Symbol)&&"undefined"!=typeof Reflect&&ae(Reflect.ownKeys);se="undefined"!=typeof Set&&ae(Set)?Set:function(){function e(){this.set=Object.create(null)}return e.prototype.has=function(e){return!0===this.set[e]},e.prototype.add=function(e){this.set[e]=!0},e.prototype.clear=function(){this.set=Object.create(null)},e}();var le=A,ce=0,de=function(){this.id=ce++,this.subs=[]};de.prototype.addSub=function(e){this.subs.push(e)},de.prototype.removeSub=function(e){v(this.subs,e)},de.prototype.depend=function(){de.target&&de.target.addDep(this)},de.prototype.notify=function(){var e=this.subs.slice();for(var t=0,n=e.length;t<n;t++)e[t].update()},de.target=null;var he=[];function pe(e){he.push(e),de.target=e}function fe(){he.pop(),de.target=he[he.length-1]}var ye=function(e,t,n,r,o,i,a,s){this.tag=e,this.data=t,this.children=n,this.text=r,this.elm=o,this.ns=void 0,this.context=i,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=t&&t.key,this.componentOptions=a,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=s,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1},me={child:{configurable:!0}};me.child.get=function(){return this.componentInstance},Object.defineProperties(ye.prototype,me);var ge=function(e){void 0===e&&(e="");var t=new ye;return t.text=e,t.isComment=!0,t};function be(e){return new ye(void 0,void 0,void 0,String(e))}function ve(e){var t=new ye(e.tag,e.data,e.children&&e.children.slice(),e.text,e.elm,e.context,e.componentOptions,e.asyncFactory);return t.ns=e.ns,t.isStatic=e.isStatic,t.key=e.key,t.isComment=e.isComment,t.fnContext=e.fnContext,t.fnOptions=e.fnOptions,t.fnScopeId=e.fnScopeId,t.asyncMeta=e.asyncMeta,t.isCloned=!0,t}var we=Array.prototype,ke=Object.create(we);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(e){var t=we[e];H(ke,e,(function(){for(var n=[],r=arguments.length;r--;)n[r]=arguments[r];var o,i=t.apply(this,n),a=this.__ob__;switch(e){case"push":case"unshift":o=n;break;case"splice":o=n.slice(2)}return o&&a.observeArray(o),a.dep.notify(),i}))}));var xe=Object.getOwnPropertyNames(ke),je=!0;function qe(e){je=e}var Se=function(e){this.value=e,this.dep=new de,this.vmCount=0,H(e,"__ob__",this),Array.isArray(e)?(U?function(e,t){e.__proto__=t}(e,ke):function(e,t,n){for(var r=0,o=n.length;r<o;r++){var i=n[r];H(e,i,t[i])}}(e,ke,xe),this.observeArray(e)):this.walk(e)};function _e(e,t){var n;if(l(e)&&!(e instanceof ye))return k(e,"__ob__")&&e.__ob__ instanceof Se?n=e.__ob__:je&&!oe()&&(Array.isArray(e)||d(e))&&Object.isExtensible(e)&&!e._isVue&&(n=new Se(e)),t&&n&&n.vmCount++,n}function Te(e,t,n,r,o){var i=new de,a=Object.getOwnPropertyDescriptor(e,t);if(!a||!1!==a.configurable){var s=a&&a.get,u=a&&a.set;s&&!u||2!==arguments.length||(n=e[t]);var l=!o&&_e(n);Object.defineProperty(e,t,{enumerable:!0,configurable:!0,get:function(){var t=s?s.call(e):n;return de.target&&(i.depend(),l&&(l.dep.depend(),Array.isArray(t)&&Ie(t))),t},set:function(t){var r=s?s.call(e):n;t===r||t!=t&&r!=r||s&&!u||(u?u.call(e,t):n=t,l=!o&&_e(t),i.notify())}})}}function Pe(e,t,n){if(Array.isArray(e)&&p(t))return e.length=Math.max(e.length,t),e.splice(t,1,n),n;if(t in e&&!(t in Object.prototype))return e[t]=n,n;var r=e.__ob__;return e._isVue||r&&r.vmCount?n:r?(Te(r.value,t,n),r.dep.notify(),n):(e[t]=n,n)}function Oe(e,t){if(Array.isArray(e)&&p(t))e.splice(t,1);else{var n=e.__ob__;e._isVue||n&&n.vmCount||k(e,t)&&(delete e[t],n&&n.dep.notify())}}function Ie(e){for(var t=void 0,n=0,r=e.length;n<r;n++)(t=e[n])&&t.__ob__&&t.__ob__.dep.depend(),Array.isArray(t)&&Ie(t)}Se.prototype.walk=function(e){for(var t=Object.keys(e),n=0;n<t.length;n++)Te(e,t[n])},Se.prototype.observeArray=function(e){for(var t=0,n=e.length;t<n;t++)_e(e[t])};var Ce=N.optionMergeStrategies;function Ae(e,t){if(!t)return e;for(var n,r,o,i=ue?Reflect.ownKeys(t):Object.keys(t),a=0;a<i.length;a++)"__ob__"!==(n=i[a])&&(r=e[n],o=t[n],k(e,n)?r!==o&&d(r)&&d(o)&&Ae(r,o):Pe(e,n,o));return e}function Ee(e,t,n){return n?function(){var r="function"==typeof t?t.call(n,n):t,o="function"==typeof e?e.call(n,n):e;return r?Ae(r,o):o}:t?e?function(){return Ae("function"==typeof t?t.call(this,this):t,"function"==typeof e?e.call(this,this):e)}:t:e}function Le(e,t){var n=t?e?e.concat(t):Array.isArray(t)?t:[t]:e;return n?function(e){for(var t=[],n=0;n<e.length;n++)-1===t.indexOf(e[n])&&t.push(e[n]);return t}(n):n}function Qe(e,t,n,r){var o=Object.create(e||null);return t?I(o,t):o}Ce.data=function(e,t,n){return n?Ee(e,t,n):t&&"function"!=typeof t?e:Ee(e,t)},M.forEach((function(e){Ce[e]=Le})),z.forEach((function(e){Ce[e+"s"]=Qe})),Ce.watch=function(e,t,n,r){if(e===te&&(e=void 0),t===te&&(t=void 0),!t)return Object.create(e||null);if(!e)return t;var o={};for(var i in I(o,e),t){var a=o[i],s=t[i];a&&!Array.isArray(a)&&(a=[a]),o[i]=a?a.concat(s):Array.isArray(s)?s:[s]}return o},Ce.props=Ce.methods=Ce.inject=Ce.computed=function(e,t,n,r){if(!e)return t;var o=Object.create(null);return I(o,e),t&&I(o,t),o},Ce.provide=Ee;var $e=function(e,t){return void 0===t?e:t};function Re(e,t,n){if("function"==typeof t&&(t=t.options),function(e,t){var n=e.props;if(n){var r,o,i={};if(Array.isArray(n))for(r=n.length;r--;)"string"==typeof(o=n[r])&&(i[q(o)]={type:null});else if(d(n))for(var a in n)o=n[a],i[q(a)]=d(o)?o:{type:o};else 0;e.props=i}}(t),function(e,t){var n=e.inject;if(n){var r=e.inject={};if(Array.isArray(n))for(var o=0;o<n.length;o++)r[n[o]]={from:n[o]};else if(d(n))for(var i in n){var a=n[i];r[i]=d(a)?I({from:i},a):{from:a}}else 0}}(t),function(e){var t=e.directives;if(t)for(var n in t){var r=t[n];"function"==typeof r&&(t[n]={bind:r,update:r})}}(t),!t._base&&(t.extends&&(e=Re(e,t.extends,n)),t.mixins))for(var r=0,o=t.mixins.length;r<o;r++)e=Re(e,t.mixins[r],n);var i,a={};for(i in e)s(i);for(i in t)k(e,i)||s(i);function s(r){var o=Ce[r]||$e;a[r]=o(e[r],t[r],n,r)}return a}function ze(e,t,n,r){if("string"==typeof n){var o=e[t];if(k(o,n))return o[n];var i=q(n);if(k(o,i))return o[i];var a=S(i);return k(o,a)?o[a]:o[n]||o[i]||o[a]}}function Me(e,t,n,r){var o=t[e],i=!k(n,e),a=n[e],s=Be(Boolean,o.type);if(s>-1)if(i&&!k(o,"default"))a=!1;else if(""===a||a===T(e)){var u=Be(String,o.type);(u<0||s<u)&&(a=!0)}if(void 0===a){a=function(e,t,n){if(!k(t,"default"))return;var r=t.default;0;if(e&&e.$options.propsData&&void 0===e.$options.propsData[n]&&void 0!==e._props[n])return e._props[n];return"function"==typeof r&&"Function"!==De(t.type)?r.call(e):r}(r,o,e);var l=je;qe(!0),_e(a),qe(l)}return a}var Ne=/^\s*function (\w+)/;function De(e){var t=e&&e.toString().match(Ne);return t?t[1]:""}function He(e,t){return De(e)===De(t)}function Be(e,t){if(!Array.isArray(t))return He(t,e)?0:-1;for(var n=0,r=t.length;n<r;n++)if(He(t[n],e))return n;return-1}function Fe(e,t,n){pe();try{if(t)for(var r=t;r=r.$parent;){var o=r.$options.errorCaptured;if(o)for(var i=0;i<o.length;i++)try{if(!1===o[i].call(r,e,t,n))return}catch(e){Ge(e,r,"errorCaptured hook")}}Ge(e,t,n)}finally{fe()}}function Ue(e,t,n,r,o){var i;try{(i=n?e.apply(t,n):e.call(t))&&!i._isVue&&f(i)&&!i._handled&&(i.catch((function(e){return Fe(e,r,o+" (Promise/async)")})),i._handled=!0)}catch(e){Fe(e,r,o)}return i}function Ge(e,t,n){if(N.errorHandler)try{return N.errorHandler.call(null,e,t,n)}catch(t){t!==e&&We(t,null,"config.errorHandler")}We(e,t,n)}function We(e,t,n){if(!G&&!W||"undefined"==typeof console)throw e;console.error(e)}var Ve,Ye=!1,Je=[],Ke=!1;function Ze(){Ke=!1;var e=Je.slice(0);Je.length=0;for(var t=0;t<e.length;t++)e[t]()}if("undefined"!=typeof Promise&&ae(Promise)){var Xe=Promise.resolve();Ve=function(){Xe.then(Ze),X&&setTimeout(A)},Ye=!0}else if(J||"undefined"==typeof MutationObserver||!ae(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Ve="undefined"!=typeof setImmediate&&ae(setImmediate)?function(){setImmediate(Ze)}:function(){setTimeout(Ze,0)};else{var et=1,tt=new MutationObserver(Ze),nt=document.createTextNode(String(et));tt.observe(nt,{characterData:!0}),Ve=function(){et=(et+1)%2,nt.data=String(et)},Ye=!0}function rt(e,t){var n;if(Je.push((function(){if(e)try{e.call(t)}catch(e){Fe(e,t,"nextTick")}else n&&n(t)})),Ke||(Ke=!0,Ve()),!e&&"undefined"!=typeof Promise)return new Promise((function(e){n=e}))}var ot=new se;function it(e){!function e(t,n){var r,o,i=Array.isArray(t);if(!i&&!l(t)||Object.isFrozen(t)||t instanceof ye)return;if(t.__ob__){var a=t.__ob__.dep.id;if(n.has(a))return;n.add(a)}if(i)for(r=t.length;r--;)e(t[r],n);else for(o=Object.keys(t),r=o.length;r--;)e(t[o[r]],n)}(e,ot),ot.clear()}var at=x((function(e){var t="&"===e.charAt(0),n="~"===(e=t?e.slice(1):e).charAt(0),r="!"===(e=n?e.slice(1):e).charAt(0);return{name:e=r?e.slice(1):e,once:n,capture:r,passive:t}}));function st(e,t){function n(){var e=arguments,r=n.fns;if(!Array.isArray(r))return Ue(r,null,arguments,t,"v-on handler");for(var o=r.slice(),i=0;i<o.length;i++)Ue(o[i],null,e,t,"v-on handler")}return n.fns=e,n}function ut(e,t,n,r,o,a){var u,l,c,d;for(u in e)l=e[u],c=t[u],d=at(u),i(l)||(i(c)?(i(l.fns)&&(l=e[u]=st(l,a)),s(d.once)&&(l=e[u]=o(d.name,l,d.capture)),n(d.name,l,d.capture,d.passive,d.params)):l!==c&&(c.fns=l,e[u]=c));for(u in t)i(e[u])&&r((d=at(u)).name,t[u],d.capture)}function lt(e,t,n){var r;e instanceof ye&&(e=e.data.hook||(e.data.hook={}));var o=e[t];function u(){n.apply(this,arguments),v(r.fns,u)}i(o)?r=st([u]):a(o.fns)&&s(o.merged)?(r=o).fns.push(u):r=st([o,u]),r.merged=!0,e[t]=r}function ct(e,t,n,r,o){if(a(t)){if(k(t,n))return e[n]=t[n],o||delete t[n],!0;if(k(t,r))return e[n]=t[r],o||delete t[r],!0}return!1}function dt(e){return u(e)?[be(e)]:Array.isArray(e)?function e(t,n){var r,o,l,c,d=[];for(r=0;r<t.length;r++)i(o=t[r])||"boolean"==typeof o||(l=d.length-1,c=d[l],Array.isArray(o)?o.length>0&&(ht((o=e(o,(n||"")+"_"+r))[0])&&ht(c)&&(d[l]=be(c.text+o[0].text),o.shift()),d.push.apply(d,o)):u(o)?ht(c)?d[l]=be(c.text+o):""!==o&&d.push(be(o)):ht(o)&&ht(c)?d[l]=be(c.text+o.text):(s(t._isVList)&&a(o.tag)&&i(o.key)&&a(n)&&(o.key="__vlist"+n+"_"+r+"__"),d.push(o)));return d}(e):void 0}function ht(e){return a(e)&&a(e.text)&&!1===e.isComment}function pt(e,t){if(e){for(var n=Object.create(null),r=ue?Reflect.ownKeys(e):Object.keys(e),o=0;o<r.length;o++){var i=r[o];if("__ob__"!==i){for(var a=e[i].from,s=t;s;){if(s._provided&&k(s._provided,a)){n[i]=s._provided[a];break}s=s.$parent}if(!s)if("default"in e[i]){var u=e[i].default;n[i]="function"==typeof u?u.call(t):u}else 0}}return n}}function ft(e,t){if(!e||!e.length)return{};for(var n={},r=0,o=e.length;r<o;r++){var i=e[r],a=i.data;if(a&&a.attrs&&a.attrs.slot&&delete a.attrs.slot,i.context!==t&&i.fnContext!==t||!a||null==a.slot)(n.default||(n.default=[])).push(i);else{var s=a.slot,u=n[s]||(n[s]=[]);"template"===i.tag?u.push.apply(u,i.children||[]):u.push(i)}}for(var l in n)n[l].every(yt)&&delete n[l];return n}function yt(e){return e.isComment&&!e.asyncFactory||" "===e.text}function mt(e){return e.isComment&&e.asyncFactory}function gt(e,t,n){var r,i=Object.keys(t).length>0,a=e?!!e.$stable:!i,s=e&&e.$key;if(e){if(e._normalized)return e._normalized;if(a&&n&&n!==o&&s===n.$key&&!i&&!n.$hasNormal)return n;for(var u in r={},e)e[u]&&"$"!==u[0]&&(r[u]=bt(t,u,e[u]))}else r={};for(var l in t)l in r||(r[l]=vt(t,l));return e&&Object.isExtensible(e)&&(e._normalized=r),H(r,"$stable",a),H(r,"$key",s),H(r,"$hasNormal",i),r}function bt(e,t,n){var r=function(){var e=arguments.length?n.apply(null,arguments):n({}),t=(e=e&&"object"==typeof e&&!Array.isArray(e)?[e]:dt(e))&&e[0];return e&&(!t||1===e.length&&t.isComment&&!mt(t))?void 0:e};return n.proxy&&Object.defineProperty(e,t,{get:r,enumerable:!0,configurable:!0}),r}function vt(e,t){return function(){return e[t]}}function wt(e,t){var n,r,o,i,s;if(Array.isArray(e)||"string"==typeof e)for(n=new Array(e.length),r=0,o=e.length;r<o;r++)n[r]=t(e[r],r);else if("number"==typeof e)for(n=new Array(e),r=0;r<e;r++)n[r]=t(r+1,r);else if(l(e))if(ue&&e[Symbol.iterator]){n=[];for(var u=e[Symbol.iterator](),c=u.next();!c.done;)n.push(t(c.value,n.length)),c=u.next()}else for(i=Object.keys(e),n=new Array(i.length),r=0,o=i.length;r<o;r++)s=i[r],n[r]=t(e[s],s,r);return a(n)||(n=[]),n._isVList=!0,n}function kt(e,t,n,r){var o,i=this.$scopedSlots[e];i?(n=n||{},r&&(n=I(I({},r),n)),o=i(n)||("function"==typeof t?t():t)):o=this.$slots[e]||("function"==typeof t?t():t);var a=n&&n.slot;return a?this.$createElement("template",{slot:a},o):o}function xt(e){return ze(this.$options,"filters",e)||L}function jt(e,t){return Array.isArray(e)?-1===e.indexOf(t):e!==t}function qt(e,t,n,r,o){var i=N.keyCodes[t]||n;return o&&r&&!N.keyCodes[t]?jt(o,r):i?jt(i,e):r?T(r)!==t:void 0===e}function St(e,t,n,r,o){if(n)if(l(n)){var i;Array.isArray(n)&&(n=C(n));var a=function(a){if("class"===a||"style"===a||b(a))i=e;else{var s=e.attrs&&e.attrs.type;i=r||N.mustUseProp(t,s,a)?e.domProps||(e.domProps={}):e.attrs||(e.attrs={})}var u=q(a),l=T(a);u in i||l in i||(i[a]=n[a],o&&((e.on||(e.on={}))["update:"+a]=function(e){n[a]=e}))};for(var s in n)a(s)}else;return e}function _t(e,t){var n=this._staticTrees||(this._staticTrees=[]),r=n[e];return r&&!t||Pt(r=n[e]=this.$options.staticRenderFns[e].call(this._renderProxy,null,this),"__static__"+e,!1),r}function Tt(e,t,n){return Pt(e,"__once__"+t+(n?"_"+n:""),!0),e}function Pt(e,t,n){if(Array.isArray(e))for(var r=0;r<e.length;r++)e[r]&&"string"!=typeof e[r]&&Ot(e[r],t+"_"+r,n);else Ot(e,t,n)}function Ot(e,t,n){e.isStatic=!0,e.key=t,e.isOnce=n}function It(e,t){if(t)if(d(t)){var n=e.on=e.on?I({},e.on):{};for(var r in t){var o=n[r],i=t[r];n[r]=o?[].concat(o,i):i}}else;return e}function Ct(e,t,n,r){t=t||{$stable:!n};for(var o=0;o<e.length;o++){var i=e[o];Array.isArray(i)?Ct(i,t,n):i&&(i.proxy&&(i.fn.proxy=!0),t[i.key]=i.fn)}return r&&(t.$key=r),t}function At(e,t){for(var n=0;n<t.length;n+=2){var r=t[n];"string"==typeof r&&r&&(e[t[n]]=t[n+1])}return e}function Et(e,t){return"string"==typeof e?t+e:e}function Lt(e){e._o=Tt,e._n=m,e._s=y,e._l=wt,e._t=kt,e._q=Q,e._i=$,e._m=_t,e._f=xt,e._k=qt,e._b=St,e._v=be,e._e=ge,e._u=Ct,e._g=It,e._d=At,e._p=Et}function Qt(e,t,n,r,i){var a,u=this,l=i.options;k(r,"_uid")?(a=Object.create(r))._original=r:(a=r,r=r._original);var c=s(l._compiled),d=!c;this.data=e,this.props=t,this.children=n,this.parent=r,this.listeners=e.on||o,this.injections=pt(l.inject,r),this.slots=function(){return u.$slots||gt(e.scopedSlots,u.$slots=ft(n,r)),u.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return gt(e.scopedSlots,this.slots())}}),c&&(this.$options=l,this.$slots=this.slots(),this.$scopedSlots=gt(e.scopedSlots,this.$slots)),l._scopeId?this._c=function(e,t,n,o){var i=Ht(a,e,t,n,o,d);return i&&!Array.isArray(i)&&(i.fnScopeId=l._scopeId,i.fnContext=r),i}:this._c=function(e,t,n,r){return Ht(a,e,t,n,r,d)}}function $t(e,t,n,r,o){var i=ve(e);return i.fnContext=n,i.fnOptions=r,t.slot&&((i.data||(i.data={})).slot=t.slot),i}function Rt(e,t){for(var n in t)e[q(n)]=t[n]}Lt(Qt.prototype);var zt={init:function(e,t){if(e.componentInstance&&!e.componentInstance._isDestroyed&&e.data.keepAlive){var n=e;zt.prepatch(n,n)}else{(e.componentInstance=function(e,t){var n={_isComponent:!0,_parentVnode:e,parent:t},r=e.data.inlineTemplate;a(r)&&(n.render=r.render,n.staticRenderFns=r.staticRenderFns);return new e.componentOptions.Ctor(n)}(e,Kt)).$mount(t?e.elm:void 0,t)}},prepatch:function(e,t){var n=t.componentOptions;!function(e,t,n,r,i){0;var a=r.data.scopedSlots,s=e.$scopedSlots,u=!!(a&&!a.$stable||s!==o&&!s.$stable||a&&e.$scopedSlots.$key!==a.$key||!a&&e.$scopedSlots.$key),l=!!(i||e.$options._renderChildren||u);e.$options._parentVnode=r,e.$vnode=r,e._vnode&&(e._vnode.parent=r);if(e.$options._renderChildren=i,e.$attrs=r.data.attrs||o,e.$listeners=n||o,t&&e.$options.props){qe(!1);for(var c=e._props,d=e.$options._propKeys||[],h=0;h<d.length;h++){var p=d[h],f=e.$options.props;c[p]=Me(p,f,t,e)}qe(!0),e.$options.propsData=t}n=n||o;var y=e.$options._parentListeners;e.$options._parentListeners=n,Jt(e,n,y),l&&(e.$slots=ft(i,r.context),e.$forceUpdate());0}(t.componentInstance=e.componentInstance,n.propsData,n.listeners,t,n.children)},insert:function(e){var t,n=e.context,r=e.componentInstance;r._isMounted||(r._isMounted=!0,tn(r,"mounted")),e.data.keepAlive&&(n._isMounted?((t=r)._inactive=!1,rn.push(t)):en(r,!0))},destroy:function(e){var t=e.componentInstance;t._isDestroyed||(e.data.keepAlive?function e(t,n){if(n&&(t._directInactive=!0,Xt(t)))return;if(!t._inactive){t._inactive=!0;for(var r=0;r<t.$children.length;r++)e(t.$children[r]);tn(t,"deactivated")}}(t,!0):t.$destroy())}},Mt=Object.keys(zt);function Nt(e,t,n,r,u){if(!i(e)){var c=n.$options._base;if(l(e)&&(e=c.extend(e)),"function"==typeof e){var d;if(i(e.cid)&&void 0===(e=function(e,t){if(s(e.error)&&a(e.errorComp))return e.errorComp;if(a(e.resolved))return e.resolved;var n=Ft;n&&a(e.owners)&&-1===e.owners.indexOf(n)&&e.owners.push(n);if(s(e.loading)&&a(e.loadingComp))return e.loadingComp;if(n&&!a(e.owners)){var r=e.owners=[n],o=!0,u=null,c=null;n.$on("hook:destroyed",(function(){return v(r,n)}));var d=function(e){for(var t=0,n=r.length;t<n;t++)r[t].$forceUpdate();e&&(r.length=0,null!==u&&(clearTimeout(u),u=null),null!==c&&(clearTimeout(c),c=null))},h=R((function(n){e.resolved=Ut(n,t),o?r.length=0:d(!0)})),p=R((function(t){a(e.errorComp)&&(e.error=!0,d(!0))})),y=e(h,p);return l(y)&&(f(y)?i(e.resolved)&&y.then(h,p):f(y.component)&&(y.component.then(h,p),a(y.error)&&(e.errorComp=Ut(y.error,t)),a(y.loading)&&(e.loadingComp=Ut(y.loading,t),0===y.delay?e.loading=!0:u=setTimeout((function(){u=null,i(e.resolved)&&i(e.error)&&(e.loading=!0,d(!1))}),y.delay||200)),a(y.timeout)&&(c=setTimeout((function(){c=null,i(e.resolved)&&p(null)}),y.timeout)))),o=!1,e.loading?e.loadingComp:e.resolved}}(d=e,c)))return function(e,t,n,r,o){var i=ge();return i.asyncFactory=e,i.asyncMeta={data:t,context:n,children:r,tag:o},i}(d,t,n,r,u);t=t||{},qn(e),a(t.model)&&function(e,t){var n=e.model&&e.model.prop||"value",r=e.model&&e.model.event||"input";(t.attrs||(t.attrs={}))[n]=t.model.value;var o=t.on||(t.on={}),i=o[r],s=t.model.callback;a(i)?(Array.isArray(i)?-1===i.indexOf(s):i!==s)&&(o[r]=[s].concat(i)):o[r]=s}(e.options,t);var h=function(e,t,n){var r=t.options.props;if(!i(r)){var o={},s=e.attrs,u=e.props;if(a(s)||a(u))for(var l in r){var c=T(l);ct(o,u,l,c,!0)||ct(o,s,l,c,!1)}return o}}(t,e);if(s(e.options.functional))return function(e,t,n,r,i){var s=e.options,u={},l=s.props;if(a(l))for(var c in l)u[c]=Me(c,l,t||o);else a(n.attrs)&&Rt(u,n.attrs),a(n.props)&&Rt(u,n.props);var d=new Qt(n,u,i,r,e),h=s.render.call(null,d._c,d);if(h instanceof ye)return $t(h,n,d.parent,s,d);if(Array.isArray(h)){for(var p=dt(h)||[],f=new Array(p.length),y=0;y<p.length;y++)f[y]=$t(p[y],n,d.parent,s,d);return f}}(e,h,t,n,r);var p=t.on;if(t.on=t.nativeOn,s(e.options.abstract)){var y=t.slot;t={},y&&(t.slot=y)}!function(e){for(var t=e.hook||(e.hook={}),n=0;n<Mt.length;n++){var r=Mt[n],o=t[r],i=zt[r];o===i||o&&o._merged||(t[r]=o?Dt(i,o):i)}}(t);var m=e.options.name||u;return new ye("vue-component-"+e.cid+(m?"-"+m:""),t,void 0,void 0,void 0,n,{Ctor:e,propsData:h,listeners:p,tag:u,children:r},d)}}}function Dt(e,t){var n=function(n,r){e(n,r),t(n,r)};return n._merged=!0,n}function Ht(e,t,n,r,o,c){return(Array.isArray(n)||u(n))&&(o=r,r=n,n=void 0),s(c)&&(o=2),function(e,t,n,r,o){if(a(n)&&a(n.__ob__))return ge();a(n)&&a(n.is)&&(t=n.is);if(!t)return ge();0;Array.isArray(r)&&"function"==typeof r[0]&&((n=n||{}).scopedSlots={default:r[0]},r.length=0);2===o?r=dt(r):1===o&&(r=function(e){for(var t=0;t<e.length;t++)if(Array.isArray(e[t]))return Array.prototype.concat.apply([],e);return e}(r));var u,c;if("string"==typeof t){var d;c=e.$vnode&&e.$vnode.ns||N.getTagNamespace(t),u=N.isReservedTag(t)?new ye(N.parsePlatformTagName(t),n,r,void 0,void 0,e):n&&n.pre||!a(d=ze(e.$options,"components",t))?new ye(t,n,r,void 0,void 0,e):Nt(d,n,e,r,t)}else u=Nt(t,n,e,r);return Array.isArray(u)?u:a(u)?(a(c)&&function e(t,n,r){t.ns=n,"foreignObject"===t.tag&&(n=void 0,r=!0);if(a(t.children))for(var o=0,u=t.children.length;o<u;o++){var l=t.children[o];a(l.tag)&&(i(l.ns)||s(r)&&"svg"!==l.tag)&&e(l,n,r)}}(u,c),a(n)&&function(e){l(e.style)&&it(e.style);l(e.class)&&it(e.class)}(n),u):ge()}(e,t,n,r,o)}var Bt,Ft=null;function Ut(e,t){return(e.__esModule||ue&&"Module"===e[Symbol.toStringTag])&&(e=e.default),l(e)?t.extend(e):e}function Gt(e){if(Array.isArray(e))for(var t=0;t<e.length;t++){var n=e[t];if(a(n)&&(a(n.componentOptions)||mt(n)))return n}}function Wt(e,t){Bt.$on(e,t)}function Vt(e,t){Bt.$off(e,t)}function Yt(e,t){var n=Bt;return function r(){var o=t.apply(null,arguments);null!==o&&n.$off(e,r)}}function Jt(e,t,n){Bt=e,ut(t,n||{},Wt,Vt,Yt,e),Bt=void 0}var Kt=null;function Zt(e){var t=Kt;return Kt=e,function(){Kt=t}}function Xt(e){for(;e&&(e=e.$parent);)if(e._inactive)return!0;return!1}function en(e,t){if(t){if(e._directInactive=!1,Xt(e))return}else if(e._directInactive)return;if(e._inactive||null===e._inactive){e._inactive=!1;for(var n=0;n<e.$children.length;n++)en(e.$children[n]);tn(e,"activated")}}function tn(e,t){pe();var n=e.$options[t],r=t+" hook";if(n)for(var o=0,i=n.length;o<i;o++)Ue(n[o],e,null,e,r);e._hasHookEvent&&e.$emit("hook:"+t),fe()}var nn=[],rn=[],on={},an=!1,sn=!1,un=0;var ln=0,cn=Date.now;if(G&&!J){var dn=window.performance;dn&&"function"==typeof dn.now&&cn()>document.createEvent("Event").timeStamp&&(cn=function(){return dn.now()})}function hn(){var e,t;for(ln=cn(),sn=!0,nn.sort((function(e,t){return e.id-t.id})),un=0;un<nn.length;un++)(e=nn[un]).before&&e.before(),t=e.id,on[t]=null,e.run();var n=rn.slice(),r=nn.slice();un=nn.length=rn.length=0,on={},an=sn=!1,function(e){for(var t=0;t<e.length;t++)e[t]._inactive=!0,en(e[t],!0)}(n),function(e){var t=e.length;for(;t--;){var n=e[t],r=n.vm;r._watcher===n&&r._isMounted&&!r._isDestroyed&&tn(r,"updated")}}(r),ie&&N.devtools&&ie.emit("flush")}var pn=0,fn=function(e,t,n,r,o){this.vm=e,o&&(e._watcher=this),e._watchers.push(this),r?(this.deep=!!r.deep,this.user=!!r.user,this.lazy=!!r.lazy,this.sync=!!r.sync,this.before=r.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=n,this.id=++pn,this.active=!0,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new se,this.newDepIds=new se,this.expression="","function"==typeof t?this.getter=t:(this.getter=function(e){if(!B.test(e)){var t=e.split(".");return function(e){for(var n=0;n<t.length;n++){if(!e)return;e=e[t[n]]}return e}}}(t),this.getter||(this.getter=A)),this.value=this.lazy?void 0:this.get()};fn.prototype.get=function(){var e;pe(this);var t=this.vm;try{e=this.getter.call(t,t)}catch(e){if(!this.user)throw e;Fe(e,t,'getter for watcher "'+this.expression+'"')}finally{this.deep&&it(e),fe(),this.cleanupDeps()}return e},fn.prototype.addDep=function(e){var t=e.id;this.newDepIds.has(t)||(this.newDepIds.add(t),this.newDeps.push(e),this.depIds.has(t)||e.addSub(this))},fn.prototype.cleanupDeps=function(){for(var e=this.deps.length;e--;){var t=this.deps[e];this.newDepIds.has(t.id)||t.removeSub(this)}var n=this.depIds;this.depIds=this.newDepIds,this.newDepIds=n,this.newDepIds.clear(),n=this.deps,this.deps=this.newDeps,this.newDeps=n,this.newDeps.length=0},fn.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():function(e){var t=e.id;if(null==on[t]){if(on[t]=!0,sn){for(var n=nn.length-1;n>un&&nn[n].id>e.id;)n--;nn.splice(n+1,0,e)}else nn.push(e);an||(an=!0,rt(hn))}}(this)},fn.prototype.run=function(){if(this.active){var e=this.get();if(e!==this.value||l(e)||this.deep){var t=this.value;if(this.value=e,this.user){var n='callback for watcher "'+this.expression+'"';Ue(this.cb,this.vm,[e,t],this.vm,n)}else this.cb.call(this.vm,e,t)}}},fn.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},fn.prototype.depend=function(){for(var e=this.deps.length;e--;)this.deps[e].depend()},fn.prototype.teardown=function(){if(this.active){this.vm._isBeingDestroyed||v(this.vm._watchers,this);for(var e=this.deps.length;e--;)this.deps[e].removeSub(this);this.active=!1}};var yn={enumerable:!0,configurable:!0,get:A,set:A};function mn(e,t,n){yn.get=function(){return this[t][n]},yn.set=function(e){this[t][n]=e},Object.defineProperty(e,n,yn)}function gn(e){e._watchers=[];var t=e.$options;t.props&&function(e,t){var n=e.$options.propsData||{},r=e._props={},o=e.$options._propKeys=[];e.$parent&&qe(!1);var i=function(i){o.push(i);var a=Me(i,t,n,e);Te(r,i,a),i in e||mn(e,"_props",i)};for(var a in t)i(a);qe(!0)}(e,t.props),t.methods&&function(e,t){e.$options.props;for(var n in t)e[n]="function"!=typeof t[n]?A:P(t[n],e)}(e,t.methods),t.data?function(e){var t=e.$options.data;d(t=e._data="function"==typeof t?function(e,t){pe();try{return e.call(t,t)}catch(e){return Fe(e,t,"data()"),{}}finally{fe()}}(t,e):t||{})||(t={});var n=Object.keys(t),r=e.$options.props,o=(e.$options.methods,n.length);for(;o--;){var i=n[o];0,r&&k(r,i)||(a=void 0,36!==(a=(i+"").charCodeAt(0))&&95!==a&&mn(e,"_data",i))}var a;_e(t,!0)}(e):_e(e._data={},!0),t.computed&&function(e,t){var n=e._computedWatchers=Object.create(null),r=oe();for(var o in t){var i=t[o],a="function"==typeof i?i:i.get;0,r||(n[o]=new fn(e,a||A,A,bn)),o in e||vn(e,o,i)}}(e,t.computed),t.watch&&t.watch!==te&&function(e,t){for(var n in t){var r=t[n];if(Array.isArray(r))for(var o=0;o<r.length;o++)xn(e,n,r[o]);else xn(e,n,r)}}(e,t.watch)}var bn={lazy:!0};function vn(e,t,n){var r=!oe();"function"==typeof n?(yn.get=r?wn(t):kn(n),yn.set=A):(yn.get=n.get?r&&!1!==n.cache?wn(t):kn(n.get):A,yn.set=n.set||A),Object.defineProperty(e,t,yn)}function wn(e){return function(){var t=this._computedWatchers&&this._computedWatchers[e];if(t)return t.dirty&&t.evaluate(),de.target&&t.depend(),t.value}}function kn(e){return function(){return e.call(this,this)}}function xn(e,t,n,r){return d(n)&&(r=n,n=n.handler),"string"==typeof n&&(n=e[n]),e.$watch(t,n,r)}var jn=0;function qn(e){var t=e.options;if(e.super){var n=qn(e.super);if(n!==e.superOptions){e.superOptions=n;var r=function(e){var t,n=e.options,r=e.sealedOptions;for(var o in n)n[o]!==r[o]&&(t||(t={}),t[o]=n[o]);return t}(e);r&&I(e.extendOptions,r),(t=e.options=Re(n,e.extendOptions)).name&&(t.components[t.name]=e)}}return t}function Sn(e){this._init(e)}function _n(e){e.cid=0;var t=1;e.extend=function(e){e=e||{};var n=this,r=n.cid,o=e._Ctor||(e._Ctor={});if(o[r])return o[r];var i=e.name||n.options.name;var a=function(e){this._init(e)};return(a.prototype=Object.create(n.prototype)).constructor=a,a.cid=t++,a.options=Re(n.options,e),a.super=n,a.options.props&&function(e){var t=e.options.props;for(var n in t)mn(e.prototype,"_props",n)}(a),a.options.computed&&function(e){var t=e.options.computed;for(var n in t)vn(e.prototype,n,t[n])}(a),a.extend=n.extend,a.mixin=n.mixin,a.use=n.use,z.forEach((function(e){a[e]=n[e]})),i&&(a.options.components[i]=a),a.superOptions=n.options,a.extendOptions=e,a.sealedOptions=I({},a.options),o[r]=a,a}}function Tn(e){return e&&(e.Ctor.options.name||e.tag)}function Pn(e,t){return Array.isArray(e)?e.indexOf(t)>-1:"string"==typeof e?e.split(",").indexOf(t)>-1:!!h(e)&&e.test(t)}function On(e,t){var n=e.cache,r=e.keys,o=e._vnode;for(var i in n){var a=n[i];if(a){var s=a.name;s&&!t(s)&&In(n,i,r,o)}}}function In(e,t,n,r){var o=e[t];!o||r&&o.tag===r.tag||o.componentInstance.$destroy(),e[t]=null,v(n,t)}Sn.prototype._init=function(e){var t=this;t._uid=jn++,t._isVue=!0,e&&e._isComponent?function(e,t){var n=e.$options=Object.create(e.constructor.options),r=t._parentVnode;n.parent=t.parent,n._parentVnode=r;var o=r.componentOptions;n.propsData=o.propsData,n._parentListeners=o.listeners,n._renderChildren=o.children,n._componentTag=o.tag,t.render&&(n.render=t.render,n.staticRenderFns=t.staticRenderFns)}(t,e):t.$options=Re(qn(t.constructor),e||{},t),t._renderProxy=t,t._self=t,function(e){var t=e.$options,n=t.parent;if(n&&!t.abstract){for(;n.$options.abstract&&n.$parent;)n=n.$parent;n.$children.push(e)}e.$parent=n,e.$root=n?n.$root:e,e.$children=[],e.$refs={},e._watcher=null,e._inactive=null,e._directInactive=!1,e._isMounted=!1,e._isDestroyed=!1,e._isBeingDestroyed=!1}(t),function(e){e._events=Object.create(null),e._hasHookEvent=!1;var t=e.$options._parentListeners;t&&Jt(e,t)}(t),function(e){e._vnode=null,e._staticTrees=null;var t=e.$options,n=e.$vnode=t._parentVnode,r=n&&n.context;e.$slots=ft(t._renderChildren,r),e.$scopedSlots=o,e._c=function(t,n,r,o){return Ht(e,t,n,r,o,!1)},e.$createElement=function(t,n,r,o){return Ht(e,t,n,r,o,!0)};var i=n&&n.data;Te(e,"$attrs",i&&i.attrs||o,null,!0),Te(e,"$listeners",t._parentListeners||o,null,!0)}(t),tn(t,"beforeCreate"),function(e){var t=pt(e.$options.inject,e);t&&(qe(!1),Object.keys(t).forEach((function(n){Te(e,n,t[n])})),qe(!0))}(t),gn(t),function(e){var t=e.$options.provide;t&&(e._provided="function"==typeof t?t.call(e):t)}(t),tn(t,"created"),t.$options.el&&t.$mount(t.$options.el)},function(e){var t={get:function(){return this._data}},n={get:function(){return this._props}};Object.defineProperty(e.prototype,"$data",t),Object.defineProperty(e.prototype,"$props",n),e.prototype.$set=Pe,e.prototype.$delete=Oe,e.prototype.$watch=function(e,t,n){if(d(t))return xn(this,e,t,n);(n=n||{}).user=!0;var r=new fn(this,e,t,n);if(n.immediate){var o='callback for immediate watcher "'+r.expression+'"';pe(),Ue(t,this,[r.value],this,o),fe()}return function(){r.teardown()}}}(Sn),function(e){var t=/^hook:/;e.prototype.$on=function(e,n){var r=this;if(Array.isArray(e))for(var o=0,i=e.length;o<i;o++)r.$on(e[o],n);else(r._events[e]||(r._events[e]=[])).push(n),t.test(e)&&(r._hasHookEvent=!0);return r},e.prototype.$once=function(e,t){var n=this;function r(){n.$off(e,r),t.apply(n,arguments)}return r.fn=t,n.$on(e,r),n},e.prototype.$off=function(e,t){var n=this;if(!arguments.length)return n._events=Object.create(null),n;if(Array.isArray(e)){for(var r=0,o=e.length;r<o;r++)n.$off(e[r],t);return n}var i,a=n._events[e];if(!a)return n;if(!t)return n._events[e]=null,n;for(var s=a.length;s--;)if((i=a[s])===t||i.fn===t){a.splice(s,1);break}return n},e.prototype.$emit=function(e){var t=this,n=t._events[e];if(n){n=n.length>1?O(n):n;for(var r=O(arguments,1),o='event handler for "'+e+'"',i=0,a=n.length;i<a;i++)Ue(n[i],t,r,t,o)}return t}}(Sn),function(e){e.prototype._update=function(e,t){var n=this,r=n.$el,o=n._vnode,i=Zt(n);n._vnode=e,n.$el=o?n.__patch__(o,e):n.__patch__(n.$el,e,t,!1),i(),r&&(r.__vue__=null),n.$el&&(n.$el.__vue__=n),n.$vnode&&n.$parent&&n.$vnode===n.$parent._vnode&&(n.$parent.$el=n.$el)},e.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},e.prototype.$destroy=function(){var e=this;if(!e._isBeingDestroyed){tn(e,"beforeDestroy"),e._isBeingDestroyed=!0;var t=e.$parent;!t||t._isBeingDestroyed||e.$options.abstract||v(t.$children,e),e._watcher&&e._watcher.teardown();for(var n=e._watchers.length;n--;)e._watchers[n].teardown();e._data.__ob__&&e._data.__ob__.vmCount--,e._isDestroyed=!0,e.__patch__(e._vnode,null),tn(e,"destroyed"),e.$off(),e.$el&&(e.$el.__vue__=null),e.$vnode&&(e.$vnode.parent=null)}}}(Sn),function(e){Lt(e.prototype),e.prototype.$nextTick=function(e){return rt(e,this)},e.prototype._render=function(){var e,t=this,n=t.$options,r=n.render,o=n._parentVnode;o&&(t.$scopedSlots=gt(o.data.scopedSlots,t.$slots,t.$scopedSlots)),t.$vnode=o;try{Ft=t,e=r.call(t._renderProxy,t.$createElement)}catch(n){Fe(n,t,"render"),e=t._vnode}finally{Ft=null}return Array.isArray(e)&&1===e.length&&(e=e[0]),e instanceof ye||(e=ge()),e.parent=o,e}}(Sn);var Cn=[String,RegExp,Array],An={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:Cn,exclude:Cn,max:[String,Number]},methods:{cacheVNode:function(){var e=this.cache,t=this.keys,n=this.vnodeToCache,r=this.keyToCache;if(n){var o=n.tag,i=n.componentInstance,a=n.componentOptions;e[r]={name:Tn(a),tag:o,componentInstance:i},t.push(r),this.max&&t.length>parseInt(this.max)&&In(e,t[0],t,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var e in this.cache)In(this.cache,e,this.keys)},mounted:function(){var e=this;this.cacheVNode(),this.$watch("include",(function(t){On(e,(function(e){return Pn(t,e)}))})),this.$watch("exclude",(function(t){On(e,(function(e){return!Pn(t,e)}))}))},updated:function(){this.cacheVNode()},render:function(){var e=this.$slots.default,t=Gt(e),n=t&&t.componentOptions;if(n){var r=Tn(n),o=this.include,i=this.exclude;if(o&&(!r||!Pn(o,r))||i&&r&&Pn(i,r))return t;var a=this.cache,s=this.keys,u=null==t.key?n.Ctor.cid+(n.tag?"::"+n.tag:""):t.key;a[u]?(t.componentInstance=a[u].componentInstance,v(s,u),s.push(u)):(this.vnodeToCache=t,this.keyToCache=u),t.data.keepAlive=!0}return t||e&&e[0]}}};!function(e){var t={get:function(){return N}};Object.defineProperty(e,"config",t),e.util={warn:le,extend:I,mergeOptions:Re,defineReactive:Te},e.set=Pe,e.delete=Oe,e.nextTick=rt,e.observable=function(e){return _e(e),e},e.options=Object.create(null),z.forEach((function(t){e.options[t+"s"]=Object.create(null)})),e.options._base=e,I(e.options.components,An),function(e){e.use=function(e){var t=this._installedPlugins||(this._installedPlugins=[]);if(t.indexOf(e)>-1)return this;var n=O(arguments,1);return n.unshift(this),"function"==typeof e.install?e.install.apply(e,n):"function"==typeof e&&e.apply(null,n),t.push(e),this}}(e),function(e){e.mixin=function(e){return this.options=Re(this.options,e),this}}(e),_n(e),function(e){z.forEach((function(t){e[t]=function(e,n){return n?("component"===t&&d(n)&&(n.name=n.name||e,n=this.options._base.extend(n)),"directive"===t&&"function"==typeof n&&(n={bind:n,update:n}),this.options[t+"s"][e]=n,n):this.options[t+"s"][e]}}))}(e)}(Sn),Object.defineProperty(Sn.prototype,"$isServer",{get:oe}),Object.defineProperty(Sn.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(Sn,"FunctionalRenderContext",{value:Qt}),Sn.version="2.6.14";var En=g("style,class"),Ln=g("input,textarea,option,select,progress"),Qn=g("contenteditable,draggable,spellcheck"),$n=g("events,caret,typing,plaintext-only"),Rn=g("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),zn="http://www.w3.org/1999/xlink",Mn=function(e){return":"===e.charAt(5)&&"xlink"===e.slice(0,5)},Nn=function(e){return Mn(e)?e.slice(6,e.length):""},Dn=function(e){return null==e||!1===e};function Hn(e){for(var t=e.data,n=e,r=e;a(r.componentInstance);)(r=r.componentInstance._vnode)&&r.data&&(t=Bn(r.data,t));for(;a(n=n.parent);)n&&n.data&&(t=Bn(t,n.data));return function(e,t){if(a(e)||a(t))return Fn(e,Un(t));return""}(t.staticClass,t.class)}function Bn(e,t){return{staticClass:Fn(e.staticClass,t.staticClass),class:a(e.class)?[e.class,t.class]:t.class}}function Fn(e,t){return e?t?e+" "+t:e:t||""}function Un(e){return Array.isArray(e)?function(e){for(var t,n="",r=0,o=e.length;r<o;r++)a(t=Un(e[r]))&&""!==t&&(n&&(n+=" "),n+=t);return n}(e):l(e)?function(e){var t="";for(var n in e)e[n]&&(t&&(t+=" "),t+=n);return t}(e):"string"==typeof e?e:""}var Gn={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},Wn=g("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),Vn=g("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),Yn=function(e){return Wn(e)||Vn(e)};var Jn=Object.create(null);var Kn=g("text,number,password,search,email,tel,url");var Zn=Object.freeze({createElement:function(e,t){var n=document.createElement(e);return"select"!==e||t.data&&t.data.attrs&&void 0!==t.data.attrs.multiple&&n.setAttribute("multiple","multiple"),n},createElementNS:function(e,t){return document.createElementNS(Gn[e],t)},createTextNode:function(e){return document.createTextNode(e)},createComment:function(e){return document.createComment(e)},insertBefore:function(e,t,n){e.insertBefore(t,n)},removeChild:function(e,t){e.removeChild(t)},appendChild:function(e,t){e.appendChild(t)},parentNode:function(e){return e.parentNode},nextSibling:function(e){return e.nextSibling},tagName:function(e){return e.tagName},setTextContent:function(e,t){e.textContent=t},setStyleScope:function(e,t){e.setAttribute(t,"")}}),Xn={create:function(e,t){er(t)},update:function(e,t){e.data.ref!==t.data.ref&&(er(e,!0),er(t))},destroy:function(e){er(e,!0)}};function er(e,t){var n=e.data.ref;if(a(n)){var r=e.context,o=e.componentInstance||e.elm,i=r.$refs;t?Array.isArray(i[n])?v(i[n],o):i[n]===o&&(i[n]=void 0):e.data.refInFor?Array.isArray(i[n])?i[n].indexOf(o)<0&&i[n].push(o):i[n]=[o]:i[n]=o}}var tr=new ye("",{},[]),nr=["create","activate","update","remove","destroy"];function rr(e,t){return e.key===t.key&&e.asyncFactory===t.asyncFactory&&(e.tag===t.tag&&e.isComment===t.isComment&&a(e.data)===a(t.data)&&function(e,t){if("input"!==e.tag)return!0;var n,r=a(n=e.data)&&a(n=n.attrs)&&n.type,o=a(n=t.data)&&a(n=n.attrs)&&n.type;return r===o||Kn(r)&&Kn(o)}(e,t)||s(e.isAsyncPlaceholder)&&i(t.asyncFactory.error))}function or(e,t,n){var r,o,i={};for(r=t;r<=n;++r)a(o=e[r].key)&&(i[o]=r);return i}var ir={create:ar,update:ar,destroy:function(e){ar(e,tr)}};function ar(e,t){(e.data.directives||t.data.directives)&&function(e,t){var n,r,o,i=e===tr,a=t===tr,s=ur(e.data.directives,e.context),u=ur(t.data.directives,t.context),l=[],c=[];for(n in u)r=s[n],o=u[n],r?(o.oldValue=r.value,o.oldArg=r.arg,cr(o,"update",t,e),o.def&&o.def.componentUpdated&&c.push(o)):(cr(o,"bind",t,e),o.def&&o.def.inserted&&l.push(o));if(l.length){var d=function(){for(var n=0;n<l.length;n++)cr(l[n],"inserted",t,e)};i?lt(t,"insert",d):d()}c.length&&lt(t,"postpatch",(function(){for(var n=0;n<c.length;n++)cr(c[n],"componentUpdated",t,e)}));if(!i)for(n in s)u[n]||cr(s[n],"unbind",e,e,a)}(e,t)}var sr=Object.create(null);function ur(e,t){var n,r,o=Object.create(null);if(!e)return o;for(n=0;n<e.length;n++)(r=e[n]).modifiers||(r.modifiers=sr),o[lr(r)]=r,r.def=ze(t.$options,"directives",r.name);return o}function lr(e){return e.rawName||e.name+"."+Object.keys(e.modifiers||{}).join(".")}function cr(e,t,n,r,o){var i=e.def&&e.def[t];if(i)try{i(n.elm,e,n,r,o)}catch(r){Fe(r,n.context,"directive "+e.name+" "+t+" hook")}}var dr=[Xn,ir];function hr(e,t){var n=t.componentOptions;if(!(a(n)&&!1===n.Ctor.options.inheritAttrs||i(e.data.attrs)&&i(t.data.attrs))){var r,o,s=t.elm,u=e.data.attrs||{},l=t.data.attrs||{};for(r in a(l.__ob__)&&(l=t.data.attrs=I({},l)),l)o=l[r],u[r]!==o&&pr(s,r,o,t.data.pre);for(r in(J||Z)&&l.value!==u.value&&pr(s,"value",l.value),u)i(l[r])&&(Mn(r)?s.removeAttributeNS(zn,Nn(r)):Qn(r)||s.removeAttribute(r))}}function pr(e,t,n,r){r||e.tagName.indexOf("-")>-1?fr(e,t,n):Rn(t)?Dn(n)?e.removeAttribute(t):(n="allowfullscreen"===t&&"EMBED"===e.tagName?"true":t,e.setAttribute(t,n)):Qn(t)?e.setAttribute(t,function(e,t){return Dn(t)||"false"===t?"false":"contenteditable"===e&&$n(t)?t:"true"}(t,n)):Mn(t)?Dn(n)?e.removeAttributeNS(zn,Nn(t)):e.setAttributeNS(zn,t,n):fr(e,t,n)}function fr(e,t,n){if(Dn(n))e.removeAttribute(t);else{if(J&&!K&&"TEXTAREA"===e.tagName&&"placeholder"===t&&""!==n&&!e.__ieph){var r=function(t){t.stopImmediatePropagation(),e.removeEventListener("input",r)};e.addEventListener("input",r),e.__ieph=!0}e.setAttribute(t,n)}}var yr={create:hr,update:hr};function mr(e,t){var n=t.elm,r=t.data,o=e.data;if(!(i(r.staticClass)&&i(r.class)&&(i(o)||i(o.staticClass)&&i(o.class)))){var s=Hn(t),u=n._transitionClasses;a(u)&&(s=Fn(s,Un(u))),s!==n._prevClass&&(n.setAttribute("class",s),n._prevClass=s)}}var gr,br={create:mr,update:mr};function vr(e,t,n){var r=gr;return function o(){var i=t.apply(null,arguments);null!==i&&xr(e,o,n,r)}}var wr=Ye&&!(ee&&Number(ee[1])<=53);function kr(e,t,n,r){if(wr){var o=ln,i=t;t=i._wrapper=function(e){if(e.target===e.currentTarget||e.timeStamp>=o||e.timeStamp<=0||e.target.ownerDocument!==document)return i.apply(this,arguments)}}gr.addEventListener(e,t,ne?{capture:n,passive:r}:n)}function xr(e,t,n,r){(r||gr).removeEventListener(e,t._wrapper||t,n)}function jr(e,t){if(!i(e.data.on)||!i(t.data.on)){var n=t.data.on||{},r=e.data.on||{};gr=t.elm,function(e){if(a(e.__r)){var t=J?"change":"input";e[t]=[].concat(e.__r,e[t]||[]),delete e.__r}a(e.__c)&&(e.change=[].concat(e.__c,e.change||[]),delete e.__c)}(n),ut(n,r,kr,xr,vr,t.context),gr=void 0}}var qr,Sr={create:jr,update:jr};function _r(e,t){if(!i(e.data.domProps)||!i(t.data.domProps)){var n,r,o=t.elm,s=e.data.domProps||{},u=t.data.domProps||{};for(n in a(u.__ob__)&&(u=t.data.domProps=I({},u)),s)n in u||(o[n]="");for(n in u){if(r=u[n],"textContent"===n||"innerHTML"===n){if(t.children&&(t.children.length=0),r===s[n])continue;1===o.childNodes.length&&o.removeChild(o.childNodes[0])}if("value"===n&&"PROGRESS"!==o.tagName){o._value=r;var l=i(r)?"":String(r);Tr(o,l)&&(o.value=l)}else if("innerHTML"===n&&Vn(o.tagName)&&i(o.innerHTML)){(qr=qr||document.createElement("div")).innerHTML="<svg>"+r+"</svg>";for(var c=qr.firstChild;o.firstChild;)o.removeChild(o.firstChild);for(;c.firstChild;)o.appendChild(c.firstChild)}else if(r!==s[n])try{o[n]=r}catch(e){}}}}function Tr(e,t){return!e.composing&&("OPTION"===e.tagName||function(e,t){var n=!0;try{n=document.activeElement!==e}catch(e){}return n&&e.value!==t}(e,t)||function(e,t){var n=e.value,r=e._vModifiers;if(a(r)){if(r.number)return m(n)!==m(t);if(r.trim)return n.trim()!==t.trim()}return n!==t}(e,t))}var Pr={create:_r,update:_r},Or=x((function(e){var t={},n=/:(.+)/;return e.split(/;(?![^(]*\))/g).forEach((function(e){if(e){var r=e.split(n);r.length>1&&(t[r[0].trim()]=r[1].trim())}})),t}));function Ir(e){var t=Cr(e.style);return e.staticStyle?I(e.staticStyle,t):t}function Cr(e){return Array.isArray(e)?C(e):"string"==typeof e?Or(e):e}var Ar,Er=/^--/,Lr=/\s*!important$/,Qr=function(e,t,n){if(Er.test(t))e.style.setProperty(t,n);else if(Lr.test(n))e.style.setProperty(T(t),n.replace(Lr,""),"important");else{var r=Rr(t);if(Array.isArray(n))for(var o=0,i=n.length;o<i;o++)e.style[r]=n[o];else e.style[r]=n}},$r=["Webkit","Moz","ms"],Rr=x((function(e){if(Ar=Ar||document.createElement("div").style,"filter"!==(e=q(e))&&e in Ar)return e;for(var t=e.charAt(0).toUpperCase()+e.slice(1),n=0;n<$r.length;n++){var r=$r[n]+t;if(r in Ar)return r}}));function zr(e,t){var n=t.data,r=e.data;if(!(i(n.staticStyle)&&i(n.style)&&i(r.staticStyle)&&i(r.style))){var o,s,u=t.elm,l=r.staticStyle,c=r.normalizedStyle||r.style||{},d=l||c,h=Cr(t.data.style)||{};t.data.normalizedStyle=a(h.__ob__)?I({},h):h;var p=function(e,t){var n,r={};if(t)for(var o=e;o.componentInstance;)(o=o.componentInstance._vnode)&&o.data&&(n=Ir(o.data))&&I(r,n);(n=Ir(e.data))&&I(r,n);for(var i=e;i=i.parent;)i.data&&(n=Ir(i.data))&&I(r,n);return r}(t,!0);for(s in d)i(p[s])&&Qr(u,s,"");for(s in p)(o=p[s])!==d[s]&&Qr(u,s,null==o?"":o)}}var Mr={create:zr,update:zr},Nr=/\s+/;function Dr(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(Nr).forEach((function(t){return e.classList.add(t)})):e.classList.add(t);else{var n=" "+(e.getAttribute("class")||"")+" ";n.indexOf(" "+t+" ")<0&&e.setAttribute("class",(n+t).trim())}}function Hr(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(Nr).forEach((function(t){return e.classList.remove(t)})):e.classList.remove(t),e.classList.length||e.removeAttribute("class");else{for(var n=" "+(e.getAttribute("class")||"")+" ",r=" "+t+" ";n.indexOf(r)>=0;)n=n.replace(r," ");(n=n.trim())?e.setAttribute("class",n):e.removeAttribute("class")}}function Br(e){if(e){if("object"==typeof e){var t={};return!1!==e.css&&I(t,Fr(e.name||"v")),I(t,e),t}return"string"==typeof e?Fr(e):void 0}}var Fr=x((function(e){return{enterClass:e+"-enter",enterToClass:e+"-enter-to",enterActiveClass:e+"-enter-active",leaveClass:e+"-leave",leaveToClass:e+"-leave-to",leaveActiveClass:e+"-leave-active"}})),Ur=G&&!K,Gr="transition",Wr="transitionend",Vr="animation",Yr="animationend";Ur&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(Gr="WebkitTransition",Wr="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(Vr="WebkitAnimation",Yr="webkitAnimationEnd"));var Jr=G?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(e){return e()};function Kr(e){Jr((function(){Jr(e)}))}function Zr(e,t){var n=e._transitionClasses||(e._transitionClasses=[]);n.indexOf(t)<0&&(n.push(t),Dr(e,t))}function Xr(e,t){e._transitionClasses&&v(e._transitionClasses,t),Hr(e,t)}function eo(e,t,n){var r=no(e,t),o=r.type,i=r.timeout,a=r.propCount;if(!o)return n();var s="transition"===o?Wr:Yr,u=0,l=function(){e.removeEventListener(s,c),n()},c=function(t){t.target===e&&++u>=a&&l()};setTimeout((function(){u<a&&l()}),i+1),e.addEventListener(s,c)}var to=/\b(transform|all)(,|$)/;function no(e,t){var n,r=window.getComputedStyle(e),o=(r[Gr+"Delay"]||"").split(", "),i=(r[Gr+"Duration"]||"").split(", "),a=ro(o,i),s=(r[Vr+"Delay"]||"").split(", "),u=(r[Vr+"Duration"]||"").split(", "),l=ro(s,u),c=0,d=0;return"transition"===t?a>0&&(n="transition",c=a,d=i.length):"animation"===t?l>0&&(n="animation",c=l,d=u.length):d=(n=(c=Math.max(a,l))>0?a>l?"transition":"animation":null)?"transition"===n?i.length:u.length:0,{type:n,timeout:c,propCount:d,hasTransform:"transition"===n&&to.test(r[Gr+"Property"])}}function ro(e,t){for(;e.length<t.length;)e=e.concat(e);return Math.max.apply(null,t.map((function(t,n){return oo(t)+oo(e[n])})))}function oo(e){return 1e3*Number(e.slice(0,-1).replace(",","."))}function io(e,t){var n=e.elm;a(n._leaveCb)&&(n._leaveCb.cancelled=!0,n._leaveCb());var r=Br(e.data.transition);if(!i(r)&&!a(n._enterCb)&&1===n.nodeType){for(var o=r.css,s=r.type,u=r.enterClass,c=r.enterToClass,d=r.enterActiveClass,h=r.appearClass,p=r.appearToClass,f=r.appearActiveClass,y=r.beforeEnter,g=r.enter,b=r.afterEnter,v=r.enterCancelled,w=r.beforeAppear,k=r.appear,x=r.afterAppear,j=r.appearCancelled,q=r.duration,S=Kt,_=Kt.$vnode;_&&_.parent;)S=_.context,_=_.parent;var T=!S._isMounted||!e.isRootInsert;if(!T||k||""===k){var P=T&&h?h:u,O=T&&f?f:d,I=T&&p?p:c,C=T&&w||y,A=T&&"function"==typeof k?k:g,E=T&&x||b,L=T&&j||v,Q=m(l(q)?q.enter:q);0;var $=!1!==o&&!K,z=uo(A),M=n._enterCb=R((function(){$&&(Xr(n,I),Xr(n,O)),M.cancelled?($&&Xr(n,P),L&&L(n)):E&&E(n),n._enterCb=null}));e.data.show||lt(e,"insert",(function(){var t=n.parentNode,r=t&&t._pending&&t._pending[e.key];r&&r.tag===e.tag&&r.elm._leaveCb&&r.elm._leaveCb(),A&&A(n,M)})),C&&C(n),$&&(Zr(n,P),Zr(n,O),Kr((function(){Xr(n,P),M.cancelled||(Zr(n,I),z||(so(Q)?setTimeout(M,Q):eo(n,s,M)))}))),e.data.show&&(t&&t(),A&&A(n,M)),$||z||M()}}}function ao(e,t){var n=e.elm;a(n._enterCb)&&(n._enterCb.cancelled=!0,n._enterCb());var r=Br(e.data.transition);if(i(r)||1!==n.nodeType)return t();if(!a(n._leaveCb)){var o=r.css,s=r.type,u=r.leaveClass,c=r.leaveToClass,d=r.leaveActiveClass,h=r.beforeLeave,p=r.leave,f=r.afterLeave,y=r.leaveCancelled,g=r.delayLeave,b=r.duration,v=!1!==o&&!K,w=uo(p),k=m(l(b)?b.leave:b);0;var x=n._leaveCb=R((function(){n.parentNode&&n.parentNode._pending&&(n.parentNode._pending[e.key]=null),v&&(Xr(n,c),Xr(n,d)),x.cancelled?(v&&Xr(n,u),y&&y(n)):(t(),f&&f(n)),n._leaveCb=null}));g?g(j):j()}function j(){x.cancelled||(!e.data.show&&n.parentNode&&((n.parentNode._pending||(n.parentNode._pending={}))[e.key]=e),h&&h(n),v&&(Zr(n,u),Zr(n,d),Kr((function(){Xr(n,u),x.cancelled||(Zr(n,c),w||(so(k)?setTimeout(x,k):eo(n,s,x)))}))),p&&p(n,x),v||w||x())}}function so(e){return"number"==typeof e&&!isNaN(e)}function uo(e){if(i(e))return!1;var t=e.fns;return a(t)?uo(Array.isArray(t)?t[0]:t):(e._length||e.length)>1}function lo(e,t){!0!==t.data.show&&io(t)}var co=function(e){var t,n,r={},o=e.modules,l=e.nodeOps;for(t=0;t<nr.length;++t)for(r[nr[t]]=[],n=0;n<o.length;++n)a(o[n][nr[t]])&&r[nr[t]].push(o[n][nr[t]]);function c(e){var t=l.parentNode(e);a(t)&&l.removeChild(t,e)}function d(e,t,n,o,i,u,c){if(a(e.elm)&&a(u)&&(e=u[c]=ve(e)),e.isRootInsert=!i,!function(e,t,n,o){var i=e.data;if(a(i)){var u=a(e.componentInstance)&&i.keepAlive;if(a(i=i.hook)&&a(i=i.init)&&i(e,!1),a(e.componentInstance))return h(e,t),p(n,e.elm,o),s(u)&&function(e,t,n,o){var i,s=e;for(;s.componentInstance;)if(s=s.componentInstance._vnode,a(i=s.data)&&a(i=i.transition)){for(i=0;i<r.activate.length;++i)r.activate[i](tr,s);t.push(s);break}p(n,e.elm,o)}(e,t,n,o),!0}}(e,t,n,o)){var d=e.data,y=e.children,g=e.tag;a(g)?(e.elm=e.ns?l.createElementNS(e.ns,g):l.createElement(g,e),b(e),f(e,y,t),a(d)&&m(e,t),p(n,e.elm,o)):s(e.isComment)?(e.elm=l.createComment(e.text),p(n,e.elm,o)):(e.elm=l.createTextNode(e.text),p(n,e.elm,o))}}function h(e,t){a(e.data.pendingInsert)&&(t.push.apply(t,e.data.pendingInsert),e.data.pendingInsert=null),e.elm=e.componentInstance.$el,y(e)?(m(e,t),b(e)):(er(e),t.push(e))}function p(e,t,n){a(e)&&(a(n)?l.parentNode(n)===e&&l.insertBefore(e,t,n):l.appendChild(e,t))}function f(e,t,n){if(Array.isArray(t)){0;for(var r=0;r<t.length;++r)d(t[r],n,e.elm,null,!0,t,r)}else u(e.text)&&l.appendChild(e.elm,l.createTextNode(String(e.text)))}function y(e){for(;e.componentInstance;)e=e.componentInstance._vnode;return a(e.tag)}function m(e,n){for(var o=0;o<r.create.length;++o)r.create[o](tr,e);a(t=e.data.hook)&&(a(t.create)&&t.create(tr,e),a(t.insert)&&n.push(e))}function b(e){var t;if(a(t=e.fnScopeId))l.setStyleScope(e.elm,t);else for(var n=e;n;)a(t=n.context)&&a(t=t.$options._scopeId)&&l.setStyleScope(e.elm,t),n=n.parent;a(t=Kt)&&t!==e.context&&t!==e.fnContext&&a(t=t.$options._scopeId)&&l.setStyleScope(e.elm,t)}function v(e,t,n,r,o,i){for(;r<=o;++r)d(n[r],i,e,t,!1,n,r)}function w(e){var t,n,o=e.data;if(a(o))for(a(t=o.hook)&&a(t=t.destroy)&&t(e),t=0;t<r.destroy.length;++t)r.destroy[t](e);if(a(t=e.children))for(n=0;n<e.children.length;++n)w(e.children[n])}function k(e,t,n){for(;t<=n;++t){var r=e[t];a(r)&&(a(r.tag)?(x(r),w(r)):c(r.elm))}}function x(e,t){if(a(t)||a(e.data)){var n,o=r.remove.length+1;for(a(t)?t.listeners+=o:t=function(e,t){function n(){0==--n.listeners&&c(e)}return n.listeners=t,n}(e.elm,o),a(n=e.componentInstance)&&a(n=n._vnode)&&a(n.data)&&x(n,t),n=0;n<r.remove.length;++n)r.remove[n](e,t);a(n=e.data.hook)&&a(n=n.remove)?n(e,t):t()}else c(e.elm)}function j(e,t,n,r){for(var o=n;o<r;o++){var i=t[o];if(a(i)&&rr(e,i))return o}}function q(e,t,n,o,u,c){if(e!==t){a(t.elm)&&a(o)&&(t=o[u]=ve(t));var h=t.elm=e.elm;if(s(e.isAsyncPlaceholder))a(t.asyncFactory.resolved)?T(e.elm,t,n):t.isAsyncPlaceholder=!0;else if(s(t.isStatic)&&s(e.isStatic)&&t.key===e.key&&(s(t.isCloned)||s(t.isOnce)))t.componentInstance=e.componentInstance;else{var p,f=t.data;a(f)&&a(p=f.hook)&&a(p=p.prepatch)&&p(e,t);var m=e.children,g=t.children;if(a(f)&&y(t)){for(p=0;p<r.update.length;++p)r.update[p](e,t);a(p=f.hook)&&a(p=p.update)&&p(e,t)}i(t.text)?a(m)&&a(g)?m!==g&&function(e,t,n,r,o){var s,u,c,h=0,p=0,f=t.length-1,y=t[0],m=t[f],g=n.length-1,b=n[0],w=n[g],x=!o;for(0;h<=f&&p<=g;)i(y)?y=t[++h]:i(m)?m=t[--f]:rr(y,b)?(q(y,b,r,n,p),y=t[++h],b=n[++p]):rr(m,w)?(q(m,w,r,n,g),m=t[--f],w=n[--g]):rr(y,w)?(q(y,w,r,n,g),x&&l.insertBefore(e,y.elm,l.nextSibling(m.elm)),y=t[++h],w=n[--g]):rr(m,b)?(q(m,b,r,n,p),x&&l.insertBefore(e,m.elm,y.elm),m=t[--f],b=n[++p]):(i(s)&&(s=or(t,h,f)),i(u=a(b.key)?s[b.key]:j(b,t,h,f))?d(b,r,e,y.elm,!1,n,p):rr(c=t[u],b)?(q(c,b,r,n,p),t[u]=void 0,x&&l.insertBefore(e,c.elm,y.elm)):d(b,r,e,y.elm,!1,n,p),b=n[++p]);h>f?v(e,i(n[g+1])?null:n[g+1].elm,n,p,g,r):p>g&&k(t,h,f)}(h,m,g,n,c):a(g)?(a(e.text)&&l.setTextContent(h,""),v(h,null,g,0,g.length-1,n)):a(m)?k(m,0,m.length-1):a(e.text)&&l.setTextContent(h,""):e.text!==t.text&&l.setTextContent(h,t.text),a(f)&&a(p=f.hook)&&a(p=p.postpatch)&&p(e,t)}}}function S(e,t,n){if(s(n)&&a(e.parent))e.parent.data.pendingInsert=t;else for(var r=0;r<t.length;++r)t[r].data.hook.insert(t[r])}var _=g("attrs,class,staticClass,staticStyle,key");function T(e,t,n,r){var o,i=t.tag,u=t.data,l=t.children;if(r=r||u&&u.pre,t.elm=e,s(t.isComment)&&a(t.asyncFactory))return t.isAsyncPlaceholder=!0,!0;if(a(u)&&(a(o=u.hook)&&a(o=o.init)&&o(t,!0),a(o=t.componentInstance)))return h(t,n),!0;if(a(i)){if(a(l))if(e.hasChildNodes())if(a(o=u)&&a(o=o.domProps)&&a(o=o.innerHTML)){if(o!==e.innerHTML)return!1}else{for(var c=!0,d=e.firstChild,p=0;p<l.length;p++){if(!d||!T(d,l[p],n,r)){c=!1;break}d=d.nextSibling}if(!c||d)return!1}else f(t,l,n);if(a(u)){var y=!1;for(var g in u)if(!_(g)){y=!0,m(t,n);break}!y&&u.class&&it(u.class)}}else e.data!==t.text&&(e.data=t.text);return!0}return function(e,t,n,o){if(!i(t)){var u,c=!1,h=[];if(i(e))c=!0,d(t,h);else{var p=a(e.nodeType);if(!p&&rr(e,t))q(e,t,h,null,null,o);else{if(p){if(1===e.nodeType&&e.hasAttribute("data-server-rendered")&&(e.removeAttribute("data-server-rendered"),n=!0),s(n)&&T(e,t,h))return S(t,h,!0),e;u=e,e=new ye(l.tagName(u).toLowerCase(),{},[],void 0,u)}var f=e.elm,m=l.parentNode(f);if(d(t,h,f._leaveCb?null:m,l.nextSibling(f)),a(t.parent))for(var g=t.parent,b=y(t);g;){for(var v=0;v<r.destroy.length;++v)r.destroy[v](g);if(g.elm=t.elm,b){for(var x=0;x<r.create.length;++x)r.create[x](tr,g);var j=g.data.hook.insert;if(j.merged)for(var _=1;_<j.fns.length;_++)j.fns[_]()}else er(g);g=g.parent}a(m)?k([e],0,0):a(e.tag)&&w(e)}}return S(t,h,c),t.elm}a(e)&&w(e)}}({nodeOps:Zn,modules:[yr,br,Sr,Pr,Mr,G?{create:lo,activate:lo,remove:function(e,t){!0!==e.data.show?ao(e,t):t()}}:{}].concat(dr)});K&&document.addEventListener("selectionchange",(function(){var e=document.activeElement;e&&e.vmodel&&vo(e,"input")}));var ho={inserted:function(e,t,n,r){"select"===n.tag?(r.elm&&!r.elm._vOptions?lt(n,"postpatch",(function(){ho.componentUpdated(e,t,n)})):po(e,t,n.context),e._vOptions=[].map.call(e.options,mo)):("textarea"===n.tag||Kn(e.type))&&(e._vModifiers=t.modifiers,t.modifiers.lazy||(e.addEventListener("compositionstart",go),e.addEventListener("compositionend",bo),e.addEventListener("change",bo),K&&(e.vmodel=!0)))},componentUpdated:function(e,t,n){if("select"===n.tag){po(e,t,n.context);var r=e._vOptions,o=e._vOptions=[].map.call(e.options,mo);if(o.some((function(e,t){return!Q(e,r[t])})))(e.multiple?t.value.some((function(e){return yo(e,o)})):t.value!==t.oldValue&&yo(t.value,o))&&vo(e,"change")}}};function po(e,t,n){fo(e,t,n),(J||Z)&&setTimeout((function(){fo(e,t,n)}),0)}function fo(e,t,n){var r=t.value,o=e.multiple;if(!o||Array.isArray(r)){for(var i,a,s=0,u=e.options.length;s<u;s++)if(a=e.options[s],o)i=$(r,mo(a))>-1,a.selected!==i&&(a.selected=i);else if(Q(mo(a),r))return void(e.selectedIndex!==s&&(e.selectedIndex=s));o||(e.selectedIndex=-1)}}function yo(e,t){return t.every((function(t){return!Q(t,e)}))}function mo(e){return"_value"in e?e._value:e.value}function go(e){e.target.composing=!0}function bo(e){e.target.composing&&(e.target.composing=!1,vo(e.target,"input"))}function vo(e,t){var n=document.createEvent("HTMLEvents");n.initEvent(t,!0,!0),e.dispatchEvent(n)}function wo(e){return!e.componentInstance||e.data&&e.data.transition?e:wo(e.componentInstance._vnode)}var ko={model:ho,show:{bind:function(e,t,n){var r=t.value,o=(n=wo(n)).data&&n.data.transition,i=e.__vOriginalDisplay="none"===e.style.display?"":e.style.display;r&&o?(n.data.show=!0,io(n,(function(){e.style.display=i}))):e.style.display=r?i:"none"},update:function(e,t,n){var r=t.value;!r!=!t.oldValue&&((n=wo(n)).data&&n.data.transition?(n.data.show=!0,r?io(n,(function(){e.style.display=e.__vOriginalDisplay})):ao(n,(function(){e.style.display="none"}))):e.style.display=r?e.__vOriginalDisplay:"none")},unbind:function(e,t,n,r,o){o||(e.style.display=e.__vOriginalDisplay)}}},xo={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function jo(e){var t=e&&e.componentOptions;return t&&t.Ctor.options.abstract?jo(Gt(t.children)):e}function qo(e){var t={},n=e.$options;for(var r in n.propsData)t[r]=e[r];var o=n._parentListeners;for(var i in o)t[q(i)]=o[i];return t}function So(e,t){if(/\d-keep-alive$/.test(t.tag))return e("keep-alive",{props:t.componentOptions.propsData})}var _o=function(e){return e.tag||mt(e)},To=function(e){return"show"===e.name},Po={name:"transition",props:xo,abstract:!0,render:function(e){var t=this,n=this.$slots.default;if(n&&(n=n.filter(_o)).length){0;var r=this.mode;0;var o=n[0];if(function(e){for(;e=e.parent;)if(e.data.transition)return!0}(this.$vnode))return o;var i=jo(o);if(!i)return o;if(this._leaving)return So(e,o);var a="__transition-"+this._uid+"-";i.key=null==i.key?i.isComment?a+"comment":a+i.tag:u(i.key)?0===String(i.key).indexOf(a)?i.key:a+i.key:i.key;var s=(i.data||(i.data={})).transition=qo(this),l=this._vnode,c=jo(l);if(i.data.directives&&i.data.directives.some(To)&&(i.data.show=!0),c&&c.data&&!function(e,t){return t.key===e.key&&t.tag===e.tag}(i,c)&&!mt(c)&&(!c.componentInstance||!c.componentInstance._vnode.isComment)){var d=c.data.transition=I({},s);if("out-in"===r)return this._leaving=!0,lt(d,"afterLeave",(function(){t._leaving=!1,t.$forceUpdate()})),So(e,o);if("in-out"===r){if(mt(i))return l;var h,p=function(){h()};lt(s,"afterEnter",p),lt(s,"enterCancelled",p),lt(d,"delayLeave",(function(e){h=e}))}}return o}}},Oo=I({tag:String,moveClass:String},xo);function Io(e){e.elm._moveCb&&e.elm._moveCb(),e.elm._enterCb&&e.elm._enterCb()}function Co(e){e.data.newPos=e.elm.getBoundingClientRect()}function Ao(e){var t=e.data.pos,n=e.data.newPos,r=t.left-n.left,o=t.top-n.top;if(r||o){e.data.moved=!0;var i=e.elm.style;i.transform=i.WebkitTransform="translate("+r+"px,"+o+"px)",i.transitionDuration="0s"}}delete Oo.mode;var Eo={Transition:Po,TransitionGroup:{props:Oo,beforeMount:function(){var e=this,t=this._update;this._update=function(n,r){var o=Zt(e);e.__patch__(e._vnode,e.kept,!1,!0),e._vnode=e.kept,o(),t.call(e,n,r)}},render:function(e){for(var t=this.tag||this.$vnode.data.tag||"span",n=Object.create(null),r=this.prevChildren=this.children,o=this.$slots.default||[],i=this.children=[],a=qo(this),s=0;s<o.length;s++){var u=o[s];if(u.tag)if(null!=u.key&&0!==String(u.key).indexOf("__vlist"))i.push(u),n[u.key]=u,(u.data||(u.data={})).transition=a;else;}if(r){for(var l=[],c=[],d=0;d<r.length;d++){var h=r[d];h.data.transition=a,h.data.pos=h.elm.getBoundingClientRect(),n[h.key]?l.push(h):c.push(h)}this.kept=e(t,null,l),this.removed=c}return e(t,null,i)},updated:function(){var e=this.prevChildren,t=this.moveClass||(this.name||"v")+"-move";e.length&&this.hasMove(e[0].elm,t)&&(e.forEach(Io),e.forEach(Co),e.forEach(Ao),this._reflow=document.body.offsetHeight,e.forEach((function(e){if(e.data.moved){var n=e.elm,r=n.style;Zr(n,t),r.transform=r.WebkitTransform=r.transitionDuration="",n.addEventListener(Wr,n._moveCb=function e(r){r&&r.target!==n||r&&!/transform$/.test(r.propertyName)||(n.removeEventListener(Wr,e),n._moveCb=null,Xr(n,t))})}})))},methods:{hasMove:function(e,t){if(!Ur)return!1;if(this._hasMove)return this._hasMove;var n=e.cloneNode();e._transitionClasses&&e._transitionClasses.forEach((function(e){Hr(n,e)})),Dr(n,t),n.style.display="none",this.$el.appendChild(n);var r=no(n);return this.$el.removeChild(n),this._hasMove=r.hasTransform}}}};Sn.config.mustUseProp=function(e,t,n){return"value"===n&&Ln(e)&&"button"!==t||"selected"===n&&"option"===e||"checked"===n&&"input"===e||"muted"===n&&"video"===e},Sn.config.isReservedTag=Yn,Sn.config.isReservedAttr=En,Sn.config.getTagNamespace=function(e){return Vn(e)?"svg":"math"===e?"math":void 0},Sn.config.isUnknownElement=function(e){if(!G)return!0;if(Yn(e))return!1;if(e=e.toLowerCase(),null!=Jn[e])return Jn[e];var t=document.createElement(e);return e.indexOf("-")>-1?Jn[e]=t.constructor===window.HTMLUnknownElement||t.constructor===window.HTMLElement:Jn[e]=/HTMLUnknownElement/.test(t.toString())},I(Sn.options.directives,ko),I(Sn.options.components,Eo),Sn.prototype.__patch__=G?co:A,Sn.prototype.$mount=function(e,t){return function(e,t,n){var r;return e.$el=t,e.$options.render||(e.$options.render=ge),tn(e,"beforeMount"),r=function(){e._update(e._render(),n)},new fn(e,r,A,{before:function(){e._isMounted&&!e._isDestroyed&&tn(e,"beforeUpdate")}},!0),n=!1,null==e.$vnode&&(e._isMounted=!0,tn(e,"mounted")),e}(this,e=e&&G?function(e){if("string"==typeof e){var t=document.querySelector(e);return t||document.createElement("div")}return e}(e):void 0,t)},G&&setTimeout((function(){N.devtools&&ie&&ie.emit("init",Sn)}),0);var Lo=Sn;
/*!
  * vue-router v3.5.1
  * (c) 2021 Evan You
  * @license MIT
  */function Qo(e,t){for(var n in t)e[n]=t[n];return e}var $o=/[!'()*]/g,Ro=function(e){return"%"+e.charCodeAt(0).toString(16)},zo=/%2C/g,Mo=function(e){return encodeURIComponent(e).replace($o,Ro).replace(zo,",")};function No(e){try{return decodeURIComponent(e)}catch(e){0}return e}var Do=function(e){return null==e||"object"==typeof e?e:String(e)};function Ho(e){var t={};return(e=e.trim().replace(/^(\?|#|&)/,""))?(e.split("&").forEach((function(e){var n=e.replace(/\+/g," ").split("="),r=No(n.shift()),o=n.length>0?No(n.join("=")):null;void 0===t[r]?t[r]=o:Array.isArray(t[r])?t[r].push(o):t[r]=[t[r],o]})),t):t}function Bo(e){var t=e?Object.keys(e).map((function(t){var n=e[t];if(void 0===n)return"";if(null===n)return Mo(t);if(Array.isArray(n)){var r=[];return n.forEach((function(e){void 0!==e&&(null===e?r.push(Mo(t)):r.push(Mo(t)+"="+Mo(e)))})),r.join("&")}return Mo(t)+"="+Mo(n)})).filter((function(e){return e.length>0})).join("&"):null;return t?"?"+t:""}var Fo=/\/?$/;function Uo(e,t,n,r){var o=r&&r.options.stringifyQuery,i=t.query||{};try{i=Go(i)}catch(e){}var a={name:t.name||e&&e.name,meta:e&&e.meta||{},path:t.path||"/",hash:t.hash||"",query:i,params:t.params||{},fullPath:Yo(t,o),matched:e?Vo(e):[]};return n&&(a.redirectedFrom=Yo(n,o)),Object.freeze(a)}function Go(e){if(Array.isArray(e))return e.map(Go);if(e&&"object"==typeof e){var t={};for(var n in e)t[n]=Go(e[n]);return t}return e}var Wo=Uo(null,{path:"/"});function Vo(e){for(var t=[];e;)t.unshift(e),e=e.parent;return t}function Yo(e,t){var n=e.path,r=e.query;void 0===r&&(r={});var o=e.hash;return void 0===o&&(o=""),(n||"/")+(t||Bo)(r)+o}function Jo(e,t,n){return t===Wo?e===t:!!t&&(e.path&&t.path?e.path.replace(Fo,"")===t.path.replace(Fo,"")&&(n||e.hash===t.hash&&Ko(e.query,t.query)):!(!e.name||!t.name)&&(e.name===t.name&&(n||e.hash===t.hash&&Ko(e.query,t.query)&&Ko(e.params,t.params))))}function Ko(e,t){if(void 0===e&&(e={}),void 0===t&&(t={}),!e||!t)return e===t;var n=Object.keys(e).sort(),r=Object.keys(t).sort();return n.length===r.length&&n.every((function(n,o){var i=e[n];if(r[o]!==n)return!1;var a=t[n];return null==i||null==a?i===a:"object"==typeof i&&"object"==typeof a?Ko(i,a):String(i)===String(a)}))}function Zo(e){for(var t=0;t<e.matched.length;t++){var n=e.matched[t];for(var r in n.instances){var o=n.instances[r],i=n.enteredCbs[r];if(o&&i){delete n.enteredCbs[r];for(var a=0;a<i.length;a++)o._isBeingDestroyed||i[a](o)}}}}var Xo={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(e,t){var n=t.props,r=t.children,o=t.parent,i=t.data;i.routerView=!0;for(var a=o.$createElement,s=n.name,u=o.$route,l=o._routerViewCache||(o._routerViewCache={}),c=0,d=!1;o&&o._routerRoot!==o;){var h=o.$vnode?o.$vnode.data:{};h.routerView&&c++,h.keepAlive&&o._directInactive&&o._inactive&&(d=!0),o=o.$parent}if(i.routerViewDepth=c,d){var p=l[s],f=p&&p.component;return f?(p.configProps&&ei(f,i,p.route,p.configProps),a(f,i,r)):a()}var y=u.matched[c],m=y&&y.components[s];if(!y||!m)return l[s]=null,a();l[s]={component:m},i.registerRouteInstance=function(e,t){var n=y.instances[s];(t&&n!==e||!t&&n===e)&&(y.instances[s]=t)},(i.hook||(i.hook={})).prepatch=function(e,t){y.instances[s]=t.componentInstance},i.hook.init=function(e){e.data.keepAlive&&e.componentInstance&&e.componentInstance!==y.instances[s]&&(y.instances[s]=e.componentInstance),Zo(u)};var g=y.props&&y.props[s];return g&&(Qo(l[s],{route:u,configProps:g}),ei(m,i,u,g)),a(m,i,r)}};function ei(e,t,n,r){var o=t.props=function(e,t){switch(typeof t){case"undefined":return;case"object":return t;case"function":return t(e);case"boolean":return t?e.params:void 0;default:0}}(n,r);if(o){o=t.props=Qo({},o);var i=t.attrs=t.attrs||{};for(var a in o)e.props&&a in e.props||(i[a]=o[a],delete o[a])}}function ti(e,t,n){var r=e.charAt(0);if("/"===r)return e;if("?"===r||"#"===r)return t+e;var o=t.split("/");n&&o[o.length-1]||o.pop();for(var i=e.replace(/^\//,"").split("/"),a=0;a<i.length;a++){var s=i[a];".."===s?o.pop():"."!==s&&o.push(s)}return""!==o[0]&&o.unshift(""),o.join("/")}function ni(e){return e.replace(/\/\//g,"/")}var ri=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)},oi=bi,ii=ci,ai=function(e,t){return hi(ci(e,t),t)},si=hi,ui=gi,li=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function ci(e,t){for(var n,r=[],o=0,i=0,a="",s=t&&t.delimiter||"/";null!=(n=li.exec(e));){var u=n[0],l=n[1],c=n.index;if(a+=e.slice(i,c),i=c+u.length,l)a+=l[1];else{var d=e[i],h=n[2],p=n[3],f=n[4],y=n[5],m=n[6],g=n[7];a&&(r.push(a),a="");var b=null!=h&&null!=d&&d!==h,v="+"===m||"*"===m,w="?"===m||"*"===m,k=n[2]||s,x=f||y;r.push({name:p||o++,prefix:h||"",delimiter:k,optional:w,repeat:v,partial:b,asterisk:!!g,pattern:x?fi(x):g?".*":"[^"+pi(k)+"]+?"})}}return i<e.length&&(a+=e.substr(i)),a&&r.push(a),r}function di(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function hi(e,t){for(var n=new Array(e.length),r=0;r<e.length;r++)"object"==typeof e[r]&&(n[r]=new RegExp("^(?:"+e[r].pattern+")$",mi(t)));return function(t,r){for(var o="",i=t||{},a=(r||{}).pretty?di:encodeURIComponent,s=0;s<e.length;s++){var u=e[s];if("string"!=typeof u){var l,c=i[u.name];if(null==c){if(u.optional){u.partial&&(o+=u.prefix);continue}throw new TypeError('Expected "'+u.name+'" to be defined')}if(ri(c)){if(!u.repeat)throw new TypeError('Expected "'+u.name+'" to not repeat, but received `'+JSON.stringify(c)+"`");if(0===c.length){if(u.optional)continue;throw new TypeError('Expected "'+u.name+'" to not be empty')}for(var d=0;d<c.length;d++){if(l=a(c[d]),!n[s].test(l))throw new TypeError('Expected all "'+u.name+'" to match "'+u.pattern+'", but received `'+JSON.stringify(l)+"`");o+=(0===d?u.prefix:u.delimiter)+l}}else{if(l=u.asterisk?encodeURI(c).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):a(c),!n[s].test(l))throw new TypeError('Expected "'+u.name+'" to match "'+u.pattern+'", but received "'+l+'"');o+=u.prefix+l}}else o+=u}return o}}function pi(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function fi(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function yi(e,t){return e.keys=t,e}function mi(e){return e&&e.sensitive?"":"i"}function gi(e,t,n){ri(t)||(n=t||n,t=[]);for(var r=(n=n||{}).strict,o=!1!==n.end,i="",a=0;a<e.length;a++){var s=e[a];if("string"==typeof s)i+=pi(s);else{var u=pi(s.prefix),l="(?:"+s.pattern+")";t.push(s),s.repeat&&(l+="(?:"+u+l+")*"),i+=l=s.optional?s.partial?u+"("+l+")?":"(?:"+u+"("+l+"))?":u+"("+l+")"}}var c=pi(n.delimiter||"/"),d=i.slice(-c.length)===c;return r||(i=(d?i.slice(0,-c.length):i)+"(?:"+c+"(?=$))?"),i+=o?"$":r&&d?"":"(?="+c+"|$)",yi(new RegExp("^"+i,mi(n)),t)}function bi(e,t,n){return ri(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return yi(e,t)}(e,t):ri(e)?function(e,t,n){for(var r=[],o=0;o<e.length;o++)r.push(bi(e[o],t,n).source);return yi(new RegExp("(?:"+r.join("|")+")",mi(n)),t)}(e,t,n):function(e,t,n){return gi(ci(e,n),t,n)}(e,t,n)}oi.parse=ii,oi.compile=ai,oi.tokensToFunction=si,oi.tokensToRegExp=ui;var vi=Object.create(null);function wi(e,t,n){t=t||{};try{var r=vi[e]||(vi[e]=oi.compile(e));return"string"==typeof t.pathMatch&&(t[0]=t.pathMatch),r(t,{pretty:!0})}catch(e){return""}finally{delete t[0]}}function ki(e,t,n,r){var o="string"==typeof e?{path:e}:e;if(o._normalized)return o;if(o.name){var i=(o=Qo({},e)).params;return i&&"object"==typeof i&&(o.params=Qo({},i)),o}if(!o.path&&o.params&&t){(o=Qo({},o))._normalized=!0;var a=Qo(Qo({},t.params),o.params);if(t.name)o.name=t.name,o.params=a;else if(t.matched.length){var s=t.matched[t.matched.length-1].path;o.path=wi(s,a,t.path)}else 0;return o}var u=function(e){var t="",n="",r=e.indexOf("#");r>=0&&(t=e.slice(r),e=e.slice(0,r));var o=e.indexOf("?");return o>=0&&(n=e.slice(o+1),e=e.slice(0,o)),{path:e,query:n,hash:t}}(o.path||""),l=t&&t.path||"/",c=u.path?ti(u.path,l,n||o.append):l,d=function(e,t,n){void 0===t&&(t={});var r,o=n||Ho;try{r=o(e||"")}catch(e){r={}}for(var i in t){var a=t[i];r[i]=Array.isArray(a)?a.map(Do):Do(a)}return r}(u.query,o.query,r&&r.options.parseQuery),h=o.hash||u.hash;return h&&"#"!==h.charAt(0)&&(h="#"+h),{_normalized:!0,path:c,query:d,hash:h}}var xi,ji=function(){},qi={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(e){var t=this,n=this.$router,r=this.$route,o=n.resolve(this.to,r,this.append),i=o.location,a=o.route,s=o.href,u={},l=n.options.linkActiveClass,c=n.options.linkExactActiveClass,d=null==l?"router-link-active":l,h=null==c?"router-link-exact-active":c,p=null==this.activeClass?d:this.activeClass,f=null==this.exactActiveClass?h:this.exactActiveClass,y=a.redirectedFrom?Uo(null,ki(a.redirectedFrom),null,n):a;u[f]=Jo(r,y,this.exactPath),u[p]=this.exact||this.exactPath?u[f]:function(e,t){return 0===e.path.replace(Fo,"/").indexOf(t.path.replace(Fo,"/"))&&(!t.hash||e.hash===t.hash)&&function(e,t){for(var n in t)if(!(n in e))return!1;return!0}(e.query,t.query)}(r,y);var m=u[f]?this.ariaCurrentValue:null,g=function(e){Si(e)&&(t.replace?n.replace(i,ji):n.push(i,ji))},b={click:Si};Array.isArray(this.event)?this.event.forEach((function(e){b[e]=g})):b[this.event]=g;var v={class:u},w=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:s,route:a,navigate:g,isActive:u[p],isExactActive:u[f]});if(w){if(1===w.length)return w[0];if(w.length>1||!w.length)return 0===w.length?e():e("span",{},w)}if("a"===this.tag)v.on=b,v.attrs={href:s,"aria-current":m};else{var k=function e(t){var n;if(t)for(var r=0;r<t.length;r++){if("a"===(n=t[r]).tag)return n;if(n.children&&(n=e(n.children)))return n}}(this.$slots.default);if(k){k.isStatic=!1;var x=k.data=Qo({},k.data);for(var j in x.on=x.on||{},x.on){var q=x.on[j];j in b&&(x.on[j]=Array.isArray(q)?q:[q])}for(var S in b)S in x.on?x.on[S].push(b[S]):x.on[S]=g;var _=k.data.attrs=Qo({},k.data.attrs);_.href=s,_["aria-current"]=m}else v.on=b}return e(this.tag,v,this.$slots.default)}};function Si(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey||e.defaultPrevented||void 0!==e.button&&0!==e.button)){if(e.currentTarget&&e.currentTarget.getAttribute){var t=e.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(t))return}return e.preventDefault&&e.preventDefault(),!0}}var _i="undefined"!=typeof window;function Ti(e,t,n,r,o){var i=t||[],a=n||Object.create(null),s=r||Object.create(null);e.forEach((function(e){!function e(t,n,r,o,i,a){var s=o.path,u=o.name;0;var l=o.pathToRegexpOptions||{},c=function(e,t,n){n||(e=e.replace(/\/$/,""));if("/"===e[0])return e;if(null==t)return e;return ni(t.path+"/"+e)}(s,i,l.strict);"boolean"==typeof o.caseSensitive&&(l.sensitive=o.caseSensitive);var d={path:c,regex:Pi(c,l),components:o.components||{default:o.component},alias:o.alias?"string"==typeof o.alias?[o.alias]:o.alias:[],instances:{},enteredCbs:{},name:u,parent:i,matchAs:a,redirect:o.redirect,beforeEnter:o.beforeEnter,meta:o.meta||{},props:null==o.props?{}:o.components?o.props:{default:o.props}};o.children&&o.children.forEach((function(o){var i=a?ni(a+"/"+o.path):void 0;e(t,n,r,o,d,i)}));n[d.path]||(t.push(d.path),n[d.path]=d);if(void 0!==o.alias)for(var h=Array.isArray(o.alias)?o.alias:[o.alias],p=0;p<h.length;++p){0;var f={path:h[p],children:o.children};e(t,n,r,f,i,d.path||"/")}u&&(r[u]||(r[u]=d))}(i,a,s,e,o)}));for(var u=0,l=i.length;u<l;u++)"*"===i[u]&&(i.push(i.splice(u,1)[0]),l--,u--);return{pathList:i,pathMap:a,nameMap:s}}function Pi(e,t){return oi(e,[],t)}function Oi(e,t){var n=Ti(e),r=n.pathList,o=n.pathMap,i=n.nameMap;function a(e,n,a){var s=ki(e,n,!1,t),l=s.name;if(l){var c=i[l];if(!c)return u(null,s);var d=c.regex.keys.filter((function(e){return!e.optional})).map((function(e){return e.name}));if("object"!=typeof s.params&&(s.params={}),n&&"object"==typeof n.params)for(var h in n.params)!(h in s.params)&&d.indexOf(h)>-1&&(s.params[h]=n.params[h]);return s.path=wi(c.path,s.params),u(c,s,a)}if(s.path){s.params={};for(var p=0;p<r.length;p++){var f=r[p],y=o[f];if(Ii(y.regex,s.path,s.params))return u(y,s,a)}}return u(null,s)}function s(e,n){var r=e.redirect,o="function"==typeof r?r(Uo(e,n,null,t)):r;if("string"==typeof o&&(o={path:o}),!o||"object"!=typeof o)return u(null,n);var s=o,l=s.name,c=s.path,d=n.query,h=n.hash,p=n.params;if(d=s.hasOwnProperty("query")?s.query:d,h=s.hasOwnProperty("hash")?s.hash:h,p=s.hasOwnProperty("params")?s.params:p,l){i[l];return a({_normalized:!0,name:l,query:d,hash:h,params:p},void 0,n)}if(c){var f=function(e,t){return ti(e,t.parent?t.parent.path:"/",!0)}(c,e);return a({_normalized:!0,path:wi(f,p),query:d,hash:h},void 0,n)}return u(null,n)}function u(e,n,r){return e&&e.redirect?s(e,r||n):e&&e.matchAs?function(e,t,n){var r=a({_normalized:!0,path:wi(n,t.params)});if(r){var o=r.matched,i=o[o.length-1];return t.params=r.params,u(i,t)}return u(null,t)}(0,n,e.matchAs):Uo(e,n,r,t)}return{match:a,addRoute:function(e,t){var n="object"!=typeof e?i[e]:void 0;Ti([t||e],r,o,i,n),n&&Ti(n.alias.map((function(e){return{path:e,children:[t]}})),r,o,i,n)},getRoutes:function(){return r.map((function(e){return o[e]}))},addRoutes:function(e){Ti(e,r,o,i)}}}function Ii(e,t,n){var r=t.match(e);if(!r)return!1;if(!n)return!0;for(var o=1,i=r.length;o<i;++o){var a=e.keys[o-1];a&&(n[a.name||"pathMatch"]="string"==typeof r[o]?No(r[o]):r[o])}return!0}var Ci=_i&&window.performance&&window.performance.now?window.performance:Date;function Ai(){return Ci.now().toFixed(3)}var Ei=Ai();function Li(){return Ei}function Qi(e){return Ei=e}var $i=Object.create(null);function Ri(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var e=window.location.protocol+"//"+window.location.host,t=window.location.href.replace(e,""),n=Qo({},window.history.state);return n.key=Li(),window.history.replaceState(n,"",t),window.addEventListener("popstate",Ni),function(){window.removeEventListener("popstate",Ni)}}function zi(e,t,n,r){if(e.app){var o=e.options.scrollBehavior;o&&e.app.$nextTick((function(){var i=function(){var e=Li();if(e)return $i[e]}(),a=o.call(e,t,n,r?i:null);a&&("function"==typeof a.then?a.then((function(e){Ui(e,i)})).catch((function(e){0})):Ui(a,i))}))}}function Mi(){var e=Li();e&&($i[e]={x:window.pageXOffset,y:window.pageYOffset})}function Ni(e){Mi(),e.state&&e.state.key&&Qi(e.state.key)}function Di(e){return Bi(e.x)||Bi(e.y)}function Hi(e){return{x:Bi(e.x)?e.x:window.pageXOffset,y:Bi(e.y)?e.y:window.pageYOffset}}function Bi(e){return"number"==typeof e}var Fi=/^#\d/;function Ui(e,t){var n,r="object"==typeof e;if(r&&"string"==typeof e.selector){var o=Fi.test(e.selector)?document.getElementById(e.selector.slice(1)):document.querySelector(e.selector);if(o){var i=e.offset&&"object"==typeof e.offset?e.offset:{};t=function(e,t){var n=document.documentElement.getBoundingClientRect(),r=e.getBoundingClientRect();return{x:r.left-n.left-t.x,y:r.top-n.top-t.y}}(o,i={x:Bi((n=i).x)?n.x:0,y:Bi(n.y)?n.y:0})}else Di(e)&&(t=Hi(e))}else r&&Di(e)&&(t=Hi(e));t&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:t.x,top:t.y,behavior:e.behavior}):window.scrollTo(t.x,t.y))}var Gi,Wi=_i&&((-1===(Gi=window.navigator.userAgent).indexOf("Android 2.")&&-1===Gi.indexOf("Android 4.0")||-1===Gi.indexOf("Mobile Safari")||-1!==Gi.indexOf("Chrome")||-1!==Gi.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function Vi(e,t){Mi();var n=window.history;try{if(t){var r=Qo({},n.state);r.key=Li(),n.replaceState(r,"",e)}else n.pushState({key:Qi(Ai())},"",e)}catch(n){window.location[t?"replace":"assign"](e)}}function Yi(e){Vi(e,!0)}function Ji(e,t,n){var r=function(o){o>=e.length?n():e[o]?t(e[o],(function(){r(o+1)})):r(o+1)};r(0)}var Ki={redirected:2,aborted:4,cancelled:8,duplicated:16};function Zi(e,t){return ea(e,t,Ki.redirected,'Redirected when going from "'+e.fullPath+'" to "'+function(e){if("string"==typeof e)return e;if("path"in e)return e.path;var t={};return ta.forEach((function(n){n in e&&(t[n]=e[n])})),JSON.stringify(t,null,2)}(t)+'" via a navigation guard.')}function Xi(e,t){return ea(e,t,Ki.cancelled,'Navigation cancelled from "'+e.fullPath+'" to "'+t.fullPath+'" with a new navigation.')}function ea(e,t,n,r){var o=new Error(r);return o._isRouter=!0,o.from=e,o.to=t,o.type=n,o}var ta=["params","query","hash"];function na(e){return Object.prototype.toString.call(e).indexOf("Error")>-1}function ra(e,t){return na(e)&&e._isRouter&&(null==t||e.type===t)}function oa(e){return function(t,n,r){var o=!1,i=0,a=null;ia(e,(function(e,t,n,s){if("function"==typeof e&&void 0===e.cid){o=!0,i++;var u,l=ua((function(t){var o;((o=t).__esModule||sa&&"Module"===o[Symbol.toStringTag])&&(t=t.default),e.resolved="function"==typeof t?t:xi.extend(t),n.components[s]=t,--i<=0&&r()})),c=ua((function(e){var t="Failed to resolve async component "+s+": "+e;a||(a=na(e)?e:new Error(t),r(a))}));try{u=e(l,c)}catch(e){c(e)}if(u)if("function"==typeof u.then)u.then(l,c);else{var d=u.component;d&&"function"==typeof d.then&&d.then(l,c)}}})),o||r()}}function ia(e,t){return aa(e.map((function(e){return Object.keys(e.components).map((function(n){return t(e.components[n],e.instances[n],e,n)}))})))}function aa(e){return Array.prototype.concat.apply([],e)}var sa="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function ua(e){var t=!1;return function(){for(var n=[],r=arguments.length;r--;)n[r]=arguments[r];if(!t)return t=!0,e.apply(this,n)}}var la=function(e,t){this.router=e,this.base=function(e){if(!e)if(_i){var t=document.querySelector("base");e=(e=t&&t.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else e="/";"/"!==e.charAt(0)&&(e="/"+e);return e.replace(/\/$/,"")}(t),this.current=Wo,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function ca(e,t,n,r){var o=ia(e,(function(e,r,o,i){var a=function(e,t){"function"!=typeof e&&(e=xi.extend(e));return e.options[t]}(e,t);if(a)return Array.isArray(a)?a.map((function(e){return n(e,r,o,i)})):n(a,r,o,i)}));return aa(r?o.reverse():o)}function da(e,t){if(t)return function(){return e.apply(t,arguments)}}la.prototype.listen=function(e){this.cb=e},la.prototype.onReady=function(e,t){this.ready?e():(this.readyCbs.push(e),t&&this.readyErrorCbs.push(t))},la.prototype.onError=function(e){this.errorCbs.push(e)},la.prototype.transitionTo=function(e,t,n){var r,o=this;try{r=this.router.match(e,this.current)}catch(e){throw this.errorCbs.forEach((function(t){t(e)})),e}var i=this.current;this.confirmTransition(r,(function(){o.updateRoute(r),t&&t(r),o.ensureURL(),o.router.afterHooks.forEach((function(e){e&&e(r,i)})),o.ready||(o.ready=!0,o.readyCbs.forEach((function(e){e(r)})))}),(function(e){n&&n(e),e&&!o.ready&&(ra(e,Ki.redirected)&&i===Wo||(o.ready=!0,o.readyErrorCbs.forEach((function(t){t(e)}))))}))},la.prototype.confirmTransition=function(e,t,n){var r=this,o=this.current;this.pending=e;var i,a,s=function(e){!ra(e)&&na(e)&&(r.errorCbs.length?r.errorCbs.forEach((function(t){t(e)})):console.error(e)),n&&n(e)},u=e.matched.length-1,l=o.matched.length-1;if(Jo(e,o)&&u===l&&e.matched[u]===o.matched[l])return this.ensureURL(),s(((a=ea(i=o,e,Ki.duplicated,'Avoided redundant navigation to current location: "'+i.fullPath+'".')).name="NavigationDuplicated",a));var c=function(e,t){var n,r=Math.max(e.length,t.length);for(n=0;n<r&&e[n]===t[n];n++);return{updated:t.slice(0,n),activated:t.slice(n),deactivated:e.slice(n)}}(this.current.matched,e.matched),d=c.updated,h=c.deactivated,p=c.activated,f=[].concat(function(e){return ca(e,"beforeRouteLeave",da,!0)}(h),this.router.beforeHooks,function(e){return ca(e,"beforeRouteUpdate",da)}(d),p.map((function(e){return e.beforeEnter})),oa(p)),y=function(t,n){if(r.pending!==e)return s(Xi(o,e));try{t(e,o,(function(t){!1===t?(r.ensureURL(!0),s(function(e,t){return ea(e,t,Ki.aborted,'Navigation aborted from "'+e.fullPath+'" to "'+t.fullPath+'" via a navigation guard.')}(o,e))):na(t)?(r.ensureURL(!0),s(t)):"string"==typeof t||"object"==typeof t&&("string"==typeof t.path||"string"==typeof t.name)?(s(Zi(o,e)),"object"==typeof t&&t.replace?r.replace(t):r.push(t)):n(t)}))}catch(e){s(e)}};Ji(f,y,(function(){Ji(function(e){return ca(e,"beforeRouteEnter",(function(e,t,n,r){return function(e,t,n){return function(r,o,i){return e(r,o,(function(e){"function"==typeof e&&(t.enteredCbs[n]||(t.enteredCbs[n]=[]),t.enteredCbs[n].push(e)),i(e)}))}}(e,n,r)}))}(p).concat(r.router.resolveHooks),y,(function(){if(r.pending!==e)return s(Xi(o,e));r.pending=null,t(e),r.router.app&&r.router.app.$nextTick((function(){Zo(e)}))}))}))},la.prototype.updateRoute=function(e){this.current=e,this.cb&&this.cb(e)},la.prototype.setupListeners=function(){},la.prototype.teardown=function(){this.listeners.forEach((function(e){e()})),this.listeners=[],this.current=Wo,this.pending=null};var ha=function(e){function t(t,n){e.call(this,t,n),this._startLocation=pa(this.base)}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var t=this.router,n=t.options.scrollBehavior,r=Wi&&n;r&&this.listeners.push(Ri());var o=function(){var n=e.current,o=pa(e.base);e.current===Wo&&o===e._startLocation||e.transitionTo(o,(function(e){r&&zi(t,e,n,!0)}))};window.addEventListener("popstate",o),this.listeners.push((function(){window.removeEventListener("popstate",o)}))}},t.prototype.go=function(e){window.history.go(e)},t.prototype.push=function(e,t,n){var r=this,o=this.current;this.transitionTo(e,(function(e){Vi(ni(r.base+e.fullPath)),zi(r.router,e,o,!1),t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var r=this,o=this.current;this.transitionTo(e,(function(e){Yi(ni(r.base+e.fullPath)),zi(r.router,e,o,!1),t&&t(e)}),n)},t.prototype.ensureURL=function(e){if(pa(this.base)!==this.current.fullPath){var t=ni(this.base+this.current.fullPath);e?Vi(t):Yi(t)}},t.prototype.getCurrentLocation=function(){return pa(this.base)},t}(la);function pa(e){var t=window.location.pathname;return e&&0===t.toLowerCase().indexOf(e.toLowerCase())&&(t=t.slice(e.length)),(t||"/")+window.location.search+window.location.hash}var fa=function(e){function t(t,n,r){e.call(this,t,n),r&&function(e){var t=pa(e);if(!/^\/#/.test(t))return window.location.replace(ni(e+"/#"+t)),!0}(this.base)||ya()}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var t=this.router.options.scrollBehavior,n=Wi&&t;n&&this.listeners.push(Ri());var r=function(){var t=e.current;ya()&&e.transitionTo(ma(),(function(r){n&&zi(e.router,r,t,!0),Wi||va(r.fullPath)}))},o=Wi?"popstate":"hashchange";window.addEventListener(o,r),this.listeners.push((function(){window.removeEventListener(o,r)}))}},t.prototype.push=function(e,t,n){var r=this,o=this.current;this.transitionTo(e,(function(e){ba(e.fullPath),zi(r.router,e,o,!1),t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var r=this,o=this.current;this.transitionTo(e,(function(e){va(e.fullPath),zi(r.router,e,o,!1),t&&t(e)}),n)},t.prototype.go=function(e){window.history.go(e)},t.prototype.ensureURL=function(e){var t=this.current.fullPath;ma()!==t&&(e?ba(t):va(t))},t.prototype.getCurrentLocation=function(){return ma()},t}(la);function ya(){var e=ma();return"/"===e.charAt(0)||(va("/"+e),!1)}function ma(){var e=window.location.href,t=e.indexOf("#");return t<0?"":e=e.slice(t+1)}function ga(e){var t=window.location.href,n=t.indexOf("#");return(n>=0?t.slice(0,n):t)+"#"+e}function ba(e){Wi?Vi(ga(e)):window.location.hash=e}function va(e){Wi?Yi(ga(e)):window.location.replace(ga(e))}var wa=function(e){function t(t,n){e.call(this,t,n),this.stack=[],this.index=-1}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.push=function(e,t,n){var r=this;this.transitionTo(e,(function(e){r.stack=r.stack.slice(0,r.index+1).concat(e),r.index++,t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var r=this;this.transitionTo(e,(function(e){r.stack=r.stack.slice(0,r.index).concat(e),t&&t(e)}),n)},t.prototype.go=function(e){var t=this,n=this.index+e;if(!(n<0||n>=this.stack.length)){var r=this.stack[n];this.confirmTransition(r,(function(){var e=t.current;t.index=n,t.updateRoute(r),t.router.afterHooks.forEach((function(t){t&&t(r,e)}))}),(function(e){ra(e,Ki.duplicated)&&(t.index=n)}))}},t.prototype.getCurrentLocation=function(){var e=this.stack[this.stack.length-1];return e?e.fullPath:"/"},t.prototype.ensureURL=function(){},t}(la),ka=function(e){void 0===e&&(e={}),this.app=null,this.apps=[],this.options=e,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=Oi(e.routes||[],this);var t=e.mode||"hash";switch(this.fallback="history"===t&&!Wi&&!1!==e.fallback,this.fallback&&(t="hash"),_i||(t="abstract"),this.mode=t,t){case"history":this.history=new ha(this,e.base);break;case"hash":this.history=new fa(this,e.base,this.fallback);break;case"abstract":this.history=new wa(this,e.base);break;default:0}},xa={currentRoute:{configurable:!0}};function ja(e,t){return e.push(t),function(){var n=e.indexOf(t);n>-1&&e.splice(n,1)}}ka.prototype.match=function(e,t,n){return this.matcher.match(e,t,n)},xa.currentRoute.get=function(){return this.history&&this.history.current},ka.prototype.init=function(e){var t=this;if(this.apps.push(e),e.$once("hook:destroyed",(function(){var n=t.apps.indexOf(e);n>-1&&t.apps.splice(n,1),t.app===e&&(t.app=t.apps[0]||null),t.app||t.history.teardown()})),!this.app){this.app=e;var n=this.history;if(n instanceof ha||n instanceof fa){var r=function(e){n.setupListeners(),function(e){var r=n.current,o=t.options.scrollBehavior;Wi&&o&&"fullPath"in e&&zi(t,e,r,!1)}(e)};n.transitionTo(n.getCurrentLocation(),r,r)}n.listen((function(e){t.apps.forEach((function(t){t._route=e}))}))}},ka.prototype.beforeEach=function(e){return ja(this.beforeHooks,e)},ka.prototype.beforeResolve=function(e){return ja(this.resolveHooks,e)},ka.prototype.afterEach=function(e){return ja(this.afterHooks,e)},ka.prototype.onReady=function(e,t){this.history.onReady(e,t)},ka.prototype.onError=function(e){this.history.onError(e)},ka.prototype.push=function(e,t,n){var r=this;if(!t&&!n&&"undefined"!=typeof Promise)return new Promise((function(t,n){r.history.push(e,t,n)}));this.history.push(e,t,n)},ka.prototype.replace=function(e,t,n){var r=this;if(!t&&!n&&"undefined"!=typeof Promise)return new Promise((function(t,n){r.history.replace(e,t,n)}));this.history.replace(e,t,n)},ka.prototype.go=function(e){this.history.go(e)},ka.prototype.back=function(){this.go(-1)},ka.prototype.forward=function(){this.go(1)},ka.prototype.getMatchedComponents=function(e){var t=e?e.matched?e:this.resolve(e).route:this.currentRoute;return t?[].concat.apply([],t.matched.map((function(e){return Object.keys(e.components).map((function(t){return e.components[t]}))}))):[]},ka.prototype.resolve=function(e,t,n){var r=ki(e,t=t||this.history.current,n,this),o=this.match(r,t),i=o.redirectedFrom||o.fullPath;return{location:r,route:o,href:function(e,t,n){var r="hash"===n?"#"+t:t;return e?ni(e+"/"+r):r}(this.history.base,i,this.mode),normalizedTo:r,resolved:o}},ka.prototype.getRoutes=function(){return this.matcher.getRoutes()},ka.prototype.addRoute=function(e,t){this.matcher.addRoute(e,t),this.history.current!==Wo&&this.history.transitionTo(this.history.getCurrentLocation())},ka.prototype.addRoutes=function(e){this.matcher.addRoutes(e),this.history.current!==Wo&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(ka.prototype,xa),ka.install=function e(t){if(!e.installed||xi!==t){e.installed=!0,xi=t;var n=function(e){return void 0!==e},r=function(e,t){var r=e.$options._parentVnode;n(r)&&n(r=r.data)&&n(r=r.registerRouteInstance)&&r(e,t)};t.mixin({beforeCreate:function(){n(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),t.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,r(this,this)},destroyed:function(){r(this)}}),Object.defineProperty(t.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(t.prototype,"$route",{get:function(){return this._routerRoot._route}}),t.component("RouterView",Xo),t.component("RouterLink",qi);var o=t.config.optionMergeStrategies;o.beforeRouteEnter=o.beforeRouteLeave=o.beforeRouteUpdate=o.created}},ka.version="3.5.1",ka.isNavigationFailure=ra,ka.NavigationFailureType=Ki,ka.START_LOCATION=Wo,_i&&window.Vue&&window.Vue.use(ka);var qa=ka;n(182),n(130),n(201),n(96),n(203),n(97),n(98),n(204);function Sa(e){e.locales&&Object.keys(e.locales).forEach((function(t){e.locales[t].path=t})),Object.freeze(e)}n(34),n(40),n(59);var _a=n(42),Ta=(n(138),n(45),n(68),n(184),n(185),{NotFound:function(){return n.e(6).then(n.bind(null,378))},Layout:function(){return Promise.all([n.e(0),n.e(2)]).then(n.bind(null,377))}}),Pa={"v-47639a6e":function(){return n.e(7).then(n.bind(null,381))},"v-86b1f726":function(){return n.e(8).then(n.bind(null,382))},"v-94114ee6":function(){return n.e(9).then(n.bind(null,383))},"v-5d960c2d":function(){return n.e(10).then(n.bind(null,384))},"v-03d2d023":function(){return n.e(11).then(n.bind(null,385))},"v-1265970d":function(){return n.e(12).then(n.bind(null,386))},"v-2680104d":function(){return n.e(13).then(n.bind(null,387))},"v-ae40a866":function(){return n.e(14).then(n.bind(null,388))},"v-a45391be":function(){return n.e(15).then(n.bind(null,389))},"v-6d299e43":function(){return n.e(16).then(n.bind(null,390))},"v-034044f3":function(){return n.e(17).then(n.bind(null,391))},"v-b6710da6":function(){return n.e(18).then(n.bind(null,392))},"v-529f2d66":function(){return n.e(19).then(n.bind(null,393))},"v-5be2726d":function(){return n.e(20).then(n.bind(null,394))},"v-31c257a6":function(){return n.e(21).then(n.bind(null,395))},"v-ecedcbe6":function(){return n.e(22).then(n.bind(null,396))},"v-562bf2a5":function(){return n.e(23).then(n.bind(null,397))},"v-bc9cfe26":function(){return n.e(24).then(n.bind(null,398))},"v-867568e6":function(){return n.e(25).then(n.bind(null,399))},"v-d4874966":function(){return n.e(26).then(n.bind(null,400))},"v-09dfd14d":function(){return n.e(27).then(n.bind(null,401))},"v-07cf064d":function(){return n.e(28).then(n.bind(null,402))},"v-462cc17b":function(){return n.e(29).then(n.bind(null,403))},"v-65affcad":function(){return n.e(30).then(n.bind(null,404))},"v-05bf836b":function(){return n.e(31).then(n.bind(null,405))}};function Oa(e){var t=Object.create(null);return function(n){return t[n]||(t[n]=e(n))}}var Ia=/-(\w)/g,Ca=Oa((function(e){return e.replace(Ia,(function(e,t){return t?t.toUpperCase():""}))})),Aa=/\B([A-Z])/g,Ea=Oa((function(e){return e.replace(Aa,"-$1").toLowerCase()})),La=Oa((function(e){return e.charAt(0).toUpperCase()+e.slice(1)}));function Qa(e,t){if(t)return e(t)?e(t):t.includes("-")?e(La(Ca(t))):e(La(t))||e(Ea(t))}var $a=Object.assign({},Ta,Pa),Ra=function(e){return $a[e]},za=function(e){return Pa[e]},Ma=function(e){return Ta[e]},Na=function(e){return Lo.component(e)};function Da(e){return Qa(za,e)}function Ha(e){return Qa(Ma,e)}function Ba(e){return Qa(Ra,e)}function Fa(e){return Qa(Na,e)}function Ua(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Promise.all(t.filter((function(e){return e})).map(function(){var e=Object(r.a)(regeneratorRuntime.mark((function e(t){var n;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(Fa(t)||!Ba(t)){e.next=5;break}return e.next=3,Ba(t)();case 3:n=e.sent,Lo.component(t,n.default);case 5:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}()))}function Ga(e,t){"undefined"!=typeof window&&window.__VUEPRESS__&&(window.__VUEPRESS__[e]=t)}var Wa=n(94),Va=(n(175),n(176),n(163)),Ya=n.n(Va),Ja={created:function(){if(this.siteMeta=this.$site.headTags.filter((function(e){return"meta"===Object(Wa.a)(e,1)[0]})).map((function(e){var t=Object(Wa.a)(e,2);t[0];return t[1]})),this.$ssrContext){var e=this.getMergedMetaTags();this.$ssrContext.title=this.$title,this.$ssrContext.lang=this.$lang,this.$ssrContext.pageMeta=(t=e)?t.map((function(e){var t="<meta";return Object.keys(e).forEach((function(n){t+=" ".concat(n,'="').concat(e[n],'"')})),t+">"})).join("\n    "):"",this.$ssrContext.canonicalLink=Za(this.$canonicalUrl)}var t},mounted:function(){this.currentMetaTags=Object(_a.a)(document.querySelectorAll("meta")),this.updateMeta(),this.updateCanonicalLink()},methods:{updateMeta:function(){document.title=this.$title,document.documentElement.lang=this.$lang;var e=this.getMergedMetaTags();this.currentMetaTags=Xa(e,this.currentMetaTags)},getMergedMetaTags:function(){var e=this.$page.frontmatter.meta||[];return Ya()([{name:"description",content:this.$description}],e,this.siteMeta,es)},updateCanonicalLink:function(){Ka(),this.$canonicalUrl&&document.head.insertAdjacentHTML("beforeend",Za(this.$canonicalUrl))}},watch:{$page:function(){this.updateMeta(),this.updateCanonicalLink()}},beforeDestroy:function(){Xa(null,this.currentMetaTags),Ka()}};function Ka(){var e=document.querySelector("link[rel='canonical']");e&&e.remove()}function Za(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return e?'<link href="'.concat(e,'" rel="canonical" />'):""}function Xa(e,t){if(t&&Object(_a.a)(t).filter((function(e){return e.parentNode===document.head})).forEach((function(e){return document.head.removeChild(e)})),e)return e.map((function(e){var t=document.createElement("meta");return Object.keys(e).forEach((function(n){t.setAttribute(n,e[n])})),document.head.appendChild(t),t}))}function es(e){for(var t=0,n=["name","property","itemprop"];t<n.length;t++){var r=n[t];if(e.hasOwnProperty(r))return e[r]+r}return JSON.stringify(e)}n(95);var ts=n(164),ns={mounted:function(){window.addEventListener("scroll",this.onScroll)},methods:{onScroll:n.n(ts)()((function(){this.setActiveHash()}),300),setActiveHash:function(){for(var e=this,t=[].slice.call(document.querySelectorAll(".sidebar-link")),n=[].slice.call(document.querySelectorAll(".header-anchor")).filter((function(e){return t.some((function(t){return t.hash===e.hash}))})),r=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop),o=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),i=window.innerHeight+r,a=0;a<n.length;a++){var s=n[a],u=n[a+1],l=0===a&&0===r||r>=s.parentElement.offsetTop+10&&(!u||r<u.parentElement.offsetTop-10),c=decodeURIComponent(this.$route.hash);if(l&&c!==decodeURIComponent(s.hash)){var d=s;if(i===o)for(var h=a+1;h<n.length;h++)if(c===decodeURIComponent(n[h].hash))return;return this.$vuepress.$set("disableScrollBehavior",!0),void this.$router.replace(decodeURIComponent(d.hash),(function(){e.$nextTick((function(){e.$vuepress.$set("disableScrollBehavior",!1)}))}))}}}},beforeDestroy:function(){window.removeEventListener("scroll",this.onScroll)}},rs=(n(84),n(66)),os=n.n(rs),is=[Ja,ns,{mounted:function(){var e=this;os.a.configure({showSpinner:!1}),this.$router.beforeEach((function(e,t,n){e.path===t.path||Lo.component(e.name)||os.a.start(),n()})),this.$router.afterEach((function(){os.a.done(),e.isSidebarOpen=!1}))}}],as={name:"GlobalLayout",computed:{layout:function(){var e=this.getLayout();return Ga("layout",e),Lo.component(e)}},methods:{getLayout:function(){if(this.$page.path){var e=this.$page.frontmatter.layout;return e&&(this.$vuepress.getLayoutAsyncComponent(e)||this.$vuepress.getVueComponent(e))?e:"Layout"}return"NotFound"}}},ss=n(44),us=Object(ss.a)(as,(function(){var e=this.$createElement;return(this._self._c||e)(this.layout,{tag:"component"})}),[],!1,null,null,null).exports;!function(e,t,n){var r;switch(t){case"components":e[t]||(e[t]={}),Object.assign(e[t],n);break;case"mixins":e[t]||(e[t]=[]),(r=e[t]).push.apply(r,Object(_a.a)(n));break;default:throw new Error("Unknown option name.")}}(us,"mixins",is);var ls=[{name:"v-47639a6e",path:"/",component:us,beforeEnter:function(e,t,n){Ua("Layout","v-47639a6e").then(n)}},{path:"/index.html",redirect:"/"},{name:"v-86b1f726",path:"/create/graphql.html",component:us,beforeEnter:function(e,t,n){Ua("Layout","v-86b1f726").then(n)}},{name:"v-94114ee6",path:"/create/introduction.html",component:us,beforeEnter:function(e,t,n){Ua("Layout","v-94114ee6").then(n)}},{name:"v-5d960c2d",path:"/create/manifest.html",component:us,beforeEnter:function(e,t,n){Ua("Layout","v-5d960c2d").then(n)}},{name:"v-03d2d023",path:"/create/mapping.html",component:us,beforeEnter:function(e,t,n){Ua("Layout","v-03d2d023").then(n)}},{name:"v-1265970d",path:"/faqs/faqs.html",component:us,beforeEnter:function(e,t,n){Ua("Layout","v-1265970d").then(n)}},{name:"v-2680104d",path:"/install/install.html",component:us,beforeEnter:function(e,t,n){Ua("Layout","v-2680104d").then(n)}},{name:"v-ae40a866",path:"/miscellaneous/ambassadors.html",component:us,beforeEnter:function(e,t,n){Ua("Layout","v-ae40a866").then(n)}},{name:"v-a45391be",path:"/miscellaneous/branding.html",component:us,beforeEnter:function(e,t,n){Ua("Layout","v-a45391be").then(n)}},{name:"v-6d299e43",path:"/miscellaneous/contributing.html",component:us,beforeEnter:function(e,t,n){Ua("Layout","v-6d299e43").then(n)}},{name:"v-034044f3",path:"/miscellaneous/social_media.html",component:us,beforeEnter:function(e,t,n){Ua("Layout","v-034044f3").then(n)}},{name:"v-b6710da6",path:"/publish/connect.html",component:us,beforeEnter:function(e,t,n){Ua("Layout","v-b6710da6").then(n)}},{name:"v-529f2d66",path:"/publish/publish.html",component:us,beforeEnter:function(e,t,n){Ua("Layout","v-529f2d66").then(n)}},{name:"v-5be2726d",path:"/publish/upgrade.html",component:us,beforeEnter:function(e,t,n){Ua("Layout","v-5be2726d").then(n)}},{name:"v-31c257a6",path:"/query/graphql.html",component:us,beforeEnter:function(e,t,n){Ua("Layout","v-31c257a6").then(n)}},{name:"v-ecedcbe6",path:"/query/query.html",component:us,beforeEnter:function(e,t,n){Ua("Layout","v-ecedcbe6").then(n)}},{name:"v-562bf2a5",path:"/quickstart/helloworld-hosted.html",component:us,beforeEnter:function(e,t,n){Ua("Layout","v-562bf2a5").then(n)}},{name:"v-bc9cfe26",path:"/quickstart/helloworld-localhost.html",component:us,beforeEnter:function(e,t,n){Ua("Layout","v-bc9cfe26").then(n)}},{name:"v-867568e6",path:"/quickstart/quickstart.html",component:us,beforeEnter:function(e,t,n){Ua("Layout","v-867568e6").then(n)}},{name:"v-d4874966",path:"/quickstart/understanding-helloworld.html",component:us,beforeEnter:function(e,t,n){Ua("Layout","v-d4874966").then(n)}},{name:"v-09dfd14d",path:"/run/run.html",component:us,beforeEnter:function(e,t,n){Ua("Layout","v-09dfd14d").then(n)}},{name:"v-07cf064d",path:"/run/sandbox.html",component:us,beforeEnter:function(e,t,n){Ua("Layout","v-07cf064d").then(n)}},{name:"v-462cc17b",path:"/tutorials_examples/howto.html",component:us,beforeEnter:function(e,t,n){Ua("Layout","v-462cc17b").then(n)}},{name:"v-65affcad",path:"/tutorials_examples/introduction.html",component:us,beforeEnter:function(e,t,n){Ua("Layout","v-65affcad").then(n)}},{name:"v-05bf836b",path:"/tutorials_examples/terminology.html",component:us,beforeEnter:function(e,t,n){Ua("Layout","v-05bf836b").then(n)}},{path:"*",component:us}],cs={title:"",description:"",base:"/",headTags:[],pages:[{title:"Welcome to SubQuery",frontmatter:{},regularPath:"/",relativePath:"README.md",key:"v-47639a6e",path:"/",lastUpdated:"8/2/2021, 10:56:41 PM",headersStr:null,content:"Welcome to SubQuery’s Docs\n\nExplore and transform your chain data to build intuitive dApps faster!\n\n\nQuick Start Guide\n\nUnderstand SubQuery by getting hands on with a traditional Hello World example. Using a template project within a Docker environment, you can quickly get a node up and running and start querying a blockchain in just a few minutes with a few simple commands.\n\nGet started\n * Tutorials and Examples\n   \n   Learning by doing. Tutorials and examples on how to build various SubQuery projects.\n\n * Technical Reference Docs\n   \n   Written by developers for developers. Find what you need to build awesome dApps quickly.\n\n * The SubQuery Network\n   \n   SubQuery’s decentralised future. Read more about how indexers and consumers are rewarded.\n\n\nFAQ\n\n * What is SubQuery?\n   \n   SubQuery is an open source project that allows developers to index, transform, and query Substrate chain data to power their applications.\n   \n   READ MORE\n * What is the best way to get started with SubQuery?\n   \n   The best way to get started with SubQuery is to try out our Hello World tutorial. This is a simple 5 min walk through of downloading the starter template, building the project, and then using Docker to run a node on your localhost and running a simple query.\n\n * How can I contribute or give feedback to SubQuery?\n   \n   We love contributions and feedback from the community. To contribute code, fork the repository of interest and make your changes. Then submit a PR or Pull Request. Oh, don't forget to test as well! Also check out our contributions guidelines (coming soon).\n   \n   READ MORE\n * How much does it cost to host my project in SubQuery Projects?\n   \n   Hosting your project in SubQuery Projects is absolutely free - it's is our way of giving back to the community. To learn how to host your project with us, please check out the Hello World (SubQuery Hosted) tutorial.\n   \n   HOSTING YOUR PROJECT\n\n\nFor further frequently asked questions, please see our FAQ's page.\n\nIntegrating with your Custom Chain?\n\nWhether you're building a new parachain or an entirely new blockchain on Substrate - SubQuery can help you index and troubleshoot your chain's data. SubQuery is designed to easily integrate with a custom Substrate based chain.\n\nLEARN HOW TO INTEGRATE WITH YOUR CHAIN\n\nSupport and Contribute\n\nHave a question or interested to know more or how you can contribute? We’d love to hear from you. Please contact us via email or social media from the links below. Need technical expertise? Join our Discord community and receive support from our passionate community members.\n\nJOIN THE CONVERSATION ON DISCORD\nContact us hello@subquery.network\nFollow us on social\ndiscord twitter medium telegram github matrix linkedin\nSubQuery © 2021",normalizedContent:"welcome to subquery’s docs\n\nexplore and transform your chain data to build intuitive dapps faster!\n\n\nquick start guide\n\nunderstand subquery by getting hands on with a traditional hello world example. using a template project within a docker environment, you can quickly get a node up and running and start querying a blockchain in just a few minutes with a few simple commands.\n\nget started\n * tutorials and examples\n   \n   learning by doing. tutorials and examples on how to build various subquery projects.\n\n * technical reference docs\n   \n   written by developers for developers. find what you need to build awesome dapps quickly.\n\n * the subquery network\n   \n   subquery’s decentralised future. read more about how indexers and consumers are rewarded.\n\n\nfaq\n\n * what is subquery?\n   \n   subquery is an open source project that allows developers to index, transform, and query substrate chain data to power their applications.\n   \n   read more\n * what is the best way to get started with subquery?\n   \n   the best way to get started with subquery is to try out our hello world tutorial. this is a simple 5 min walk through of downloading the starter template, building the project, and then using docker to run a node on your localhost and running a simple query.\n\n * how can i contribute or give feedback to subquery?\n   \n   we love contributions and feedback from the community. to contribute code, fork the repository of interest and make your changes. then submit a pr or pull request. oh, don't forget to test as well! also check out our contributions guidelines (coming soon).\n   \n   read more\n * how much does it cost to host my project in subquery projects?\n   \n   hosting your project in subquery projects is absolutely free - it's is our way of giving back to the community. to learn how to host your project with us, please check out the hello world (subquery hosted) tutorial.\n   \n   hosting your project\n\n\nfor further frequently asked questions, please see our faq's page.\n\nintegrating with your custom chain?\n\nwhether you're building a new parachain or an entirely new blockchain on substrate - subquery can help you index and troubleshoot your chain's data. subquery is designed to easily integrate with a custom substrate based chain.\n\nlearn how to integrate with your chain\n\nsupport and contribute\n\nhave a question or interested to know more or how you can contribute? we’d love to hear from you. please contact us via email or social media from the links below. need technical expertise? join our discord community and receive support from our passionate community members.\n\njoin the conversation on discord\ncontact us hello@subquery.network\nfollow us on social\ndiscord twitter medium telegram github matrix linkedin\nsubquery © 2021",charsets:{}},{title:"GraphQL Schema",frontmatter:{},regularPath:"/create/graphql.html",relativePath:"create/graphql.md",key:"v-86b1f726",path:"/create/graphql.html",headers:[{level:2,title:"Defining Entities",slug:"defining-entities",normalizedTitle:"defining entities",charIndex:21},{level:3,title:"Entites",slug:"entites",normalizedTitle:"entites",charIndex:493},{level:3,title:"Supported scalars and types",slug:"supported-scalars-and-types",normalizedTitle:"supported scalars and types",charIndex:918},{level:2,title:"Indexing by non-primary-key field",slug:"indexing-by-non-primary-key-field",normalizedTitle:"indexing by non-primary-key field",charIndex:1269},{level:2,title:"Entity Relationships",slug:"entity-relationships",normalizedTitle:"entity relationships",charIndex:1173},{level:3,title:"One-to-One Relationships",slug:"one-to-one-relationships",normalizedTitle:"one-to-one relationships",charIndex:3228},{level:3,title:"One-to-Many relationships",slug:"one-to-many-relationships",normalizedTitle:"one-to-many relationships",charIndex:3659},{level:3,title:"Many-to-Many relationships",slug:"many-to-many-relationships",normalizedTitle:"many-to-many relationships",charIndex:3943},{level:3,title:"Reverse Lookups",slug:"reverse-lookups",normalizedTitle:"reverse lookups",charIndex:4907},{level:2,title:"JSON type",slug:"json-type",normalizedTitle:"json type",charIndex:1255},{level:3,title:"Define JSON directive",slug:"define-json-directive",normalizedTitle:"define json directive",charIndex:6224},{level:3,title:"Querying JSON fields",slug:"querying-json-fields",normalizedTitle:"querying json fields",charIndex:6889}],lastUpdated:"8/2/2021, 10:56:41 PM",headersStr:"Defining Entities Entites Supported scalars and types Indexing by non-primary-key field Entity Relationships One-to-One Relationships One-to-Many relationships Many-to-Many relationships Reverse Lookups JSON type Define JSON directive Querying JSON fields",content:"# GraphQL Schema\n\n\n# Defining Entities\n\nThe schema.graphql file defines the various GraphQL schemas. Due to the way that the GraphQL query language works, the schema file essentially dictates the shape of your data from SubQuery. To learn more about how to write in GraphQL schema language, we recommend checking out Schemas and Types.\n\nImportant: When you make any changes to the schema file, please ensure that you regenerate your types directory with the following command yarn codegen\n\n\n# Entites\n\nEach entity must define its required fields id with the type of ID!. It is used as the primary key and unique among all entities of the same type.\n\nNon-nullable fields in the entity are indicated by !. Please see the example below:\n\ntype Example @entity {\n  id: ID! # id field is always required and must look like this\n  name: String! # This is a required field\n  address: String # This is an optional field\n}\n\n\n\n# Supported scalars and types\n\nWe currently supporting flowing scalars types:\n\n * ID\n * Int\n * String\n * BigInt\n * Date\n * Boolean\n * <EntityName> for nested relationship entities, you might use the defined entity's name as one of the fields. Please see in Entity Relationships.\n * JSON can alternatively store structured data, please see JSON type\n\n\n# Indexing by non-primary-key field\n\nTo improve query performance, index an entity field simply by implementing the @index annotation on a non-primary-key field.\n\nHowever, we don't allow users to add @index annotation on any JSON object. By default, indexes are automatically added to foreign keys and for JSON fields in the database, but only to enhance query service performance.\n\nHere is an example.\n\ntype User @entity {\n  id: ID!\n  name: String! @index(unique: true) # unique can be set to true or false\n  title: Title! # Indexes are automatically added to foreign key field \n}\n\ntype Title @entity {\n  id: ID!  \n  name: String! @index(unique:true)\n}\n\n\nAssuming we knew this user's name, but we don't know the exact id value, rather than extract all users and then filtering by name we can add @index behind the name field. This makes querying much faster and we can additionally pass the unique: true to ensure uniqueness.\n\nIf a field is not unique, the maximum result set size is 100\n\nWhen code generation is run, this will automatically create a getByName under the User model, and the foreign key field title will create a getByTitleId method, which both can directly be accessed in the mapping function.\n\n/* Prepare a record for title entity */\nINSERT INTO titles (id, name) VALUES ('id_1', 'Captain')\n\n\n// Handler in mapping function\nimport {User} from \"../types/models/User\"\nimport {Title} from \"../types/models/Title\"\n\nconst jack = await User.getByName('Jack Sparrow');\n\nconst captainTitle = await Title.getByName('Captain');\n\nconst pirateLords = await User.getByTitleId(captainTitle.id); // List of all Captains\n\n\n\n# Entity Relationships\n\nAn entity often has nested relationships with other entities. Setting the field value to another entity name will define a one-to-one relationship between these two entities by default.\n\nDifferent entity relationships (one-to-one, one-to-many, and many-to-many) can be configured using the examples below.\n\n\n# One-to-One Relationships\n\nOne-to-one relationships are the default when only a single entity is mapped to another.\n\nExample: A passport will only belong to one person and a person only has one passport (in this example):\n\ntype Person @entity {\n  id: ID!\n}\n\ntype Passport @entity {\n  id: ID!\n  owner: Person!\n}\n\n\nor\n\ntype Person @entity {\n  id: ID!\n  passport: Passport!\n}\n\ntype Passport @entity {\n  id: ID!\n  owner: Person!\n}\n\n\n\n# One-to-Many relationships\n\nYou can use square brackets to indicate that a field type includes multiple entities.\n\nExample: A person can have multiple accounts.\n\ntype Person @entity {\n  id: ID!\n  accounts: [Account] \n}\n\ntype Account @entity {\n  id: ID!\n  publicAddress: String!\n}\n\n\n\n# Many-to-Many relationships\n\nA many-to-many relationship can be achieved by implementing a mapping entity to connect the other two entities.\n\nExample: Each person is a part of multiple groups (PersonGroup) and groups have multiple different people (PersonGroup).\n\ntype Person @entity {\n  id: ID!\n  name: String!\n  groups: [PersonGroup]\n}\n\ntype PersonGroup @entity {\n  id: ID!\n  person: Person!\n  Group: Group!\n}\n\ntype Group @entity {\n  id: ID!\n  name: String!\n  persons: [PersonGroup]\n}\n\n\nAlso, it is possible to create a connection of the same entity in multiple fields of the middle entity.\n\nFor example, an account can have multiple transfers, and each transfer has a source and destination account.\n\nThis will establish a bi-directional relationship between two Accounts (from and to) through Transfer table.\n\ntype Account @entity {\n  id: ID!\n  publicAddress: String!\n}\n\ntype Transfer @entity {\n  id: ID!\n  amount: BigInt\n  from: Account!\n  to: Account!\n}\n\n\n\n# Reverse Lookups\n\nTo enable a reverse lookup on an entity to a relation, attach @derivedFrom to the field and point to its reverse lookup field of another entity.\n\nThis creates a virtual field on the entity that can be queried.\n\nThe Transfer \"from\" an Account is accessible from the Account entity by setting the sentTransfer or receivedTransfer as having their value derived from the respective from or to fields.\n\ntype Account @entity {\n  id: ID!\n  publicAddress: String!\n  sentTransfers: [Transfer] @derivedFrom(field: \"from\")\n  receivedTransfers: [Transfer] @derivedFrom(field: \"to\")\n}\n\ntype Transfer @entity {\n  id: ID!\n  amount: BigInt\n  from: Account!\n  to: Account!\n}\n\n\n\n# JSON type\n\nWe are supporting saving data as a JSON type, which is a fast way to store structured data. We'll automatically generate corresponding JSON interfaces for querying this data and save you time defining and managing entities.\n\nWe recommend users use the JSON type in the following scenarios:\n\n * When storing structured data in a single field is more manageable than creating multiple separate entities.\n * Saving arbitrary key/value user preferences (where the value can be boolean, textual, or numeric, and you don't want to have separate columns for different data types)\n * The schema is volatile and changes frequently\n\n\n# Define JSON directive\n\nDefine the property as a JSON type by adding the jsonField annotation in the entity. This will automatically generate interfaces for all JSON objects in your project under types/interfaces.ts, and you can access them in your mapping function.\n\nUnlike the entity, the jsonField directive object does not require any id field. A JSON object is also able to nest with other JSON objects.\n\ntype AddressDetail @jsonField {\n  street: String!\n  district: String!\n}\n\ntype ContactCard @jsonField {\n  phone: String!\n  address: AddressDetail # Nested JSON\n}\n\ntype User @entity {\n  id: ID! \n  contact: [ContactCard] # Store a list of JSON objects\n}\n\n\n\n# Querying JSON fields\n\nThe drawback of using JSON types is a slight impact on query efficiency when filtering, as each time it performs a text search, it is on the entire entity.\n\nHowever, the impact is still acceptable in our query service. Here is an example of how to use the contains operator in the GraphQL query on a JSON field to find the first 5 users who own a phone number that contains '0064'.\n\n#To find the the first 5 users own phone numbers contains '0064'.\n\nquery{\n  user(\n    first: 5,\n    filter: {\n      contactCard: {\n        contains: [{ phone: \"0064\" }]\n    }\n}){\n    nodes{\n      id\n      contactCard\n    }\n  }\n}\n",normalizedContent:"# graphql schema\n\n\n# defining entities\n\nthe schema.graphql file defines the various graphql schemas. due to the way that the graphql query language works, the schema file essentially dictates the shape of your data from subquery. to learn more about how to write in graphql schema language, we recommend checking out schemas and types.\n\nimportant: when you make any changes to the schema file, please ensure that you regenerate your types directory with the following command yarn codegen\n\n\n# entites\n\neach entity must define its required fields id with the type of id!. it is used as the primary key and unique among all entities of the same type.\n\nnon-nullable fields in the entity are indicated by !. please see the example below:\n\ntype example @entity {\n  id: id! # id field is always required and must look like this\n  name: string! # this is a required field\n  address: string # this is an optional field\n}\n\n\n\n# supported scalars and types\n\nwe currently supporting flowing scalars types:\n\n * id\n * int\n * string\n * bigint\n * date\n * boolean\n * <entityname> for nested relationship entities, you might use the defined entity's name as one of the fields. please see in entity relationships.\n * json can alternatively store structured data, please see json type\n\n\n# indexing by non-primary-key field\n\nto improve query performance, index an entity field simply by implementing the @index annotation on a non-primary-key field.\n\nhowever, we don't allow users to add @index annotation on any json object. by default, indexes are automatically added to foreign keys and for json fields in the database, but only to enhance query service performance.\n\nhere is an example.\n\ntype user @entity {\n  id: id!\n  name: string! @index(unique: true) # unique can be set to true or false\n  title: title! # indexes are automatically added to foreign key field \n}\n\ntype title @entity {\n  id: id!  \n  name: string! @index(unique:true)\n}\n\n\nassuming we knew this user's name, but we don't know the exact id value, rather than extract all users and then filtering by name we can add @index behind the name field. this makes querying much faster and we can additionally pass the unique: true to ensure uniqueness.\n\nif a field is not unique, the maximum result set size is 100\n\nwhen code generation is run, this will automatically create a getbyname under the user model, and the foreign key field title will create a getbytitleid method, which both can directly be accessed in the mapping function.\n\n/* prepare a record for title entity */\ninsert into titles (id, name) values ('id_1', 'captain')\n\n\n// handler in mapping function\nimport {user} from \"../types/models/user\"\nimport {title} from \"../types/models/title\"\n\nconst jack = await user.getbyname('jack sparrow');\n\nconst captaintitle = await title.getbyname('captain');\n\nconst piratelords = await user.getbytitleid(captaintitle.id); // list of all captains\n\n\n\n# entity relationships\n\nan entity often has nested relationships with other entities. setting the field value to another entity name will define a one-to-one relationship between these two entities by default.\n\ndifferent entity relationships (one-to-one, one-to-many, and many-to-many) can be configured using the examples below.\n\n\n# one-to-one relationships\n\none-to-one relationships are the default when only a single entity is mapped to another.\n\nexample: a passport will only belong to one person and a person only has one passport (in this example):\n\ntype person @entity {\n  id: id!\n}\n\ntype passport @entity {\n  id: id!\n  owner: person!\n}\n\n\nor\n\ntype person @entity {\n  id: id!\n  passport: passport!\n}\n\ntype passport @entity {\n  id: id!\n  owner: person!\n}\n\n\n\n# one-to-many relationships\n\nyou can use square brackets to indicate that a field type includes multiple entities.\n\nexample: a person can have multiple accounts.\n\ntype person @entity {\n  id: id!\n  accounts: [account] \n}\n\ntype account @entity {\n  id: id!\n  publicaddress: string!\n}\n\n\n\n# many-to-many relationships\n\na many-to-many relationship can be achieved by implementing a mapping entity to connect the other two entities.\n\nexample: each person is a part of multiple groups (persongroup) and groups have multiple different people (persongroup).\n\ntype person @entity {\n  id: id!\n  name: string!\n  groups: [persongroup]\n}\n\ntype persongroup @entity {\n  id: id!\n  person: person!\n  group: group!\n}\n\ntype group @entity {\n  id: id!\n  name: string!\n  persons: [persongroup]\n}\n\n\nalso, it is possible to create a connection of the same entity in multiple fields of the middle entity.\n\nfor example, an account can have multiple transfers, and each transfer has a source and destination account.\n\nthis will establish a bi-directional relationship between two accounts (from and to) through transfer table.\n\ntype account @entity {\n  id: id!\n  publicaddress: string!\n}\n\ntype transfer @entity {\n  id: id!\n  amount: bigint\n  from: account!\n  to: account!\n}\n\n\n\n# reverse lookups\n\nto enable a reverse lookup on an entity to a relation, attach @derivedfrom to the field and point to its reverse lookup field of another entity.\n\nthis creates a virtual field on the entity that can be queried.\n\nthe transfer \"from\" an account is accessible from the account entity by setting the senttransfer or receivedtransfer as having their value derived from the respective from or to fields.\n\ntype account @entity {\n  id: id!\n  publicaddress: string!\n  senttransfers: [transfer] @derivedfrom(field: \"from\")\n  receivedtransfers: [transfer] @derivedfrom(field: \"to\")\n}\n\ntype transfer @entity {\n  id: id!\n  amount: bigint\n  from: account!\n  to: account!\n}\n\n\n\n# json type\n\nwe are supporting saving data as a json type, which is a fast way to store structured data. we'll automatically generate corresponding json interfaces for querying this data and save you time defining and managing entities.\n\nwe recommend users use the json type in the following scenarios:\n\n * when storing structured data in a single field is more manageable than creating multiple separate entities.\n * saving arbitrary key/value user preferences (where the value can be boolean, textual, or numeric, and you don't want to have separate columns for different data types)\n * the schema is volatile and changes frequently\n\n\n# define json directive\n\ndefine the property as a json type by adding the jsonfield annotation in the entity. this will automatically generate interfaces for all json objects in your project under types/interfaces.ts, and you can access them in your mapping function.\n\nunlike the entity, the jsonfield directive object does not require any id field. a json object is also able to nest with other json objects.\n\ntype addressdetail @jsonfield {\n  street: string!\n  district: string!\n}\n\ntype contactcard @jsonfield {\n  phone: string!\n  address: addressdetail # nested json\n}\n\ntype user @entity {\n  id: id! \n  contact: [contactcard] # store a list of json objects\n}\n\n\n\n# querying json fields\n\nthe drawback of using json types is a slight impact on query efficiency when filtering, as each time it performs a text search, it is on the entire entity.\n\nhowever, the impact is still acceptable in our query service. here is an example of how to use the contains operator in the graphql query on a json field to find the first 5 users who own a phone number that contains '0064'.\n\n#to find the the first 5 users own phone numbers contains '0064'.\n\nquery{\n  user(\n    first: 5,\n    filter: {\n      contactcard: {\n        contains: [{ phone: \"0064\" }]\n    }\n}){\n    nodes{\n      id\n      contactcard\n    }\n  }\n}\n",charsets:{}},{title:"Creating a SubQuery Project",frontmatter:{},regularPath:"/create/introduction.html",relativePath:"create/introduction.md",key:"v-94114ee6",path:"/create/introduction.html",headers:[{level:2,title:"The Basic Workflow",slug:"the-basic-workflow",normalizedTitle:"the basic workflow",charIndex:273},{level:2,title:"Directory Structure",slug:"directory-structure",normalizedTitle:"directory structure",charIndex:1236},{level:2,title:"Code Generation",slug:"code-generation",normalizedTitle:"code generation",charIndex:1600},{level:2,title:"Build",slug:"build",normalizedTitle:"build",charIndex:2057},{level:2,title:"Logging",slug:"logging",normalizedTitle:"logging",charIndex:2282}],lastUpdated:"8/2/2021, 10:56:41 PM",headersStr:"The Basic Workflow Directory Structure Code Generation Build Logging",content:"# Creating a SubQuery Project\n\nIn the quick start guide, we very quickly ran through an example to give you a taste of what SubQuery is and how it works. Here we'll take a closer look at the workflow when creating your project and the key files you'll be working with.\n\n\n# The Basic Workflow\n\nSome of the following examples will assume you have successfully initialized the starter package in the Quick start section. From that starter package, we'll walk through the standard process to customise and implement your SubQuery project.\n\n 1. Initialise your project using subql init PROJECT_NAME\n 2. Update the Manifest file (project.yaml) to include information about your blockchain, and the entities that you will map - see Manifest File\n 3. Create GraphQL entities in your schema (schema.graphql) that define the shape of the data that you will extract and persist for querying - see GraphQL Schema\n 4. Add all the mapping functions (eg mappingHandlers.ts) you wish to invoke to transform chain data to the GraphQL entities that you have defined - see Mapping\n 5. Generate, build, and publish your code to SubQuery Projects (or run in your own local node) - see Running and Querying your Starter Project in our quick start guide.\n\n\n# Directory Structure\n\nThe following map provides an overview of the directory structure of a SubQuery project when the init command is run.\n\n- project-name\n  L package.json\n  L project.yaml\n  L README.md\n  L schema.graphql\n  L tsconfig.json\n  L docker-compose.yml\n  L src\n    L index.ts\n    L mappings\n      L mappingHandlers.ts\n  L .gitignore\n\n\nFor example:\n\n\n\n\n# Code Generation\n\nWhenever you change your GraphQL entities, you must regenerate your types directory with the following command.\n\nyarn codegen\n\n\nThis will create a new directory (or update the existing) src/types which contain generated entity classes for each type you have defined previously in schema.graphql. These classes provide type-safe entity loading, read and write access to entity fields - see more about this process in the GraphQL Schema.\n\n\n# Build\n\nIn order to run your SubQuery Project on a locally hosted SubQuery Node, you need to first build your work.\n\nRun the build command from the project's root directory.\n\n# Yarn\nyarn build\n\n# NPM\nnpm run-script build\n\n\n\n# Logging\n\nThe console.log method is no longer supported. Instead, a logger module has been injected in the types, which means we can support a logger that can accept various logging levels.\n\nlogger.info('Info level message');\nlogger.debug('Debugger level message');\nlogger.warn('Warning level message');\n\n\nTo use logger.info or logger.warn, just place the line into your mapping file.\n\n\n\nTo use logger.debug, an additional step is required. Add --log-level=debug to your command line.\n\nIf you are running a docker container, add this line to your docker-compose.yaml file.\n\n\n\nYou should now see the new logging in the terminal screen.\n\n",normalizedContent:"# creating a subquery project\n\nin the quick start guide, we very quickly ran through an example to give you a taste of what subquery is and how it works. here we'll take a closer look at the workflow when creating your project and the key files you'll be working with.\n\n\n# the basic workflow\n\nsome of the following examples will assume you have successfully initialized the starter package in the quick start section. from that starter package, we'll walk through the standard process to customise and implement your subquery project.\n\n 1. initialise your project using subql init project_name\n 2. update the manifest file (project.yaml) to include information about your blockchain, and the entities that you will map - see manifest file\n 3. create graphql entities in your schema (schema.graphql) that define the shape of the data that you will extract and persist for querying - see graphql schema\n 4. add all the mapping functions (eg mappinghandlers.ts) you wish to invoke to transform chain data to the graphql entities that you have defined - see mapping\n 5. generate, build, and publish your code to subquery projects (or run in your own local node) - see running and querying your starter project in our quick start guide.\n\n\n# directory structure\n\nthe following map provides an overview of the directory structure of a subquery project when the init command is run.\n\n- project-name\n  l package.json\n  l project.yaml\n  l readme.md\n  l schema.graphql\n  l tsconfig.json\n  l docker-compose.yml\n  l src\n    l index.ts\n    l mappings\n      l mappinghandlers.ts\n  l .gitignore\n\n\nfor example:\n\n\n\n\n# code generation\n\nwhenever you change your graphql entities, you must regenerate your types directory with the following command.\n\nyarn codegen\n\n\nthis will create a new directory (or update the existing) src/types which contain generated entity classes for each type you have defined previously in schema.graphql. these classes provide type-safe entity loading, read and write access to entity fields - see more about this process in the graphql schema.\n\n\n# build\n\nin order to run your subquery project on a locally hosted subquery node, you need to first build your work.\n\nrun the build command from the project's root directory.\n\n# yarn\nyarn build\n\n# npm\nnpm run-script build\n\n\n\n# logging\n\nthe console.log method is no longer supported. instead, a logger module has been injected in the types, which means we can support a logger that can accept various logging levels.\n\nlogger.info('info level message');\nlogger.debug('debugger level message');\nlogger.warn('warning level message');\n\n\nto use logger.info or logger.warn, just place the line into your mapping file.\n\n\n\nto use logger.debug, an additional step is required. add --log-level=debug to your command line.\n\nif you are running a docker container, add this line to your docker-compose.yaml file.\n\n\n\nyou should now see the new logging in the terminal screen.\n\n",charsets:{}},{title:"Manifest File",frontmatter:{},regularPath:"/create/manifest.html",relativePath:"create/manifest.md",key:"v-5d960c2d",path:"/create/manifest.html",headers:[{level:2,title:"Network Filters",slug:"network-filters",normalizedTitle:"network filters",charIndex:1928},{level:2,title:"Mapping Filters",slug:"mapping-filters",normalizedTitle:"mapping filters",charIndex:3088},{level:2,title:"Custom Chains",slug:"custom-chains",normalizedTitle:"custom chains",charIndex:4383}],lastUpdated:"8/2/2021, 10:56:41 PM",headersStr:"Network Filters Mapping Filters Custom Chains",content:'# Manifest File\n\nThe Manifest project.yaml file can be seen as an entry point of your project and it defines most of the details on how SubQuery will index and transform the chain data.\n\nThe Manifest can be in either YAML or JSON format. In this document, we will use YAML in all the examples. Below is a standard example of a basic project.yaml.\n\nspecVersion: "0.0.1"\ndescription: ""\nrepository: "https://github.com/subquery/subql-starter"\n\nschema: "./schema.graphql"\n\nnetwork:\n  endpoint: "wss://polkadot.api.onfinality.io/public-ws"\n  # Optionally provide the HTTP endpoint of a full chain dictionary to speed up processing\n  dictionary: "https://api.subquery.network/sq/subquery/dictionary-polkadot"\n\ndataSources:\n  - name: main\n    kind: substrate/Runtime\n    startBlock: 1\n    mapping:\n      handlers:\n        - handler: handleBlock\n          kind: substrate/BlockHandler\n        - handler: handleEvent\n          kind: substrate/EventHandler\n          filter: #Filter is optional but suggested to speed up event processing\n            module: balances\n            method: Deposit\n        - handler: handleCall\n          kind: substrate/CallHandler\n\n\n * network.endpoint defines the wss or ws endpoint of the blockchain to be indexed - This must be a full archive node.\n * network.dictionary optionally provides the HTTP endpoint of a full chain dictionary to speed up processing - see Running an Indexer\n * dataSources defines the data that will be filtered and extracted and the location of the mapping function handler for the data transformation to be applied.\n   * kind only supports substrate/Runtime for now.\n   * startBlock specifies the block height to start indexing from.\n   * filter will filter the data source to execute by the network endpoint spec name, see network filters\n   * mapping.handlers will list all the mapping functions and their corresponding handler types, with additional mapping filters.\n\n\n# Network Filters\n\nUsually the user will create a SubQuery and expect to reuse it for both their testnet and mainnet environments (e.g Polkadot and Kusama). Between networks, various options are likely to be different (e.g. index start block). Therefore, we allow users to define different details for each data source which means that one SubQuery project can still be used across multiple networks.\n\nUsers can add a filter on dataSources to decide which data source to run on each network.\n\nBelow is an example that shows different data sources for both the Polkadot and Kusama networks.\n\n...\nnetwork:\n  endpoint: "wss://polkadot.api.onfinality.io/public-ws"\n\n#Create a template to avoid redundancy\ndefinitions:\n  mapping: &mymapping\n    handlers:\n      - handler: handleBlock\n        kind: substrate/BlockHandler\n\ndataSources:\n  - name: polkadotRuntime\n    kind: substrate/Runtime\n    filter:  #Optional\n        specName: polkadot\n    startBlock: 1000\n    mapping: *mymapping #use template here\n  - name: kusamaRuntime\n    kind: substrate/Runtime\n    filter: \n        specName: kusama\n    startBlock: 12000 \n    mapping: *mymapping # can reuse or change\n\n\n\n# Mapping Filters\n\nMapping filters are an extremely useful feature to decide what block, event, or extrinsic will trigger a mapping handler.\n\nOnly incoming data that satisfy the filter conditions will be processed by the mapping functions. Mapping filters are optional but are recommended as they significantly reduce the amount of data processed by your SubQuery project and will improve indexing performance.\n\n#Example filter from callHandler\nfilter: \n   module: balances\n   method: Deposit\n   success: true\n\n\nThe following table explains filters supported by different handlers.\n\nHANDLER        SUPPORTED FILTER\nBlockHandler   specVersion\nEventHandler   module,method\nCallHandler    module,method ,success\n\n * Module and method filters are supported on any substrate-based chain.\n * The success filter takes a boolean value and can be used to filter the extrinsic by its success status.\n * The specVersion filter specifies the spec version range for a substrate block. The following examples describe how to set version ranges.\n\nfilter:\n  specVersion: [23, 24]   #Index block with specVersion in between 23 and 24 (inclusive).\n  specVersion: [100]      #Index block with specVersion greater than or equal 100.\n  specVersion: [null, 23] #Index block with specVersion less than or equal 23.\n\n\n\n# Custom Chains\n\nYou can index data from custom chains by also including chain types in the project.yaml. Declare the specific types supported by this blockchain in network.types. We support the additional types used by substrate runtime modules.\n\ntypesAlias, typesBundle, typesChain, and typesSpec are also supported.\n\nspecVersion: "0.0.1"\ndescription: "This subquery indexes kitty\'s birth info"\nrepository: "https://github.com/onfinality-io/subql-examples"\nschema: "./schema.graphql"\nnetwork:\n  endpoint: "ws://host.kittychain.io/public-ws"\n  types: {\n    "KittyIndex": "u32",\n    "Kitty": "[u8; 16]"\n  }\n# typesChain: { chain: { Type5: \'example\' } }\n# typesSpec: { spec: { Type6: \'example\' } }\ndataSources:\n  - name: runtime\n    kind: substrate/Runtime\n    startBlock: 1\n    filter:  #Optional\n      specName: kitty-chain \n    mapping:\n      handlers:\n        - handler: handleKittyBred\n          kind: substrate/CallHandler\n          filter:\n            module: kitties\n            method: breed\n            success: true\n',normalizedContent:'# manifest file\n\nthe manifest project.yaml file can be seen as an entry point of your project and it defines most of the details on how subquery will index and transform the chain data.\n\nthe manifest can be in either yaml or json format. in this document, we will use yaml in all the examples. below is a standard example of a basic project.yaml.\n\nspecversion: "0.0.1"\ndescription: ""\nrepository: "https://github.com/subquery/subql-starter"\n\nschema: "./schema.graphql"\n\nnetwork:\n  endpoint: "wss://polkadot.api.onfinality.io/public-ws"\n  # optionally provide the http endpoint of a full chain dictionary to speed up processing\n  dictionary: "https://api.subquery.network/sq/subquery/dictionary-polkadot"\n\ndatasources:\n  - name: main\n    kind: substrate/runtime\n    startblock: 1\n    mapping:\n      handlers:\n        - handler: handleblock\n          kind: substrate/blockhandler\n        - handler: handleevent\n          kind: substrate/eventhandler\n          filter: #filter is optional but suggested to speed up event processing\n            module: balances\n            method: deposit\n        - handler: handlecall\n          kind: substrate/callhandler\n\n\n * network.endpoint defines the wss or ws endpoint of the blockchain to be indexed - this must be a full archive node.\n * network.dictionary optionally provides the http endpoint of a full chain dictionary to speed up processing - see running an indexer\n * datasources defines the data that will be filtered and extracted and the location of the mapping function handler for the data transformation to be applied.\n   * kind only supports substrate/runtime for now.\n   * startblock specifies the block height to start indexing from.\n   * filter will filter the data source to execute by the network endpoint spec name, see network filters\n   * mapping.handlers will list all the mapping functions and their corresponding handler types, with additional mapping filters.\n\n\n# network filters\n\nusually the user will create a subquery and expect to reuse it for both their testnet and mainnet environments (e.g polkadot and kusama). between networks, various options are likely to be different (e.g. index start block). therefore, we allow users to define different details for each data source which means that one subquery project can still be used across multiple networks.\n\nusers can add a filter on datasources to decide which data source to run on each network.\n\nbelow is an example that shows different data sources for both the polkadot and kusama networks.\n\n...\nnetwork:\n  endpoint: "wss://polkadot.api.onfinality.io/public-ws"\n\n#create a template to avoid redundancy\ndefinitions:\n  mapping: &mymapping\n    handlers:\n      - handler: handleblock\n        kind: substrate/blockhandler\n\ndatasources:\n  - name: polkadotruntime\n    kind: substrate/runtime\n    filter:  #optional\n        specname: polkadot\n    startblock: 1000\n    mapping: *mymapping #use template here\n  - name: kusamaruntime\n    kind: substrate/runtime\n    filter: \n        specname: kusama\n    startblock: 12000 \n    mapping: *mymapping # can reuse or change\n\n\n\n# mapping filters\n\nmapping filters are an extremely useful feature to decide what block, event, or extrinsic will trigger a mapping handler.\n\nonly incoming data that satisfy the filter conditions will be processed by the mapping functions. mapping filters are optional but are recommended as they significantly reduce the amount of data processed by your subquery project and will improve indexing performance.\n\n#example filter from callhandler\nfilter: \n   module: balances\n   method: deposit\n   success: true\n\n\nthe following table explains filters supported by different handlers.\n\nhandler        supported filter\nblockhandler   specversion\neventhandler   module,method\ncallhandler    module,method ,success\n\n * module and method filters are supported on any substrate-based chain.\n * the success filter takes a boolean value and can be used to filter the extrinsic by its success status.\n * the specversion filter specifies the spec version range for a substrate block. the following examples describe how to set version ranges.\n\nfilter:\n  specversion: [23, 24]   #index block with specversion in between 23 and 24 (inclusive).\n  specversion: [100]      #index block with specversion greater than or equal 100.\n  specversion: [null, 23] #index block with specversion less than or equal 23.\n\n\n\n# custom chains\n\nyou can index data from custom chains by also including chain types in the project.yaml. declare the specific types supported by this blockchain in network.types. we support the additional types used by substrate runtime modules.\n\ntypesalias, typesbundle, typeschain, and typesspec are also supported.\n\nspecversion: "0.0.1"\ndescription: "this subquery indexes kitty\'s birth info"\nrepository: "https://github.com/onfinality-io/subql-examples"\nschema: "./schema.graphql"\nnetwork:\n  endpoint: "ws://host.kittychain.io/public-ws"\n  types: {\n    "kittyindex": "u32",\n    "kitty": "[u8; 16]"\n  }\n# typeschain: { chain: { type5: \'example\' } }\n# typesspec: { spec: { type6: \'example\' } }\ndatasources:\n  - name: runtime\n    kind: substrate/runtime\n    startblock: 1\n    filter:  #optional\n      specname: kitty-chain \n    mapping:\n      handlers:\n        - handler: handlekittybred\n          kind: substrate/callhandler\n          filter:\n            module: kitties\n            method: breed\n            success: true\n',charsets:{}},{title:"Mapping",frontmatter:{},regularPath:"/create/mapping.html",relativePath:"create/mapping.md",key:"v-03d2d023",path:"/create/mapping.html",headers:[{level:2,title:"Block Handler",slug:"block-handler",normalizedTitle:"block handler",charIndex:598},{level:2,title:"Event Handler",slug:"event-handler",normalizedTitle:"event handler",charIndex:559},{level:2,title:"Call Handler",slug:"call-handler",normalizedTitle:"call handler",charIndex:579},{level:2,title:"Query States",slug:"query-states",normalizedTitle:"query states",charIndex:3091},{level:2,title:"RPC calls",slug:"rpc-calls",normalizedTitle:"rpc calls",charIndex:4101},{level:2,title:"Modules and Libraries",slug:"modules-and-libraries",normalizedTitle:"modules and libraries",charIndex:5044},{level:3,title:"Built-in modules",slug:"built-in-modules",normalizedTitle:"built-in modules",charIndex:5474},{level:3,title:"Third-party libraries",slug:"third-party-libraries",normalizedTitle:"third-party libraries",charIndex:6124},{level:2,title:"Custom Substrate Chains",slug:"custom-substrate-chains",normalizedTitle:"custom substrate chains",charIndex:4994},{level:3,title:"Preparation",slug:"preparation",normalizedTitle:"preparation",charIndex:6841},{level:4,title:"Metadata",slug:"metadata",normalizedTitle:"metadata",charIndex:7083},{level:4,title:"Type definitions",slug:"type-definitions",normalizedTitle:"type definitions",charIndex:7789},{level:4,title:"Packages",slug:"packages",normalizedTitle:"packages",charIndex:8923},{level:3,title:"Type generation",slug:"type-generation",normalizedTitle:"type generation",charIndex:10049},{level:3,title:"Usage",slug:"usage",normalizedTitle:"usage",charIndex:11243}],lastUpdated:"8/2/2021, 10:56:41 PM",headersStr:"Block Handler Event Handler Call Handler Query States RPC calls Modules and Libraries Built-in modules Third-party libraries Custom Substrate Chains Preparation Metadata Type definitions Packages Type generation Usage",content:'# Mapping\n\nMapping functions define how chain data is transformed into the optimised GraphQL entities that we have previously defined in the schema.graphql file.\n\nMappings are written in a subset of TypeScript called AssemblyScript which can be compiled to WASM (WebAssembly).\n\n * Mappings are defined in the src/mappings directory and are exported as a function\n * These mappings are also exported in src/index.ts\n * The mappings files are reference in project.yaml under the mapping handlers.\n\nThere are three classes of mappings functions; Block handlers, Event Handlers, and Call Handlers.\n\n\n# Block Handler\n\nYou can use block handlers to capture information each time a new block is attached to the Substrate chain, e.g. block number. To achieve this, a defined BlockHandler will be called once for every block.\n\nimport {SubstrateBlock} from "@subql/types";\n\nexport async function handleBlock(block: SubstrateBlock): Promise<void> {\n    // Create a new StarterEntity with the block hash as it\'s ID\n    const record = new starterEntity(block.block.header.hash.toString());\n    record.field1 = block.block.header.number.toNumber();\n    await record.save();\n}\n\n\nA SubstrateBlock is an extended interface type of signedBlock, but also includes the specVersion and timestamp.\n\n\n# Event Handler\n\nYou can use event handlers to capture information when certain events are included on a new block. The events that are part of the default Substrate runtime and a block may contain multiple events.\n\nDuring the processing, the event handler will receive a substrate event as an argument with the event\'s typed inputs and outputs. Any type of event will trigger the mapping, allowing activity with the data source to be captured. You should use Mapping Filters in your manifest to filter events to reduce the time it takes to index data and improve mapping performance.\n\nimport {SubstrateEvent} from "@subql/types";\n\nexport async function handleEvent(event: SubstrateEvent): Promise<void> {\n    const {event: {data: [account, balance]}} = event;\n    // Retrieve the record by its ID\n    const record = new starterEntity(event.extrinsic.block.block.header.hash.toString());\n    record.field2 = account.toString();\n    record.field3 = (balance as Balance).toBigInt();\n    await record.save();\n\n\nA SubstrateEvent is an extended interface type of the EventRecord. Besides the event data, it also includes an id (the block to which this event belongs) and the extrinsic inside of this block.\n\n\n# Call Handler\n\nCall handlers are used when you want to capture information on certain substrate extrinsics.\n\nexport async function handleCall(extrinsic: SubstrateExtrinsic): Promise<void> {\n    const record = new starterEntity(extrinsic.block.block.header.hash.toString());\n    record.field4 = extrinsic.block.timestamp;\n    await record.save();\n}\n\n\nThe SubstrateExtrinsic extends GenericExtrinsic. It is assigned an id (the block to which this extrinsic belongs) and provides an extrinsic property that extends the events among this block. Additionally, it records the success status of this extrinsic.\n\n\n# Query States\n\nOur goal is to cover all data sources for users for mapping handlers (more than just the three interface event types above). Therefore, we have exposed some of the @polkadot/api interfaces to increase capabilities.\n\nThese are the interfaces we currently support:\n\n * api.query.<module>.<method>() will query the current block.\n * api.query.<module>.<method>.multi() will make multiple queries of the same type at the current block.\n * api.queryMulti() will make multiple queries of different types at the current block.\n\nThese are the interfaces we do NOT support currently:\n\n * api.tx.*\n * api.derive.*\n * api.query.<module>.<method>.at\n * api.query.<module>.<method>.entriesAt\n * api.query.<module>.<method>.entriesPaged\n * api.query.<module>.<method>.hash\n * api.query.<module>.<method>.keysAt\n * api.query.<module>.<method>.keysPaged\n * api.query.<module>.<method>.range\n * api.query.<module>.<method>.sizeAt\n\nSee an example of using this API in our validator-threshold example use case.\n\n\n# RPC calls\n\nWe also support some API RPC methods that are remote calls that allow the mapping function to interact with the actual node, query, and submission. A core premise of SubQuery is that it\'s deterministic, and therefore, to keep the results consistent we only allow historical RPC calls.\n\nDocuments in JSON-RPC provide some methods that take BlockHash as an input parameter (e.g. at?: BlockHash), which are now permitted. We have also modified these methods to take the current indexing block hash by default.\n\n// Let\'s say we are currently indexing a block with this hash number\nconst blockhash = `0x844047c4cf1719ba6d54891e92c071a41e3dfe789d064871148e9d41ef086f6a`;\n\n// Original method has an optional input is block hash\nconst b1 = await api.rpc.chain.getBlock(blockhash);\n\n// It will use the current block has by default like so\nconst b2 = await api.rpc.chain.getBlock();\n\n\n * For Custom Substrate Chains RPC calls, see usage.\n\n\n# Modules and Libraries\n\nTo improve SubQuery\'s data processing capabilities, we have allowed some of the NodeJS\'s built-in modules for running mapping functions in the sandbox, and have allowed users to call third-party libraries.\n\nPlease note this is an experimental feature and you may encounter bugs or issues that may negatively impact your mapping functions. Please report any bugs you find by creating an issue in GitHub.\n\n\n# Built-in modules\n\nCurrently, we allow the following NodeJS modules: assert, buffer, crypto, util, and path.\n\nRather than importing the whole module, we recommend only importing the required method(s) that you need. Some methods in these modules may have dependencies that are unsupported and will fail on import.\n\nimport {hashMessage} from "ethers/lib/utils"; //Good way\nimport {utils} from "ethers" //Bad way\n\nexport async function handleCall(extrinsic: SubstrateExtrinsic): Promise<void> {\n    const record = new starterEntity(extrinsic.block.block.header.hash.toString());\n    record.field1 = hashMessage(\'Hello\');\n    await record.save();\n}\n\n\n\n# Third-party libraries\n\nDue to the limitations of the virtual machine in our sandbox, currently, we only support third-party libraries written by CommonJS.\n\nWe also support a hybrid library like @polkadot/* that uses ESM as default. However, if any other libraries depend on any modules in ESM format, the virtual machine will NOT compile and return an error.\n\n\n# Custom Substrate Chains\n\nSubQuery can be used on any Substrate-based chain, not just Polkadot or Kusama.\n\nYou can use a custom Substrate-based chain and we provide tools to import types, interfaces, and additional methods automatically using @polkadot/typegen.\n\nIn the following sections, we use our kitty example to explain the integration process.\n\n\n# Preparation\n\nCreate a new directory api-interfaces under the project src folder to store all required and generated files. We also create an api-interfaces/kitties directory as we want to add decoration in the API from the kitties module.\n\n# Metadata\n\nWe need metadata to generate the actual API endpoints. In the kitty example, we use an endpoint from a local testnet, and it provides additional types. Follow the steps in PolkadotJS metadata setup to retrieve a node\'s metadata from its HTTP endpoint.\n\ncurl -H "Content-Type: application/json" -d \'{"id":"1", "jsonrpc":"2.0", "method": "state_getMetadata", "params":[]}\' http://localhost:9933\n\n\nor from its websocket endpoint with help from websocat:\n\n//Install the websocat\nbrew install websocat\n\n//Get metadata\necho state_getMetadata | websocat \'ws://127.0.0.1:9944\' --jsonrpc\n\n\nNext, copy and paste the output to a JSON file. In our kitty example, we have created api-interface/kitty.json.\n\n# Type definitions\n\nWe assume that the user knows the specific types and RPC support from the chain, and it is defined in the Manifest.\n\nFollowing types setup, we create :\n\n * src/api-interfaces/definitions.ts - this exports all the sub-folder definitions\n\nexport { default as kitties } from \'./kitties/definitions\';\n\n\n * src/api-interfaces/kitties/definitions.ts - type definitions for the kitties module\n\nexport default {\n    // custom types\n    types: {\n        Address: "AccountId",\n        LookupSource: "AccountId",\n        KittyIndex: "u32",\n        Kitty: "[u8; 16]"\n    },\n    // custom rpc : api.rpc.kitties.getKittyPrice\n    rpc: {\n        getKittyPrice:{\n            description: \'Get Kitty price\',\n            params: [\n                {\n                    name: \'at\',\n                    type: \'BlockHash\',\n                    isHistoric: true,\n                    isOptional: false\n                },\n                {\n                    name: \'kittyIndex\',\n                    type: \'KittyIndex\',\n                    isOptional: false\n                }\n            ],\n            type: \'Balance\'\n        }\n    }\n}\n\n\n# Packages\n\n * In the package.json file, make sure to add @polkadot/typegen as a development dependency and @polkadot/api as a regular dependency (ideally the same version). We also need ts-node as a development dependency to help us run the scripts.\n * We add scripts to run both types; generate:defs and metadata generate:meta generators (in that order, so metadata can use the types).\n\nHere is a simplified version of package.json. Make sure in the scripts section the package name is correct and the directories are valid.\n\n{\n  "name": "kitty-birthinfo",\n  "scripts": {\n    "generate:defs": "ts-node --skip-project node_modules/.bin/polkadot-types-from-defs --package kitty-birthinfo/api-interfaces --input ./src/api-interfaces",\n    "generate:meta": "ts-node --skip-project node_modules/.bin/polkadot-types-from-chain --package kitty-birthinfo/api-interfaces --endpoint ./src/api-interfaces/kitty.json --output ./src/api-interfaces --strict"\n  },\n  "dependencies": {\n    "@polkadot/api": "^4.9.2"\n  },\n  "devDependencies": {\n    "typescript": "^4.1.3",\n    "@polkadot/typegen": "^4.9.2",\n    "ts-node": "^8.6.2"\n  }\n}\n\n\n\n# Type generation\n\nNow that preparation is completed, we are ready to generate types and metadata. Run the commands below:\n\n# Yarn to install new dependencies\nyarn\n\n# Generate types\nyarn generate:defs\n\n\nIn each modules folder (eg /kitties), there should now be a generated types.ts that defines all interfaces from this modules\' definitions, also a file index.ts that exports them all.\n\n# Generate metadata\nyarn generate:meta\n\n\nThis command will generate the metadata and a new api-augment for the APIs. As we don\'t want to use the built-in API, we will need to replace them by adding an explicit override in our tsconfig.json. After the updates, the paths in the config will look like this (without the comments):\n\n{\n  "compilerOptions": {\n      // this is the package name we use (in the interface imports, --package for generators) */\n      "kitty-birthinfo/*": ["src/*"],\n      // here we replace the @polkadot/api augmentation with our own, generated from chain\n      "@polkadot/api/augment": ["src/interfaces/augment-api.ts"],\n      // replace the augmented types with our own, as generated from definitions\n      "@polkadot/types/augment": ["src/interfaces/augment-types.ts"]\n    }\n}\n\n\n\n# Usage\n\nNow in the mapping function, we can show how the metadata and types actually decorate the API. The RPC endpoint will support the modules and methods we declared above.\n\nexport async function kittyApiHandler(): Promise<void> {\n    //return the KittyIndex type\n    const nextKittyId = await api.query.kitties.nextKittyId();\n    // return the Kitty type, input parameters types are AccountId and KittyIndex\n    const allKitties  = await api.query.kitties.kitties(\'xxxxxxxxx\',123)\n    logger.info(`Next kitty id ${nextKittyId}`)\n    //Custom rpc, set undefined to blockhash\n    const kittyPrice = await api.rpc.kitties.getKittyPrice(undefined,nextKittyId);\n}\n\n\nIf you wish to publish this project to our explorer, please include the generated files in src/api-interfaces.',normalizedContent:'# mapping\n\nmapping functions define how chain data is transformed into the optimised graphql entities that we have previously defined in the schema.graphql file.\n\nmappings are written in a subset of typescript called assemblyscript which can be compiled to wasm (webassembly).\n\n * mappings are defined in the src/mappings directory and are exported as a function\n * these mappings are also exported in src/index.ts\n * the mappings files are reference in project.yaml under the mapping handlers.\n\nthere are three classes of mappings functions; block handlers, event handlers, and call handlers.\n\n\n# block handler\n\nyou can use block handlers to capture information each time a new block is attached to the substrate chain, e.g. block number. to achieve this, a defined blockhandler will be called once for every block.\n\nimport {substrateblock} from "@subql/types";\n\nexport async function handleblock(block: substrateblock): promise<void> {\n    // create a new starterentity with the block hash as it\'s id\n    const record = new starterentity(block.block.header.hash.tostring());\n    record.field1 = block.block.header.number.tonumber();\n    await record.save();\n}\n\n\na substrateblock is an extended interface type of signedblock, but also includes the specversion and timestamp.\n\n\n# event handler\n\nyou can use event handlers to capture information when certain events are included on a new block. the events that are part of the default substrate runtime and a block may contain multiple events.\n\nduring the processing, the event handler will receive a substrate event as an argument with the event\'s typed inputs and outputs. any type of event will trigger the mapping, allowing activity with the data source to be captured. you should use mapping filters in your manifest to filter events to reduce the time it takes to index data and improve mapping performance.\n\nimport {substrateevent} from "@subql/types";\n\nexport async function handleevent(event: substrateevent): promise<void> {\n    const {event: {data: [account, balance]}} = event;\n    // retrieve the record by its id\n    const record = new starterentity(event.extrinsic.block.block.header.hash.tostring());\n    record.field2 = account.tostring();\n    record.field3 = (balance as balance).tobigint();\n    await record.save();\n\n\na substrateevent is an extended interface type of the eventrecord. besides the event data, it also includes an id (the block to which this event belongs) and the extrinsic inside of this block.\n\n\n# call handler\n\ncall handlers are used when you want to capture information on certain substrate extrinsics.\n\nexport async function handlecall(extrinsic: substrateextrinsic): promise<void> {\n    const record = new starterentity(extrinsic.block.block.header.hash.tostring());\n    record.field4 = extrinsic.block.timestamp;\n    await record.save();\n}\n\n\nthe substrateextrinsic extends genericextrinsic. it is assigned an id (the block to which this extrinsic belongs) and provides an extrinsic property that extends the events among this block. additionally, it records the success status of this extrinsic.\n\n\n# query states\n\nour goal is to cover all data sources for users for mapping handlers (more than just the three interface event types above). therefore, we have exposed some of the @polkadot/api interfaces to increase capabilities.\n\nthese are the interfaces we currently support:\n\n * api.query.<module>.<method>() will query the current block.\n * api.query.<module>.<method>.multi() will make multiple queries of the same type at the current block.\n * api.querymulti() will make multiple queries of different types at the current block.\n\nthese are the interfaces we do not support currently:\n\n * api.tx.*\n * api.derive.*\n * api.query.<module>.<method>.at\n * api.query.<module>.<method>.entriesat\n * api.query.<module>.<method>.entriespaged\n * api.query.<module>.<method>.hash\n * api.query.<module>.<method>.keysat\n * api.query.<module>.<method>.keyspaged\n * api.query.<module>.<method>.range\n * api.query.<module>.<method>.sizeat\n\nsee an example of using this api in our validator-threshold example use case.\n\n\n# rpc calls\n\nwe also support some api rpc methods that are remote calls that allow the mapping function to interact with the actual node, query, and submission. a core premise of subquery is that it\'s deterministic, and therefore, to keep the results consistent we only allow historical rpc calls.\n\ndocuments in json-rpc provide some methods that take blockhash as an input parameter (e.g. at?: blockhash), which are now permitted. we have also modified these methods to take the current indexing block hash by default.\n\n// let\'s say we are currently indexing a block with this hash number\nconst blockhash = `0x844047c4cf1719ba6d54891e92c071a41e3dfe789d064871148e9d41ef086f6a`;\n\n// original method has an optional input is block hash\nconst b1 = await api.rpc.chain.getblock(blockhash);\n\n// it will use the current block has by default like so\nconst b2 = await api.rpc.chain.getblock();\n\n\n * for custom substrate chains rpc calls, see usage.\n\n\n# modules and libraries\n\nto improve subquery\'s data processing capabilities, we have allowed some of the nodejs\'s built-in modules for running mapping functions in the sandbox, and have allowed users to call third-party libraries.\n\nplease note this is an experimental feature and you may encounter bugs or issues that may negatively impact your mapping functions. please report any bugs you find by creating an issue in github.\n\n\n# built-in modules\n\ncurrently, we allow the following nodejs modules: assert, buffer, crypto, util, and path.\n\nrather than importing the whole module, we recommend only importing the required method(s) that you need. some methods in these modules may have dependencies that are unsupported and will fail on import.\n\nimport {hashmessage} from "ethers/lib/utils"; //good way\nimport {utils} from "ethers" //bad way\n\nexport async function handlecall(extrinsic: substrateextrinsic): promise<void> {\n    const record = new starterentity(extrinsic.block.block.header.hash.tostring());\n    record.field1 = hashmessage(\'hello\');\n    await record.save();\n}\n\n\n\n# third-party libraries\n\ndue to the limitations of the virtual machine in our sandbox, currently, we only support third-party libraries written by commonjs.\n\nwe also support a hybrid library like @polkadot/* that uses esm as default. however, if any other libraries depend on any modules in esm format, the virtual machine will not compile and return an error.\n\n\n# custom substrate chains\n\nsubquery can be used on any substrate-based chain, not just polkadot or kusama.\n\nyou can use a custom substrate-based chain and we provide tools to import types, interfaces, and additional methods automatically using @polkadot/typegen.\n\nin the following sections, we use our kitty example to explain the integration process.\n\n\n# preparation\n\ncreate a new directory api-interfaces under the project src folder to store all required and generated files. we also create an api-interfaces/kitties directory as we want to add decoration in the api from the kitties module.\n\n# metadata\n\nwe need metadata to generate the actual api endpoints. in the kitty example, we use an endpoint from a local testnet, and it provides additional types. follow the steps in polkadotjs metadata setup to retrieve a node\'s metadata from its http endpoint.\n\ncurl -h "content-type: application/json" -d \'{"id":"1", "jsonrpc":"2.0", "method": "state_getmetadata", "params":[]}\' http://localhost:9933\n\n\nor from its websocket endpoint with help from websocat:\n\n//install the websocat\nbrew install websocat\n\n//get metadata\necho state_getmetadata | websocat \'ws://127.0.0.1:9944\' --jsonrpc\n\n\nnext, copy and paste the output to a json file. in our kitty example, we have created api-interface/kitty.json.\n\n# type definitions\n\nwe assume that the user knows the specific types and rpc support from the chain, and it is defined in the manifest.\n\nfollowing types setup, we create :\n\n * src/api-interfaces/definitions.ts - this exports all the sub-folder definitions\n\nexport { default as kitties } from \'./kitties/definitions\';\n\n\n * src/api-interfaces/kitties/definitions.ts - type definitions for the kitties module\n\nexport default {\n    // custom types\n    types: {\n        address: "accountid",\n        lookupsource: "accountid",\n        kittyindex: "u32",\n        kitty: "[u8; 16]"\n    },\n    // custom rpc : api.rpc.kitties.getkittyprice\n    rpc: {\n        getkittyprice:{\n            description: \'get kitty price\',\n            params: [\n                {\n                    name: \'at\',\n                    type: \'blockhash\',\n                    ishistoric: true,\n                    isoptional: false\n                },\n                {\n                    name: \'kittyindex\',\n                    type: \'kittyindex\',\n                    isoptional: false\n                }\n            ],\n            type: \'balance\'\n        }\n    }\n}\n\n\n# packages\n\n * in the package.json file, make sure to add @polkadot/typegen as a development dependency and @polkadot/api as a regular dependency (ideally the same version). we also need ts-node as a development dependency to help us run the scripts.\n * we add scripts to run both types; generate:defs and metadata generate:meta generators (in that order, so metadata can use the types).\n\nhere is a simplified version of package.json. make sure in the scripts section the package name is correct and the directories are valid.\n\n{\n  "name": "kitty-birthinfo",\n  "scripts": {\n    "generate:defs": "ts-node --skip-project node_modules/.bin/polkadot-types-from-defs --package kitty-birthinfo/api-interfaces --input ./src/api-interfaces",\n    "generate:meta": "ts-node --skip-project node_modules/.bin/polkadot-types-from-chain --package kitty-birthinfo/api-interfaces --endpoint ./src/api-interfaces/kitty.json --output ./src/api-interfaces --strict"\n  },\n  "dependencies": {\n    "@polkadot/api": "^4.9.2"\n  },\n  "devdependencies": {\n    "typescript": "^4.1.3",\n    "@polkadot/typegen": "^4.9.2",\n    "ts-node": "^8.6.2"\n  }\n}\n\n\n\n# type generation\n\nnow that preparation is completed, we are ready to generate types and metadata. run the commands below:\n\n# yarn to install new dependencies\nyarn\n\n# generate types\nyarn generate:defs\n\n\nin each modules folder (eg /kitties), there should now be a generated types.ts that defines all interfaces from this modules\' definitions, also a file index.ts that exports them all.\n\n# generate metadata\nyarn generate:meta\n\n\nthis command will generate the metadata and a new api-augment for the apis. as we don\'t want to use the built-in api, we will need to replace them by adding an explicit override in our tsconfig.json. after the updates, the paths in the config will look like this (without the comments):\n\n{\n  "compileroptions": {\n      // this is the package name we use (in the interface imports, --package for generators) */\n      "kitty-birthinfo/*": ["src/*"],\n      // here we replace the @polkadot/api augmentation with our own, generated from chain\n      "@polkadot/api/augment": ["src/interfaces/augment-api.ts"],\n      // replace the augmented types with our own, as generated from definitions\n      "@polkadot/types/augment": ["src/interfaces/augment-types.ts"]\n    }\n}\n\n\n\n# usage\n\nnow in the mapping function, we can show how the metadata and types actually decorate the api. the rpc endpoint will support the modules and methods we declared above.\n\nexport async function kittyapihandler(): promise<void> {\n    //return the kittyindex type\n    const nextkittyid = await api.query.kitties.nextkittyid();\n    // return the kitty type, input parameters types are accountid and kittyindex\n    const allkitties  = await api.query.kitties.kitties(\'xxxxxxxxx\',123)\n    logger.info(`next kitty id ${nextkittyid}`)\n    //custom rpc, set undefined to blockhash\n    const kittyprice = await api.rpc.kitties.getkittyprice(undefined,nextkittyid);\n}\n\n\nif you wish to publish this project to our explorer, please include the generated files in src/api-interfaces.',charsets:{cjk:!0}},{title:"Frequently Asked Questions",frontmatter:{},regularPath:"/faqs/faqs.html",relativePath:"faqs/faqs.md",key:"v-1265970d",path:"/faqs/faqs.html",headers:[{level:2,title:"What is SubQuery?",slug:"what-is-subquery",normalizedTitle:"what is subquery?",charIndex:33},{level:2,title:"What is the best way to get started with SubQuery?",slug:"what-is-the-best-way-to-get-started-with-subquery",normalizedTitle:"what is the best way to get started with subquery?",charIndex:384},{level:2,title:"How can I contribute or give feedback to SubQuery?",slug:"how-can-i-contribute-or-give-feedback-to-subquery",normalizedTitle:"how can i contribute or give feedback to subquery?",charIndex:699},{level:2,title:"How much does it cost to host my project in SubQuery Projects?",slug:"how-much-does-it-cost-to-host-my-project-in-subquery-projects",normalizedTitle:"how much does it cost to host my project in subquery projects?",charIndex:1094},{level:2,title:"What are deployment slots?",slug:"what-are-deployment-slots",normalizedTitle:"what are deployment slots?",charIndex:1378},{level:2,title:"What is the advantage of a staging slot?",slug:"what-is-the-advantage-of-a-staging-slot",normalizedTitle:"what is the advantage of a staging slot?",charIndex:2061}],lastUpdated:"8/2/2021, 10:56:41 PM",headersStr:"What is SubQuery? What is the best way to get started with SubQuery? How can I contribute or give feedback to SubQuery? How much does it cost to host my project in SubQuery Projects? What are deployment slots? What is the advantage of a staging slot?",content:"# Frequently Asked Questions\n\n\n# What is SubQuery?\n\nSubQuery is an open source project that allows developers to index, transform, and query Substrate chain data to power their applications.\n\nSubQuery also provides free, production grade hosting of projects for developers removing the responsiblity of manging infrastructure, and letting developers do what they do best - build.\n\n\n# What is the best way to get started with SubQuery?\n\nThe best way to get started with SubQuery is to try out our Hello World tutorial. This is a simple 5 min walk through of downloading the starter template, building the project, and then using Docker to run a node on your localhost and running a simple query.\n\n\n# How can I contribute or give feedback to SubQuery?\n\nWe love contributions and feedback from the community. To contribute code, fork the repository of interest and make your changes. Then submit a PR or Pull Request. Oh, don't forget to test as well! Also check out our contributions guide lines (TBA).\n\nTo give feedback, contact us at hello@subquery.network or jump onto our discord channel\n\n\n# How much does it cost to host my project in SubQuery Projects?\n\nHosting your project in SubQuery Projects is absolutely free - it's is our way of giving back to the community. To learn how to host your project with us, please check out the Hello World (SubQuery hosted) tutorial.\n\n\n# What are deployment slots?\n\nDeployment slots are a feature in SubQuery Projects that is the equivalent of a development environment. For example, in any software organisation there is normally a development environment and a production environment as a minimum (ignoring localhost that is). Typically additional environments such as staging and pre-prod or even QA are included depending on the needs of the organisation and their development set up.\n\nSubQuery currently has two slots available. A staging slot and a production slot. This allows developers to deploy their SubQuery to the staging environment and all going well, \"promote to production\" at the click of a button.\n\n\n# What is the advantage of a staging slot?\n\nThe main benefit of using a staging slot is that it allows you to prepare a new release of your SubQuery project without exposing it publicly. You can wait for the staging slot to reindex all data without affecting your production applications.\n\nThe staging slot is not shown to the public in the Explorer and has a unique URL that is visible only to you. And of course, the separate environment allows you to test your new code without affecting production.\n\n\n# What are extrinsics?\n\nAn extrinsic is a piece of information that comes from outside the chain and is included in a block. There are three categories of extrinsics. They are inherents, signed transactions, and unsigned transactions.\n\nInherent extrinsics are pieces of information that are not signed and only inserted into a block by the block author.\n\nSigned transaction extrinsics are transactions that contain a signature of the account that issued the transaction. They stands to pay a fee to have the transaction included on chain.\n\nUnsigned transactions extrinsics are transactions that do not contain a signature of the account that issued the transaction. Unsigned transactions extrinsics should be used with care because there is nobody paying a fee, becaused it is signed. Because of this, the transaction queue lacks economic logic to prevent spam.\n\nFor more information, click here.",normalizedContent:"# frequently asked questions\n\n\n# what is subquery?\n\nsubquery is an open source project that allows developers to index, transform, and query substrate chain data to power their applications.\n\nsubquery also provides free, production grade hosting of projects for developers removing the responsiblity of manging infrastructure, and letting developers do what they do best - build.\n\n\n# what is the best way to get started with subquery?\n\nthe best way to get started with subquery is to try out our hello world tutorial. this is a simple 5 min walk through of downloading the starter template, building the project, and then using docker to run a node on your localhost and running a simple query.\n\n\n# how can i contribute or give feedback to subquery?\n\nwe love contributions and feedback from the community. to contribute code, fork the repository of interest and make your changes. then submit a pr or pull request. oh, don't forget to test as well! also check out our contributions guide lines (tba).\n\nto give feedback, contact us at hello@subquery.network or jump onto our discord channel\n\n\n# how much does it cost to host my project in subquery projects?\n\nhosting your project in subquery projects is absolutely free - it's is our way of giving back to the community. to learn how to host your project with us, please check out the hello world (subquery hosted) tutorial.\n\n\n# what are deployment slots?\n\ndeployment slots are a feature in subquery projects that is the equivalent of a development environment. for example, in any software organisation there is normally a development environment and a production environment as a minimum (ignoring localhost that is). typically additional environments such as staging and pre-prod or even qa are included depending on the needs of the organisation and their development set up.\n\nsubquery currently has two slots available. a staging slot and a production slot. this allows developers to deploy their subquery to the staging environment and all going well, \"promote to production\" at the click of a button.\n\n\n# what is the advantage of a staging slot?\n\nthe main benefit of using a staging slot is that it allows you to prepare a new release of your subquery project without exposing it publicly. you can wait for the staging slot to reindex all data without affecting your production applications.\n\nthe staging slot is not shown to the public in the explorer and has a unique url that is visible only to you. and of course, the separate environment allows you to test your new code without affecting production.\n\n\n# what are extrinsics?\n\nan extrinsic is a piece of information that comes from outside the chain and is included in a block. there are three categories of extrinsics. they are inherents, signed transactions, and unsigned transactions.\n\ninherent extrinsics are pieces of information that are not signed and only inserted into a block by the block author.\n\nsigned transaction extrinsics are transactions that contain a signature of the account that issued the transaction. they stands to pay a fee to have the transaction included on chain.\n\nunsigned transactions extrinsics are transactions that do not contain a signature of the account that issued the transaction. unsigned transactions extrinsics should be used with care because there is nobody paying a fee, becaused it is signed. because of this, the transaction queue lacks economic logic to prevent spam.\n\nfor more information, click here.",charsets:{}},{title:"Installing SubQuery",frontmatter:{},regularPath:"/install/install.html",relativePath:"install/install.md",key:"v-2680104d",path:"/install/install.html",headers:[{level:2,title:"Install @subql/cli",slug:"install-subql-cli",normalizedTitle:"install @subql/cli",charIndex:214},{level:2,title:"Install @subql/node",slug:"install-subql-node",normalizedTitle:"install @subql/node",charIndex:582},{level:2,title:"Install @subql/query",slug:"install-subql-query",normalizedTitle:"install @subql/query",charIndex:1183}],lastUpdated:"8/2/2021, 10:56:41 PM",headersStr:"Install @subql/cli Install @subql/node Install @subql/query",content:'# Installing SubQuery\n\nThere are various components required when creating a SubQuery project. The @subql/node component is required to run an indexer. The @subql/query library is required to generate queries.\n\n\n# Install @subql/cli\n\nThe @subql/cli library helps to create a project framework or scaffold meaning you don\'t have to start from scratch.\n\nInstall SubQuery CLI globally on your terminal by using Yarn or NPM:\n\n# Yarn\nyarn global add @subql/cli\n\n# NPM\nnpm install -g @subql/cli\n\n\nYou can then run help to see available commands and usage provide by CLI:\n\nsubql help\n\n\n\n# Install @subql/node\n\nA SubQuery node is an implementation that extracts substrate-based blockchain data per the SubQuery project and saves it into a Postgres database.\n\nInstall SubQuery node globally on your terminal by using Yarn or NPM:\n\n# Yarn\nyarn global add @subql/node\n\n# NPM\nnpm install -g @subql/node\n\n\nOnce installed, you can can start a node with:\n\nsubql-node <command>\n\n\n> Note: If you are using Docker or hosting your project in SubQuery Projects, you do can skip this step. This is because the SubQuery node is already provided in the Docker container and the hosting infrastructure.\n\n\n# Install @subql/query\n\nThe SubQuery query library provides a service that allows you to query your project in a "playground" environment via your browser.\n\nInstall SubQuery query globally on your terminal by using Yarn or NPM:\n\n# Yarn\nyarn global add @subql/query\n\n# NPM\nnpm install -g @subql/query\n\n\n> Note: If you are using Docker or hosting your project in SubQuery Projects, you do can skip this step also. This is because the SubQuery node is already provided in the Docker container and the hosting infrastructure.',normalizedContent:'# installing subquery\n\nthere are various components required when creating a subquery project. the @subql/node component is required to run an indexer. the @subql/query library is required to generate queries.\n\n\n# install @subql/cli\n\nthe @subql/cli library helps to create a project framework or scaffold meaning you don\'t have to start from scratch.\n\ninstall subquery cli globally on your terminal by using yarn or npm:\n\n# yarn\nyarn global add @subql/cli\n\n# npm\nnpm install -g @subql/cli\n\n\nyou can then run help to see available commands and usage provide by cli:\n\nsubql help\n\n\n\n# install @subql/node\n\na subquery node is an implementation that extracts substrate-based blockchain data per the subquery project and saves it into a postgres database.\n\ninstall subquery node globally on your terminal by using yarn or npm:\n\n# yarn\nyarn global add @subql/node\n\n# npm\nnpm install -g @subql/node\n\n\nonce installed, you can can start a node with:\n\nsubql-node <command>\n\n\n> note: if you are using docker or hosting your project in subquery projects, you do can skip this step. this is because the subquery node is already provided in the docker container and the hosting infrastructure.\n\n\n# install @subql/query\n\nthe subquery query library provides a service that allows you to query your project in a "playground" environment via your browser.\n\ninstall subquery query globally on your terminal by using yarn or npm:\n\n# yarn\nyarn global add @subql/query\n\n# npm\nnpm install -g @subql/query\n\n\n> note: if you are using docker or hosting your project in subquery projects, you do can skip this step also. this is because the subquery node is already provided in the docker container and the hosting infrastructure.',charsets:{}},{title:"Ambassador Program",frontmatter:{},regularPath:"/miscellaneous/ambassadors.html",relativePath:"miscellaneous/ambassadors.md",key:"v-ae40a866",path:"/miscellaneous/ambassadors.html",headers:[{level:2,title:"What we Believe In",slug:"what-we-believe-in",normalizedTitle:"what we believe in",charIndex:208},{level:2,title:"Our Ambassador Program",slug:"our-ambassador-program",normalizedTitle:"our ambassador program",charIndex:1327},{level:3,title:"Ambassador Benefits",slug:"ambassador-benefits",normalizedTitle:"ambassador benefits",charIndex:1663},{level:2,title:"How does it work",slug:"how-does-it-work",normalizedTitle:"how does it work",charIndex:2855},{level:2,title:"Ambassador Activities",slug:"ambassador-activities",normalizedTitle:"ambassador activities",charIndex:3770}],lastUpdated:"8/2/2021, 10:56:41 PM",headersStr:"What we Believe In Our Ambassador Program Ambassador Benefits How does it work Ambassador Activities",content:"# Ambassador Program\n\n\n\nWe understand that one of our biggest strengths is our community, and with your help, we want to grow and establish local ambassadors for communities around the world.\n\nApply Now!\n\n\n# What we Believe In\n\nOur team came together with the shared vision to build the foundations of a flexible and inclusive data service for the Polkadot ecosystem.\n\nBuilt by developers, for developers: SubQuery is a growing community that focuses on providing the best products and services for our developers, and builders in our ecosystem. SubQuery is only successful if the Polkadot ecosystem is successful, and so everything we do is with our customers in mind.\n\nIntegrity and Accountability: We have team members in Auckland, Shanghai, and Sydney so remote work is important to us. We expect that our team is empowered and works autonomously together to achieve our goals. A key requirement for this is for our team to be accountable for their actions and maintain their integrity.\n\nInclusive Guidance and Support: Blockchain is hard, and everyone needs help sometimes. There is no such thing as a stupid question in our community and everyone in our team is expected to help support our users. We learn some of the most valuable insights about our service (and how we can improve it) directly from our community.\n\n\n# Our Ambassador Program\n\nOur SubQuery Ambassador program aims to find community leaders passionate about Polkadot and SubQuery. We’re looking for self-starters that can spread the word about SubQuery in their local areas and provide support to new developers that want to use SubQuery to build amazing apps and services on Polkadot.\n\n\n# Ambassador Benefits\n\nAt SubQuery, we work hard to achieve what we do. Similarly, Ambassadors are expected to commit some time when joining our team but will be rewarded with benefits.\n\nFunding and Support: You may be rewarded for good work with early opportunities into private sales and bounties. Additionally, we’ll be providing funding grants for you to run community meetups.\n\nSubQuery Team Access: You’ll have direct access to the core SubQuery team with opportunities for hands-on training, exclusive AMAs with our leaders and developers, and insight into our roadmap.\n\nNetwork Development: Expect to grow your professional network by being an Ambassador for one of the top Polkadot projects. Meet other ambassadors around the world and receive introductions to local Polkadot projects that we need to support locally. You might even get free entry to represent SubQuery in events in your local area.\n\nSwag and other free stuff: Everyone likes free stuff! Receive an annual allocation of SubQuery swag that’ll make you stand out in the crowd. Plus additional allocation that you can share around at community events. You’ll also receive an exclusive NFT for your Ambassador status.\n\n\n# How does it work\n\nOur Ambassador program has multiple tiers, each tier has different benefits and capabilities. You can move up tiers by participating in Ambassador activities and working hard for us.\n\nOnce you have sent through an application, we will select candidates that align with our values. If selected you are placed in our trainee program and will receive an information package, expanding your understanding of SubQuery. After this, you can start to work through the trainee program by completing certain onboarding tasks (e.g. creating a SubQuery Project). We will host workshops throughout this process to support you.\n\nOnce you pass the trainee program, you can call yourself a SubQuery ambassador and will be accepted into our full program. From here on you can continue to work through the program and progress up the tiers, earning more rewards and benefits as you climb the ranks.\n\nApply Now!\n\n\n# Ambassador Activities\n\nSubQuery Ambassadors are able to contribute through four main areas, including event management, content creation, translation, and community moderation. You can participate in as many areas as you want, you’re not bound to any single one.\n\nEvent Management: Build local communities by hosting, organising, and managing different events. Building a local community will be a key part of growing the SubQuery community. SubQuery will support you by providing funding for events, sending swag/merchandise to be given away, as well as attending Q&As or online events as speakers or in AMA sessions.\n\nContent Creation: We have a long list of content and support material that we need help creating. Remember, our success relies on the ability of our customers to build amazing things on our service, so we need your help to make that easier. Content includes videos, infographics, tutorials, animations, or any other related material, to inform, educate, or inspire community members within the SubQuery Ecosystem. SubQuery will support Content Creators by providing branding assets and expertise. We’ll also use SubQuery’s marketing channels to increase awareness of your content (and yourself).\n\nTranslation: Our customers don’t just speak English! We need your help making SubQuery more accessible by translating our content into your own language, as well as helping sharing the word to our international community.\n\nCommunity Moderation: Moderators will help grow the SubQuery community by ensuring that official community channels are active and engaging. SubQuery will support Moderators by promoting the channels that they monitor, as well as provide guidelines for our expectations.\n\nApply Now!",normalizedContent:"# ambassador program\n\n\n\nwe understand that one of our biggest strengths is our community, and with your help, we want to grow and establish local ambassadors for communities around the world.\n\napply now!\n\n\n# what we believe in\n\nour team came together with the shared vision to build the foundations of a flexible and inclusive data service for the polkadot ecosystem.\n\nbuilt by developers, for developers: subquery is a growing community that focuses on providing the best products and services for our developers, and builders in our ecosystem. subquery is only successful if the polkadot ecosystem is successful, and so everything we do is with our customers in mind.\n\nintegrity and accountability: we have team members in auckland, shanghai, and sydney so remote work is important to us. we expect that our team is empowered and works autonomously together to achieve our goals. a key requirement for this is for our team to be accountable for their actions and maintain their integrity.\n\ninclusive guidance and support: blockchain is hard, and everyone needs help sometimes. there is no such thing as a stupid question in our community and everyone in our team is expected to help support our users. we learn some of the most valuable insights about our service (and how we can improve it) directly from our community.\n\n\n# our ambassador program\n\nour subquery ambassador program aims to find community leaders passionate about polkadot and subquery. we’re looking for self-starters that can spread the word about subquery in their local areas and provide support to new developers that want to use subquery to build amazing apps and services on polkadot.\n\n\n# ambassador benefits\n\nat subquery, we work hard to achieve what we do. similarly, ambassadors are expected to commit some time when joining our team but will be rewarded with benefits.\n\nfunding and support: you may be rewarded for good work with early opportunities into private sales and bounties. additionally, we’ll be providing funding grants for you to run community meetups.\n\nsubquery team access: you’ll have direct access to the core subquery team with opportunities for hands-on training, exclusive amas with our leaders and developers, and insight into our roadmap.\n\nnetwork development: expect to grow your professional network by being an ambassador for one of the top polkadot projects. meet other ambassadors around the world and receive introductions to local polkadot projects that we need to support locally. you might even get free entry to represent subquery in events in your local area.\n\nswag and other free stuff: everyone likes free stuff! receive an annual allocation of subquery swag that’ll make you stand out in the crowd. plus additional allocation that you can share around at community events. you’ll also receive an exclusive nft for your ambassador status.\n\n\n# how does it work\n\nour ambassador program has multiple tiers, each tier has different benefits and capabilities. you can move up tiers by participating in ambassador activities and working hard for us.\n\nonce you have sent through an application, we will select candidates that align with our values. if selected you are placed in our trainee program and will receive an information package, expanding your understanding of subquery. after this, you can start to work through the trainee program by completing certain onboarding tasks (e.g. creating a subquery project). we will host workshops throughout this process to support you.\n\nonce you pass the trainee program, you can call yourself a subquery ambassador and will be accepted into our full program. from here on you can continue to work through the program and progress up the tiers, earning more rewards and benefits as you climb the ranks.\n\napply now!\n\n\n# ambassador activities\n\nsubquery ambassadors are able to contribute through four main areas, including event management, content creation, translation, and community moderation. you can participate in as many areas as you want, you’re not bound to any single one.\n\nevent management: build local communities by hosting, organising, and managing different events. building a local community will be a key part of growing the subquery community. subquery will support you by providing funding for events, sending swag/merchandise to be given away, as well as attending q&as or online events as speakers or in ama sessions.\n\ncontent creation: we have a long list of content and support material that we need help creating. remember, our success relies on the ability of our customers to build amazing things on our service, so we need your help to make that easier. content includes videos, infographics, tutorials, animations, or any other related material, to inform, educate, or inspire community members within the subquery ecosystem. subquery will support content creators by providing branding assets and expertise. we’ll also use subquery’s marketing channels to increase awareness of your content (and yourself).\n\ntranslation: our customers don’t just speak english! we need your help making subquery more accessible by translating our content into your own language, as well as helping sharing the word to our international community.\n\ncommunity moderation: moderators will help grow the subquery community by ensuring that official community channels are active and engaging. subquery will support moderators by promoting the channels that they monitor, as well as provide guidelines for our expectations.\n\napply now!",charsets:{}},{title:"Branding Materials",frontmatter:{},regularPath:"/miscellaneous/branding.html",relativePath:"miscellaneous/branding.md",key:"v-a45391be",path:"/miscellaneous/branding.html",headers:[{level:2,title:"Exportable Figma File",slug:"exportable-figma-file",normalizedTitle:"exportable figma file",charIndex:319},{level:2,title:"Brand Assets Package",slug:"brand-assets-package",normalizedTitle:"brand assets package",charIndex:486}],lastUpdated:"8/2/2021, 10:56:41 PM",headersStr:"Exportable Figma File Brand Assets Package",content:"# Branding Materials\n\nAll of SubQuery’s brand features are proprietary and we take our brand extremely seriously.\n\nIf you opt to use any trademarks, logos, designs, or other brand features, please carefully follow the guidelines here or reach out to us via social media for clarification.\n\nIf in doubt, please ask!\n\n\n# Exportable Figma File\n\nOur Figma file has a full collection of all brand assets (logos, fonts, colours, imagery etc) for export.\n\nFigma - SubQuery Brand Resources\n\n\n# Brand Assets Package\n\nA smaller ZIP package of brand assets\n\npublic_branding.zip",normalizedContent:"# branding materials\n\nall of subquery’s brand features are proprietary and we take our brand extremely seriously.\n\nif you opt to use any trademarks, logos, designs, or other brand features, please carefully follow the guidelines here or reach out to us via social media for clarification.\n\nif in doubt, please ask!\n\n\n# exportable figma file\n\nour figma file has a full collection of all brand assets (logos, fonts, colours, imagery etc) for export.\n\nfigma - subquery brand resources\n\n\n# brand assets package\n\na smaller zip package of brand assets\n\npublic_branding.zip",charsets:{}},{title:"Contributing To SubQuery",frontmatter:{},regularPath:"/miscellaneous/contributing.html",relativePath:"miscellaneous/contributing.md",key:"v-6d299e43",path:"/miscellaneous/contributing.html",headers:[{level:2,title:"Code of Conduct",slug:"code-of-conduct",normalizedTitle:"code of conduct",charIndex:873},{level:2,title:"Getting started",slug:"getting-started",normalizedTitle:"getting started",charIndex:1136},{level:2,title:"How to Contribute",slug:"how-to-contribute",normalizedTitle:"how to contribute",charIndex:1619},{level:3,title:"Reporting Bugs",slug:"reporting-bugs",normalizedTitle:"reporting bugs",charIndex:1641},{level:3,title:"Submitting Pull Requests",slug:"submitting-pull-requests",normalizedTitle:"submitting pull requests",charIndex:2108},{level:2,title:"Coding Conventions",slug:"coding-conventions",normalizedTitle:"coding conventions",charIndex:2510},{level:3,title:"Git Commit Messages",slug:"git-commit-messages",normalizedTitle:"git commit messages",charIndex:2533},{level:3,title:"JavaScript Styleguide",slug:"javascript-styleguide",normalizedTitle:"javascript styleguide",charIndex:2742}],lastUpdated:"8/2/2021, 10:56:41 PM",headersStr:"Code of Conduct Getting started How to Contribute Reporting Bugs Submitting Pull Requests Coding Conventions Git Commit Messages JavaScript Styleguide",content:'# Contributing To SubQuery\n\nWelcome and a big thank you for considering contributing to this SubQuery project! Together we can pave the way to a more decentralised future.\n\n> This documentation is actively maintained by the SubQuery team. We welcome your contributions, you can do so by forking our GitHub project and making changes to all the documentation markdown files under the docs directory.\n\nWhat follows is a set of guidelines (not rules) for contributing to SubQuery. Following these guidelines will help us make the contribution process easy and effective for everyone involved. It also communicates that you agree to respect the time of the developers managing and developing this project. In return, we will reciprocate that respect by addressing your issue, considering changes, collaborating on improvements, and helping you finalise your pull requests.\n\n\n# Code of Conduct\n\nWe take our open source community projects and responsibility seriously and hold ourselves and other contributors to high standards of communication. By participating and contributing to this project, you agree to uphold our Code of Conduct.\n\n\n# Getting started\n\nContributions to our repositories are made through Issues and Pull Requests (PRs). A few general guidelines that cover both:\n\n * Search for existing Issues and PRs before creating your own.\n * We work hard to makes sure issues are handled in promptly but, depending on the impact, it could take a while to investigate the root cause. A friendly @ mention in the comment thread to the submitter or a contributor can help draw attention if your issue is blocking.\n\n\n# How to Contribute\n\n\n# Reporting Bugs\n\nBugs are tracked as GitHub issues. When logging an issue, explain the problem and include additional details to help maintainers reproduce the problem:\n\n * Use a clear and descriptive title for the issue to identify the problem.\n * Describe the exact steps to reproduce the problem.\n * Describe the behavior you observed after following the steps.\n * Explain which behavior you expected to see instead and why.\n * Include screenshots if possible.\n\n\n# Submitting Pull Requests\n\nIn general, we follow the "fork-and-pull" Git workflow\n\n * Fork the repository to your own Github account\n * Clone the project to your machine\n * Create a branch locally with a succinct but descriptive name\n * Commit changes to the branch\n * Following any formatting and testing guidelines specific to this repo\n * Push changes to your fork\n * Open a PR in our repository\n\n\n# Coding Conventions\n\n\n# Git Commit Messages\n\n * Use the present tense ("Add feature" not "Added feature")\n * Use the imperative mood ("Move cursor to..." not "Moves cursor to...")\n * Limit the first line to 72 characters or less\n\n\n# JavaScript Styleguide\n\n * All JavaScript code is linted with Prettier and ESLint',normalizedContent:'# contributing to subquery\n\nwelcome and a big thank you for considering contributing to this subquery project! together we can pave the way to a more decentralised future.\n\n> this documentation is actively maintained by the subquery team. we welcome your contributions, you can do so by forking our github project and making changes to all the documentation markdown files under the docs directory.\n\nwhat follows is a set of guidelines (not rules) for contributing to subquery. following these guidelines will help us make the contribution process easy and effective for everyone involved. it also communicates that you agree to respect the time of the developers managing and developing this project. in return, we will reciprocate that respect by addressing your issue, considering changes, collaborating on improvements, and helping you finalise your pull requests.\n\n\n# code of conduct\n\nwe take our open source community projects and responsibility seriously and hold ourselves and other contributors to high standards of communication. by participating and contributing to this project, you agree to uphold our code of conduct.\n\n\n# getting started\n\ncontributions to our repositories are made through issues and pull requests (prs). a few general guidelines that cover both:\n\n * search for existing issues and prs before creating your own.\n * we work hard to makes sure issues are handled in promptly but, depending on the impact, it could take a while to investigate the root cause. a friendly @ mention in the comment thread to the submitter or a contributor can help draw attention if your issue is blocking.\n\n\n# how to contribute\n\n\n# reporting bugs\n\nbugs are tracked as github issues. when logging an issue, explain the problem and include additional details to help maintainers reproduce the problem:\n\n * use a clear and descriptive title for the issue to identify the problem.\n * describe the exact steps to reproduce the problem.\n * describe the behavior you observed after following the steps.\n * explain which behavior you expected to see instead and why.\n * include screenshots if possible.\n\n\n# submitting pull requests\n\nin general, we follow the "fork-and-pull" git workflow\n\n * fork the repository to your own github account\n * clone the project to your machine\n * create a branch locally with a succinct but descriptive name\n * commit changes to the branch\n * following any formatting and testing guidelines specific to this repo\n * push changes to your fork\n * open a pr in our repository\n\n\n# coding conventions\n\n\n# git commit messages\n\n * use the present tense ("add feature" not "added feature")\n * use the imperative mood ("move cursor to..." not "moves cursor to...")\n * limit the first line to 72 characters or less\n\n\n# javascript styleguide\n\n * all javascript code is linted with prettier and eslint',charsets:{}},{title:"Social Media Links",frontmatter:{},regularPath:"/miscellaneous/social_media.html",relativePath:"miscellaneous/social_media.md",key:"v-034044f3",path:"/miscellaneous/social_media.html",headers:[{level:2,title:"Official SubQuery Communities",slug:"official-subquery-communities",normalizedTitle:"official subquery communities",charIndex:280},{level:2,title:"Unofficial SubQuery Communities",slug:"unofficial-subquery-communities",normalizedTitle:"unofficial subquery communities",charIndex:529}],lastUpdated:"8/2/2021, 10:56:41 PM",headersStr:"Official SubQuery Communities Unofficial SubQuery Communities",content:"# Social Media Links\n\nSubQuery is an active project that maintains and communicates with our followers through many social media channels.\n\nIt is our aim to always listen and engage with our loyal community so please join the conversation and send us your ideas or questions!\n\n\n# Official SubQuery Communities\n\n * Discord (Primary Community with dedicated technical support channels)\n * Medium (Primary announcements channel)\n * Twitter\n * WeChat\n * Telegram (Announcements channel only)\n * GitHub\n * Matrix/Riot\n * LinkedIn\n\n\n# Unofficial SubQuery Communities\n\nThese communities are not moderated by the SubQuery team, but our ambassadors may be there to provide support. Please be careful of scams as SubQuery is not responsible for what happens within them.",normalizedContent:"# social media links\n\nsubquery is an active project that maintains and communicates with our followers through many social media channels.\n\nit is our aim to always listen and engage with our loyal community so please join the conversation and send us your ideas or questions!\n\n\n# official subquery communities\n\n * discord (primary community with dedicated technical support channels)\n * medium (primary announcements channel)\n * twitter\n * wechat\n * telegram (announcements channel only)\n * github\n * matrix/riot\n * linkedin\n\n\n# unofficial subquery communities\n\nthese communities are not moderated by the subquery team, but our ambassadors may be there to provide support. please be careful of scams as subquery is not responsible for what happens within them.",charsets:{}},{title:"Connect to your New Project",frontmatter:{},regularPath:"/publish/connect.html",relativePath:"publish/connect.md",key:"v-b6710da6",path:"/publish/connect.html",lastUpdated:"8/2/2021, 10:56:41 PM",headersStr:null,content:"# Connect to your New Project\n\nOnce your deployment has succesfully completed and our nodes have indexed your data from the chain, you'll be able to connect to your project via the displayed Query endpoint.\n\n\n\nAlternatively, you can click on the three dots next to the title of your project, and view it on SubQuery Explorer. There you can use the in browser playground to get started.\n\n\n\n\n# Learn more about GraphQL\n\nYou can follow the official GraphQL guide here to learn more about GraphQL, how it works, and how to use it:\n\n * There are libraries to help you implement GraphQL in many different languages\n * For an in-depth learning experience with practical tutorials, see How to GraphQL.\n * Check out the free online course, Exploring GraphQL: A Query Language for APIs.",normalizedContent:"# connect to your new project\n\nonce your deployment has succesfully completed and our nodes have indexed your data from the chain, you'll be able to connect to your project via the displayed query endpoint.\n\n\n\nalternatively, you can click on the three dots next to the title of your project, and view it on subquery explorer. there you can use the in browser playground to get started.\n\n\n\n\n# learn more about graphql\n\nyou can follow the official graphql guide here to learn more about graphql, how it works, and how to use it:\n\n * there are libraries to help you implement graphql in many different languages\n * for an in-depth learning experience with practical tutorials, see how to graphql.\n * check out the free online course, exploring graphql: a query language for apis.",charsets:{}},{title:"Publish your SubQuery Project",frontmatter:{},regularPath:"/publish/publish.html",relativePath:"publish/publish.md",key:"v-529f2d66",path:"/publish/publish.html",headers:[{level:2,title:"Benefits of hosting your project with SubQuery",slug:"benefits-of-hosting-your-project-with-subquery",normalizedTitle:"benefits of hosting your project with subquery",charIndex:36},{level:2,title:"Create your First Project",slug:"create-your-first-project",normalizedTitle:"create your first project",charIndex:505},{level:4,title:"Login to SubQuery Projects",slug:"login-to-subquery-projects",normalizedTitle:"login to subquery projects",charIndex:534},{level:4,title:"Create your First Project",slug:"create-your-first-project-2",normalizedTitle:"create your first project",charIndex:505},{level:4,title:"Deploy your first Version",slug:"deploy-your-first-version",normalizedTitle:"deploy your first version",charIndex:2255},{level:2,title:"Next Steps - Connect to your Project",slug:"next-steps-connect-to-your-project",normalizedTitle:"next steps - connect to your project",charIndex:3326}],lastUpdated:"8/2/2021, 10:56:41 PM",headersStr:"Benefits of hosting your project with SubQuery Create your First Project Login to SubQuery Projects Create your First Project Deploy your first Version Next Steps - Connect to your Project",content:"# Publish your SubQuery Project\n\n\n# Benefits of hosting your project with SubQuery\n\n * We'll run your SubQuery projects for you in a high performance, scalable, and managed public service\n * This service is being provided to the community for free!\n * You can make your projects public so that they'll be listed in the SubQuery Explorer and anyone around the world can view them\n * We're integrated with GitHub, so anyone in your GitHub organisations will be able to view shared organisation projects\n\n\n# Create your First Project\n\n# Login to SubQuery Projects\n\nBefore starting, please make sure that your SubQuery project is online in a public GitHub repository. The schema.graphql file must be in the root of your directory.\n\nTo create your first project, head to project.subquery.network. You'll need to connect with your GitHub account to login.\n\n\n\nSubQuery Projects is where you manage all your hosted projects uploaded to the SubQuery platform. You can create, delete, and even upgrade projects all from this application. If you have a GitHub organisations accounts connected, you can use the switcher on the header to change between your personal account and your organisation account. Projects created in an organisation account are shared between members in that GitHub organisation.\n\n# Create your First Project\n\nLet's start by clicking on \"Create Project\". You'll be taken to the New Project form. Please enter the following (you can change this in the future):\n\n * GitHub account: If you have more than one GitHub account, select which account this project will be created under. Projects created in a GitHub organisation account are shared between members in that organisation.\n * Name\n * Subtitle\n * Description\n * GitHub Repository URL: This must be a valid GitHub URL to a public repository that has your SubQuery project. The schema.graphql file must be in the root of your directory (learn more about the directory structure).\n * Hide project: If selected, this will hide the project from the public SubQuery explorer. Keep this unselected if you want to share your SubQuery with the community!\n\nCreate your project and you'll see it on your SubQuery Project's list. *We're almost there! We just need to deploy a new version of it. *\n\n# Deploy your first Version\n\nWhile creating a project will setup the display behaviour of the project, you must deploy a version of it before it becomes operational. Deploying a version triggers a new SubQuery indexing operation to start, and sets up the required query service to start accepting GraphQL requests. You can also deploy new versions to existing projects here.\n\nWith your new project, you'll see a Deploy New Version button. Click this, and fill in the required information about the deployment:\n\n * Commit Hash of new Version: From GitHub, copy the full commit hash of the version of your SubQuery project codebase that you want deployed\n * Indexer Version: This is the version of SubQuery's node service that you want to run this SubQuery on. See @subql/node\n * Query Version: This is the version of SubQuery's query service that you want to run this SubQuery on. See @subql/query\n\n\n\nIf deployed successfully, you'll see the indexer start working and report back progress on indexing the current chain. This process may take time until it reaches 100%.\n\n\n# Next Steps - Connect to your Project\n\nOnce your deployment has succesfully completed and our nodes have indexed your data from the chain, you'll be able to connect to your project via the displayed GraphQL Query endpoint.\n\n\n\nAlternatively, you can click on the three dots next to the title of your project, and view it on SubQuery Explorer. There you can use the in-browser playground to get started - read more about how to user our Explorer here.\n\n",normalizedContent:"# publish your subquery project\n\n\n# benefits of hosting your project with subquery\n\n * we'll run your subquery projects for you in a high performance, scalable, and managed public service\n * this service is being provided to the community for free!\n * you can make your projects public so that they'll be listed in the subquery explorer and anyone around the world can view them\n * we're integrated with github, so anyone in your github organisations will be able to view shared organisation projects\n\n\n# create your first project\n\n# login to subquery projects\n\nbefore starting, please make sure that your subquery project is online in a public github repository. the schema.graphql file must be in the root of your directory.\n\nto create your first project, head to project.subquery.network. you'll need to connect with your github account to login.\n\n\n\nsubquery projects is where you manage all your hosted projects uploaded to the subquery platform. you can create, delete, and even upgrade projects all from this application. if you have a github organisations accounts connected, you can use the switcher on the header to change between your personal account and your organisation account. projects created in an organisation account are shared between members in that github organisation.\n\n# create your first project\n\nlet's start by clicking on \"create project\". you'll be taken to the new project form. please enter the following (you can change this in the future):\n\n * github account: if you have more than one github account, select which account this project will be created under. projects created in a github organisation account are shared between members in that organisation.\n * name\n * subtitle\n * description\n * github repository url: this must be a valid github url to a public repository that has your subquery project. the schema.graphql file must be in the root of your directory (learn more about the directory structure).\n * hide project: if selected, this will hide the project from the public subquery explorer. keep this unselected if you want to share your subquery with the community!\n\ncreate your project and you'll see it on your subquery project's list. *we're almost there! we just need to deploy a new version of it. *\n\n# deploy your first version\n\nwhile creating a project will setup the display behaviour of the project, you must deploy a version of it before it becomes operational. deploying a version triggers a new subquery indexing operation to start, and sets up the required query service to start accepting graphql requests. you can also deploy new versions to existing projects here.\n\nwith your new project, you'll see a deploy new version button. click this, and fill in the required information about the deployment:\n\n * commit hash of new version: from github, copy the full commit hash of the version of your subquery project codebase that you want deployed\n * indexer version: this is the version of subquery's node service that you want to run this subquery on. see @subql/node\n * query version: this is the version of subquery's query service that you want to run this subquery on. see @subql/query\n\n\n\nif deployed successfully, you'll see the indexer start working and report back progress on indexing the current chain. this process may take time until it reaches 100%.\n\n\n# next steps - connect to your project\n\nonce your deployment has succesfully completed and our nodes have indexed your data from the chain, you'll be able to connect to your project via the displayed graphql query endpoint.\n\n\n\nalternatively, you can click on the three dots next to the title of your project, and view it on subquery explorer. there you can use the in-browser playground to get started - read more about how to user our explorer here.\n\n",charsets:{}},{title:"Deploy a New Version of your SubQuery Project",frontmatter:{},regularPath:"/publish/upgrade.html",relativePath:"publish/upgrade.md",key:"v-5be2726d",path:"/publish/upgrade.html",headers:[{level:2,title:"Guidelines",slug:"guidelines",normalizedTitle:"guidelines",charIndex:52},{level:2,title:"Deploy Changes",slug:"deploy-changes",normalizedTitle:"deploy changes",charIndex:604},{level:4,title:"Upgrade to the Latest Indexer and Query Service",slug:"upgrade-to-the-latest-indexer-and-query-service",normalizedTitle:"upgrade to the latest indexer and query service",charIndex:821},{level:4,title:"Deploy New Version of your SubQuery Project",slug:"deploy-new-version-of-your-subquery-project",normalizedTitle:"deploy new version of your subquery project",charIndex:1145},{level:2,title:"Next Steps - Connect to your Project",slug:"next-steps-connect-to-your-project",normalizedTitle:"next steps - connect to your project",charIndex:1470}],lastUpdated:"8/2/2021, 10:56:41 PM",headersStr:"Guidelines Deploy Changes Upgrade to the Latest Indexer and Query Service Deploy New Version of your SubQuery Project Next Steps - Connect to your Project",content:"# Deploy a New Version of your SubQuery Project\n\n\n# Guidelines\n\nAlthough you have the freedom to always upgrade and deploy new versions of your SubQuery project, please be considerate during this process if your SubQuery project is public for the world. Some key points to note:\n\n * If your upgrade is a breaking change, either create a new project (e.g. My SubQuery Project V2) or give your community plenty of warning of the change through social media channels.\n * Deploying a new SubQuery project version causes some downtime as the new version indexes the complete chain from the genesis block.\n\n\n# Deploy Changes\n\nLogin to SubQuery Projects, and find the project that you want to deploy a new version of. Under Deployment Details you'll see three dots in the top right, click on the Deploy New Version button.\n\n\n\n# Upgrade to the Latest Indexer and Query Service\n\nIf you just want to upgrade to the latest indexer (@subql/node) or query service (@subql/query) to take advantage of our regular performance and stability improvements, just select a newer versions of our packages and save. This will cause only a few minutes of downtime.\n\n# Deploy New Version of your SubQuery Project\n\nFill in the Commit Hash from GitHub (copy the full commit hash) of the version of your SubQuery project codebase that you want deployed. This will cause a longer downtime depending on the time it takes to index the current chain. You can always report back here for progress.\n\n\n# Next Steps - Connect to your Project\n\nOnce your deployment has succesfully completed and our nodes have indexed your data from the chain, you'll be able to connect to your project via the displayed GraphQL Query endpoint.\n\n\n\nAlternatively, you can click on the three dots next to the title of your project, and view it on SubQuery Explorer. There you can use the in browser playground to get started - read more about how to user our Explorer here.",normalizedContent:"# deploy a new version of your subquery project\n\n\n# guidelines\n\nalthough you have the freedom to always upgrade and deploy new versions of your subquery project, please be considerate during this process if your subquery project is public for the world. some key points to note:\n\n * if your upgrade is a breaking change, either create a new project (e.g. my subquery project v2) or give your community plenty of warning of the change through social media channels.\n * deploying a new subquery project version causes some downtime as the new version indexes the complete chain from the genesis block.\n\n\n# deploy changes\n\nlogin to subquery projects, and find the project that you want to deploy a new version of. under deployment details you'll see three dots in the top right, click on the deploy new version button.\n\n\n\n# upgrade to the latest indexer and query service\n\nif you just want to upgrade to the latest indexer (@subql/node) or query service (@subql/query) to take advantage of our regular performance and stability improvements, just select a newer versions of our packages and save. this will cause only a few minutes of downtime.\n\n# deploy new version of your subquery project\n\nfill in the commit hash from github (copy the full commit hash) of the version of your subquery project codebase that you want deployed. this will cause a longer downtime depending on the time it takes to index the current chain. you can always report back here for progress.\n\n\n# next steps - connect to your project\n\nonce your deployment has succesfully completed and our nodes have indexed your data from the chain, you'll be able to connect to your project via the displayed graphql query endpoint.\n\n\n\nalternatively, you can click on the three dots next to the title of your project, and view it on subquery explorer. there you can use the in browser playground to get started - read more about how to user our explorer here.",charsets:{}},{title:"Learn more about GraphQL",frontmatter:{},regularPath:"/query/graphql.html",relativePath:"query/graphql.md",key:"v-31c257a6",path:"/query/graphql.html",lastUpdated:"8/2/2021, 10:56:41 PM",headersStr:null,content:"# Learn more about GraphQL\n\nYou can follow the official GraphQL guide here to learn more about GraphQL, how it works, and how to use it:\n\n * There are libraries to help you implement GraphQL in many different languages\n * For an in-depth learning experience with practical tutorials, see How to GraphQL.\n * Check out the free online course, Exploring GraphQL: A Query Language for APIs.",normalizedContent:"# learn more about graphql\n\nyou can follow the official graphql guide here to learn more about graphql, how it works, and how to use it:\n\n * there are libraries to help you implement graphql in many different languages\n * for an in-depth learning experience with practical tutorials, see how to graphql.\n * check out the free online course, exploring graphql: a query language for apis.",charsets:{}},{title:"Query your Project in SubQuery Explorer",frontmatter:{},regularPath:"/query/query.html",relativePath:"query/query.md",key:"v-ecedcbe6",path:"/query/query.html",lastUpdated:"8/2/2021, 10:56:41 PM",headersStr:null,content:"# Query your Project in SubQuery Explorer\n\nSubQuery Explorer is an online hosted service (at explorer.subquery.network) that provides access to published SubQuery projects made by contributors in our community and managed by the SubQuery team. You can publish your own SubQuery projects to our explorer by following our guide to Publish your SubQuery Project.\n\n\n\nThe SubQuery explorer makes getting started easy. We’re hosting these SubQuery projects online and allow anyone to query each for free. These managed nodes will be monitored and run by the SubQuery team at a performance level that will allow production apps to use and rely on them.\n\n\n\nYou’ll also note that the SubQuery Explorer provides a playground for discovering available data with example queries - you can test queries directly in your browser without implementing code. Additionally, we’ve made some small improvements to our documentation to better support developers on their journey to better query and analyse the world’s Polkadot data.\n\nOn the top right of the playground, you'll find a Docs button that will open a documentation draw. This documentation is automatically generated and helps you find what entities and methods you can query. In the example below we're using the Sum Rewards SubQuery to get the top 5 most rewarded accounts (in terms of staking revenue) on Polkadot that have never been slashed.\n\n\n\nLearn more about the GraphQL Query language.",normalizedContent:"# query your project in subquery explorer\n\nsubquery explorer is an online hosted service (at explorer.subquery.network) that provides access to published subquery projects made by contributors in our community and managed by the subquery team. you can publish your own subquery projects to our explorer by following our guide to publish your subquery project.\n\n\n\nthe subquery explorer makes getting started easy. we’re hosting these subquery projects online and allow anyone to query each for free. these managed nodes will be monitored and run by the subquery team at a performance level that will allow production apps to use and rely on them.\n\n\n\nyou’ll also note that the subquery explorer provides a playground for discovering available data with example queries - you can test queries directly in your browser without implementing code. additionally, we’ve made some small improvements to our documentation to better support developers on their journey to better query and analyse the world’s polkadot data.\n\non the top right of the playground, you'll find a docs button that will open a documentation draw. this documentation is automatically generated and helps you find what entities and methods you can query. in the example below we're using the sum rewards subquery to get the top 5 most rewarded accounts (in terms of staking revenue) on polkadot that have never been slashed.\n\n\n\nlearn more about the graphql query language.",charsets:{}},{title:"Hello World (SubQuery hosted)",frontmatter:{},regularPath:"/quickstart/helloworld-hosted.html",relativePath:"quickstart/helloworld-hosted.md",key:"v-562bf2a5",path:"/quickstart/helloworld-hosted.html",headers:[{level:2,title:"Learning objectives",slug:"learning-objectives",normalizedTitle:"learning objectives",charIndex:495},{level:2,title:"Intended audience",slug:"intended-audience",normalizedTitle:"intended audience",charIndex:830},{level:2,title:"Video guide",slug:"video-guide",normalizedTitle:"video guide",charIndex:986},{level:2,title:"Pre-requisites",slug:"pre-requisites",normalizedTitle:"pre-requisites",charIndex:1002},{level:2,title:"Step 1: Create your project",slug:"step-1-create-your-project",normalizedTitle:"step 1: create your project",charIndex:1058},{level:2,title:"Step 2: Create a GitHub repo",slug:"step-2-create-a-github-repo",normalizedTitle:"step 2: create a github repo",charIndex:1344},{level:2,title:"Step 3: Push to GitHub",slug:"step-3-push-to-github",normalizedTitle:"step 3: push to github",charIndex:1602},{level:2,title:"Step 4: Create your project",slug:"step-4-create-your-project",normalizedTitle:"step 4: create your project",charIndex:3278},{level:2,title:"Step 5: Deploy your project",slug:"step-5-deploy-your-project",normalizedTitle:"step 5: deploy your project",charIndex:4496},{level:2,title:"Step 6: Testing your project",slug:"step-6-testing-your-project",normalizedTitle:"step 6: testing your project",charIndex:6010},{level:2,title:"Step 7: Bonus step",slug:"step-7-bonus-step",normalizedTitle:"step 7: bonus step",charIndex:6258},{level:2,title:"Summary",slug:"summary",normalizedTitle:"summary",charIndex:7705}],lastUpdated:"8/2/2021, 10:56:41 PM",headersStr:"Learning objectives Intended audience Video guide Pre-requisites Step 1: Create your project Step 2: Create a GitHub repo Step 3: Push to GitHub Step 4: Create your project Step 5: Deploy your project Step 6: Testing your project Step 7: Bonus step Summary",content:'# Hello World (SubQuery hosted)\n\nThe aim of this quick start is to show how you can get the default starter project running in SubQuery Projects (our managed service) in a few easy steps.\n\nWe will take the simple starter project (and everything we\'ve learned thus far) but instead of running it locally within Docker, we\'ll take advantage of SubQuery\'s managed hosting infrastructure. In other words, we let SubQuery do all the heavy lifting, running and managing production infrastructure.\n\n\n# Learning objectives\n\nAt the end of this quick start, you should:\n\n * understand the required pre-requisites\n * be able host a project in SubQuery Projects\n * run a simple query to get the block height of the Polkadot mainnet using the playground\n * run a simple GET query to get the block height of the Polkadot mainnet using cURL\n\n\n# Intended audience\n\nThis guide is geared towards new developers who have some development experience and are interested in learning more about SubQuery.\n\n\n# Video guide\n\n\n# Pre-requisites\n\nYou will need:\n\n * a GitHub account\n\n\n# Step 1: Create your project\n\nLet\'s create a project called subql_hellowworld and run the obligatory install, codegen and build with your favourite package manager.\n\n> subql init --starter subqlHelloWorld\nyarn install\nyarn codegen\nyarn build\n\n\nDo NOT run the docker commands though.\n\n\n# Step 2: Create a GitHub repo\n\nIn GitHub, create a new public repository. Provide a name and set your visibility to public. Here, everything is kept as the default for now.\n\n\n\nTake note of your GitHub URL, this must be public for SubQuery to access it.\n\n\n\n\n# Step 3: Push to GitHub\n\nBack in your project directory, initialise it as a git directory. Otherwise, you might get the error "fatal: not a git repository (or any of the parent directories): .git"\n\ngit init\n\n\nThen add a remote repository with the command:\n\ngit remote add origin https://github.com/seandotau/subqlHelloWorld.git\n\n\nThis basically sets your remote repository to “https://github.com/seandotau/subqlHelloWorld.git” and gives it the name “origin” which is the standard nomenclature for a remote repository in GitHub.\n\nNext we add the code to our repo with the following commands:\n\n> git add .\n> git commit -m "First commit"\n[master (root-commit) a999d88] First commit\n10 files changed, 3512 insertions(+)\ncreate mode 100644 .gitignore\ncreate mode 100644 README.md\ncreate mode 100644 docker-compose.yml\ncreate mode 100644 package.json\ncreate mode 100644 project.yaml\ncreate mode 100644 schema.graphql\ncreate mode 100644 src/index.ts\ncreate mode 100644 src/mappings/mappingHandlers.ts\ncreate mode 100644 tsconfig.json\ncreate mode 100644 yarn.lock\n> git push origin master\nEnumerating objects: 14, done.\nCounting objects: 100% (14/14), done.\nDelta compression using up to 12 threads\nCompressing objects: 100% (13/13), done.\nWriting objects: 100% (14/14), 59.35 KiB | 8.48 MiB/s, done.\nTotal 14 (delta 0), reused 0 (delta 0)\nTo https://github.com/seandotau/subqlHelloWorld.git\n * [new branch]      master -> master\n\n\n\nThe push command means "please push my code TO the origin repo FROM my master local repo". Refreshing GitHub should show all the code in GitHub.\n\n\n\nNow that you have got your code into GitHub, let\'s look at how we can host it in SubQuery Projects.\n\n\n# Step 4: Create your project\n\nNavigate to https://project.subquery.network and log in with your GitHub account.\n\n\n\nThen create a new project,\n\n\n\nAnd fill in the various fields with the appropriate details.\n\n * GitHub account: If you have more than one GitHub account, select what account this project will be created under. Projects created in an GitHub organisation account are shared between members in that organisation.\n * Project Name: Give your project a name here.\n * Subtitle: Provide a subtitle for your project.\n * Description: Explain what your SubQuery project does.\n * GitHub Repository URL: This must be a valid GitHub URL to a public repository that contains your SubQuery project. The schema.graphql file must be in the root of your directory.\n * Hide project: If selected, this will hide the project from the public SubQuery explorer. Keep this unselected if you want to share your SubQuery with the community!\n\n\n\nWhen you click create, you\'ll be taken to your dashboard.\n\n\n\nThe dashboard contains lots of useful information such as the network it is using, the GitHub repository URL of the source code it is running, when it was created and last updated, and in particular the deployment details.\n\n\n# Step 5: Deploy your project\n\nNow that you have created your project within SubQuery Projects, setting up the display behaviour, the next step is to deploy your project making it operational. Deploying a version triggers a new SubQuery indexing operation to start, and sets up the required query service to start accepting GraphQL requests. You can also deploy new versions to existing projects here.\n\nYou can choose to deploy to various environments such as a production slot or a staging slot. Here we\'ll deploy to a production slot. Clicking on the "Deploy" button brings up a screen with the following fields:\n\n\n\n * Commit Hash of new Version: From GitHub select the correct commit of the SubQuery project codebase that you want deployed\n * Indexer Version: This is the version of SubQuery\'s node service that you want to run this SubQuery on. See @subql/node\n * Query Version: This is the version of SubQuery\'s query service that you want to run this SubQuery on. See @subql/query\n\nBecause we only have one commit, there is only a single option in the drop down. We\'ll also work with the latest version of the indexer and query version so we will accept the defaults and then click "Deploy Update".\n\nYou’ll then see your deployment in “Processing” status. Here, your code is getting deployed onto the SubQuery\'s managed infrastructure. Basically a server is getting spun up on demand and being provisioned for you. This will take a few minutes so time to grab a coffee!\n\n\n\nThe deployment is now running.\n\n\n\n\n# Step 6: Testing your project\n\nTo test your project, click on the 3 ellipsis and select "View on SubQuery Explorer".\n\n\n\nThis will take you to the ever familiar "Playground" where you can click the play button and see the results of the query.\n\n\n\n\n# Step 7: Bonus step\n\nFor the astute amongst us, you will recall that in the learning objectives, the last point was to run a simple GET query. To do this, we will need to grab the "Query Endpoint" displayed in the deployment details.\n\n\n\nYou can then send a GET request to this endpoint either using your favourite client such as Postman or Mockoon or via cURL in your terminal. For simplicity, cURL will be shown below.\n\nThe curl command to run is:\n\ncurl https://api.subquery.network/sq/seandotau/subqueryhelloworld -d "query=query { starterEntities (first: 5, orderBy: CREATED_AT_DESC) { totalCount nodes { id field1 field2 field3 } } }"\n\n\ngiving the results of:\n\n{"data":{"starterEntities":{"totalCount":23098,"nodes":[{"id":"0x29dfe9c8e5a1d51178565c2c23f65d249b548fe75a9b6d74cebab777b961b1a6","field1":23098,"field2":null,"field3":null},{"id":"0xab7d3e0316a01cdaf9eda420cf4021dd53bb604c29c5136fef17088c8d9233fb","field1":23097,"field2":null,"field3":null},{"id":"0x534e89bbae0857f2f07b0dea8dc42a933f9eb2d95f7464bf361d766a644d17e3","field1":23096,"field2":null,"field3":null},{"id":"0xd0af03ab2000a58b40abfb96a61d312a494069de3670b509454bd06157357db6","field1":23095,"field2":null,"field3":null},{"id":"0xc9f5a92f4684eb039e11dffa4b8b22c428272b2aa09aff291169f71c1ba0b0f7","field1":23094,"field2":null,"field3":null}]}}}\n\n\n\nReadability is not a concern here as you will probably have some front end code to consume and parse this JSON response.\n\n\n# Summary\n\nIn this SubQuery hosted quick start we showed how quick and easy it was to take a Subql project and deploy it to SubQuery Projects where all the infrastructure is provided for your convenience. There is an inbuilt playground for running various queries as well as an API endpoint for your code to integrate with.',normalizedContent:'# hello world (subquery hosted)\n\nthe aim of this quick start is to show how you can get the default starter project running in subquery projects (our managed service) in a few easy steps.\n\nwe will take the simple starter project (and everything we\'ve learned thus far) but instead of running it locally within docker, we\'ll take advantage of subquery\'s managed hosting infrastructure. in other words, we let subquery do all the heavy lifting, running and managing production infrastructure.\n\n\n# learning objectives\n\nat the end of this quick start, you should:\n\n * understand the required pre-requisites\n * be able host a project in subquery projects\n * run a simple query to get the block height of the polkadot mainnet using the playground\n * run a simple get query to get the block height of the polkadot mainnet using curl\n\n\n# intended audience\n\nthis guide is geared towards new developers who have some development experience and are interested in learning more about subquery.\n\n\n# video guide\n\n\n# pre-requisites\n\nyou will need:\n\n * a github account\n\n\n# step 1: create your project\n\nlet\'s create a project called subql_hellowworld and run the obligatory install, codegen and build with your favourite package manager.\n\n> subql init --starter subqlhelloworld\nyarn install\nyarn codegen\nyarn build\n\n\ndo not run the docker commands though.\n\n\n# step 2: create a github repo\n\nin github, create a new public repository. provide a name and set your visibility to public. here, everything is kept as the default for now.\n\n\n\ntake note of your github url, this must be public for subquery to access it.\n\n\n\n\n# step 3: push to github\n\nback in your project directory, initialise it as a git directory. otherwise, you might get the error "fatal: not a git repository (or any of the parent directories): .git"\n\ngit init\n\n\nthen add a remote repository with the command:\n\ngit remote add origin https://github.com/seandotau/subqlhelloworld.git\n\n\nthis basically sets your remote repository to “https://github.com/seandotau/subqlhelloworld.git” and gives it the name “origin” which is the standard nomenclature for a remote repository in github.\n\nnext we add the code to our repo with the following commands:\n\n> git add .\n> git commit -m "first commit"\n[master (root-commit) a999d88] first commit\n10 files changed, 3512 insertions(+)\ncreate mode 100644 .gitignore\ncreate mode 100644 readme.md\ncreate mode 100644 docker-compose.yml\ncreate mode 100644 package.json\ncreate mode 100644 project.yaml\ncreate mode 100644 schema.graphql\ncreate mode 100644 src/index.ts\ncreate mode 100644 src/mappings/mappinghandlers.ts\ncreate mode 100644 tsconfig.json\ncreate mode 100644 yarn.lock\n> git push origin master\nenumerating objects: 14, done.\ncounting objects: 100% (14/14), done.\ndelta compression using up to 12 threads\ncompressing objects: 100% (13/13), done.\nwriting objects: 100% (14/14), 59.35 kib | 8.48 mib/s, done.\ntotal 14 (delta 0), reused 0 (delta 0)\nto https://github.com/seandotau/subqlhelloworld.git\n * [new branch]      master -> master\n\n\n\nthe push command means "please push my code to the origin repo from my master local repo". refreshing github should show all the code in github.\n\n\n\nnow that you have got your code into github, let\'s look at how we can host it in subquery projects.\n\n\n# step 4: create your project\n\nnavigate to https://project.subquery.network and log in with your github account.\n\n\n\nthen create a new project,\n\n\n\nand fill in the various fields with the appropriate details.\n\n * github account: if you have more than one github account, select what account this project will be created under. projects created in an github organisation account are shared between members in that organisation.\n * project name: give your project a name here.\n * subtitle: provide a subtitle for your project.\n * description: explain what your subquery project does.\n * github repository url: this must be a valid github url to a public repository that contains your subquery project. the schema.graphql file must be in the root of your directory.\n * hide project: if selected, this will hide the project from the public subquery explorer. keep this unselected if you want to share your subquery with the community!\n\n\n\nwhen you click create, you\'ll be taken to your dashboard.\n\n\n\nthe dashboard contains lots of useful information such as the network it is using, the github repository url of the source code it is running, when it was created and last updated, and in particular the deployment details.\n\n\n# step 5: deploy your project\n\nnow that you have created your project within subquery projects, setting up the display behaviour, the next step is to deploy your project making it operational. deploying a version triggers a new subquery indexing operation to start, and sets up the required query service to start accepting graphql requests. you can also deploy new versions to existing projects here.\n\nyou can choose to deploy to various environments such as a production slot or a staging slot. here we\'ll deploy to a production slot. clicking on the "deploy" button brings up a screen with the following fields:\n\n\n\n * commit hash of new version: from github select the correct commit of the subquery project codebase that you want deployed\n * indexer version: this is the version of subquery\'s node service that you want to run this subquery on. see @subql/node\n * query version: this is the version of subquery\'s query service that you want to run this subquery on. see @subql/query\n\nbecause we only have one commit, there is only a single option in the drop down. we\'ll also work with the latest version of the indexer and query version so we will accept the defaults and then click "deploy update".\n\nyou’ll then see your deployment in “processing” status. here, your code is getting deployed onto the subquery\'s managed infrastructure. basically a server is getting spun up on demand and being provisioned for you. this will take a few minutes so time to grab a coffee!\n\n\n\nthe deployment is now running.\n\n\n\n\n# step 6: testing your project\n\nto test your project, click on the 3 ellipsis and select "view on subquery explorer".\n\n\n\nthis will take you to the ever familiar "playground" where you can click the play button and see the results of the query.\n\n\n\n\n# step 7: bonus step\n\nfor the astute amongst us, you will recall that in the learning objectives, the last point was to run a simple get query. to do this, we will need to grab the "query endpoint" displayed in the deployment details.\n\n\n\nyou can then send a get request to this endpoint either using your favourite client such as postman or mockoon or via curl in your terminal. for simplicity, curl will be shown below.\n\nthe curl command to run is:\n\ncurl https://api.subquery.network/sq/seandotau/subqueryhelloworld -d "query=query { starterentities (first: 5, orderby: created_at_desc) { totalcount nodes { id field1 field2 field3 } } }"\n\n\ngiving the results of:\n\n{"data":{"starterentities":{"totalcount":23098,"nodes":[{"id":"0x29dfe9c8e5a1d51178565c2c23f65d249b548fe75a9b6d74cebab777b961b1a6","field1":23098,"field2":null,"field3":null},{"id":"0xab7d3e0316a01cdaf9eda420cf4021dd53bb604c29c5136fef17088c8d9233fb","field1":23097,"field2":null,"field3":null},{"id":"0x534e89bbae0857f2f07b0dea8dc42a933f9eb2d95f7464bf361d766a644d17e3","field1":23096,"field2":null,"field3":null},{"id":"0xd0af03ab2000a58b40abfb96a61d312a494069de3670b509454bd06157357db6","field1":23095,"field2":null,"field3":null},{"id":"0xc9f5a92f4684eb039e11dffa4b8b22c428272b2aa09aff291169f71c1ba0b0f7","field1":23094,"field2":null,"field3":null}]}}}\n\n\n\nreadability is not a concern here as you will probably have some front end code to consume and parse this json response.\n\n\n# summary\n\nin this subquery hosted quick start we showed how quick and easy it was to take a subql project and deploy it to subquery projects where all the infrastructure is provided for your convenience. there is an inbuilt playground for running various queries as well as an api endpoint for your code to integrate with.',charsets:{cjk:!0}},{title:"Hello World (localhost + Docker)",frontmatter:{},regularPath:"/quickstart/helloworld-localhost.html",relativePath:"quickstart/helloworld-localhost.md",key:"v-bc9cfe26",path:"/quickstart/helloworld-localhost.html",headers:[{level:2,title:"Learning objectives",slug:"learning-objectives",normalizedTitle:"learning objectives",charIndex:204},{level:2,title:"Intended audience",slug:"intended-audience",normalizedTitle:"intended audience",charIndex:491},{level:2,title:"Video guide",slug:"video-guide",normalizedTitle:"video guide",charIndex:647},{level:2,title:"Pre-requisites",slug:"pre-requisites",normalizedTitle:"pre-requisites",charIndex:663},{level:2,title:"Step 1: Initialise project",slug:"step-1-initialise-project",normalizedTitle:"step 1: initialise project",charIndex:1435},{level:2,title:"Step 2: Install dependencies",slug:"step-2-install-dependencies",normalizedTitle:"step 2: install dependencies",charIndex:1991},{level:2,title:"Step 3: Generate code",slug:"step-3-generate-code",normalizedTitle:"step 3: generate code",charIndex:2401},{level:2,title:"Step 4: Build code",slug:"step-4-build-code",normalizedTitle:"step 4: build code",charIndex:2976},{level:2,title:"Step 5: Run Docker",slug:"step-5-run-docker",normalizedTitle:"step 5: run docker",charIndex:3186},{level:2,title:"Step 6: Browse playground",slug:"step-6-browse-playground",normalizedTitle:"step 6: browse playground",charIndex:4421},{level:2,title:"Summary",slug:"summary",normalizedTitle:"summary",charIndex:4839}],lastUpdated:"8/2/2021, 10:56:41 PM",headersStr:"Learning objectives Intended audience Video guide Pre-requisites Step 1: Initialise project Step 2: Install dependencies Step 3: Generate code Step 4: Build code Step 5: Run Docker Step 6: Browse playground Summary",content:'# Hello World (localhost + Docker)\n\nWelcome to this SubQuery Hello World quick start. The quick start aims to show you how you get the default starter project running in Docker in a few simple steps.\n\n\n# Learning objectives\n\nAt the end of this quick start, you should:\n\n * understand the required pre-requisites\n * understand the basic common commands\n * be able to navigate to localhost:3000 and view the playground\n * run a simple query to get the block height of the Polkadot mainnet\n\n\n# Intended audience\n\nThis guide is geared towards new developers who have some development experience and are interested in learning more about SubQuery.\n\n\n# Video guide\n\n\n# Pre-requisites\n\nYou will need:\n\n * yarn or npm package manager\n * SubQuery CLI (@subql/cli)\n * Docker\n\nYou can run the following commands in a terminal to see if you already have any of these pre-requisites.\n\nyarn -v (or npm -v)\nsubql -v\ndocker -v\n\n\nFor more advanced users, copy and paste the following:\n\necho -e "My yarn version is:" `yarn -v` "\\nMy subql version is:" `subql -v`  "\\nMy docker version is:" `docker -v`\n\n\nThis should return: (for npm users, replace yarn with npm)\n\nMy yarn version is: 1.22.10\nMy subql version is: @subql/cli/0.9.3 darwin-x64 node-v16.3.0\nMy docker version is: Docker version 20.10.5, build 55c4c88\n\n\nIf you get the above, then you are good to go. If not, follow these links to install them:\n\n * yarn or npm\n * SubQuery CLI\n * Docker\n\n\n# Step 1: Initialise project\n\nThe first step when starting off with SubQuery is to run the subql init command. Let\'s initialise a start project with the name subqlHelloWorld. Note that only author is mandatory. Everything else is left empty below.\n\n> subql init --starter subqlHelloWorld\nGit repository:\nRPC endpoint [wss://polkadot.api.onfinality.io/public-ws]:\nAuthors: sa\nDescription:\nVersion: [1.0.0]:\nLicense: [Apache-2.0]:\nInit the starter package... subqlHelloWorld is ready\n\n\n\nDon\'t forget to change into this new directory.\n\ncd subqlHelloWorld\n\n\n\n# Step 2: Install dependencies\n\nNow do a yarn or node install to install the various dependencies.\n\n# Yarn\nyarn install\n\n# NPM\nnpm install\n\n\nAn example of yarn install\n\n> yarn install\nyarn install v1.22.10\ninfo No lockfile found.\n[1/4] 🔍  Resolving packages...\n[2/4] 🚚  Fetching packages...\n[3/4] 🔗  Linking dependencies...\n[4/4] 🔨  Building fresh packages...\nsuccess Saved lockfile.\n✨  Done in 31.84s.\n\n\n\n# Step 3: Generate code\n\nNow run yarn codegen to generate Typescript from the GraphQL schema.\n\n# Yarn\nyarn codegen\n\n# NPM\nnpm run-script codegen\n\n\nAn example of yarn codegen\n\n> yarn codegen\nyarn run v1.22.10\n$ ./node_modules/.bin/subql codegen\n===============================\n---------Subql Codegen---------\n===============================\n* Schema StarterEntity generated !\n* Models index generated !\n* Types index generated !\n✨  Done in 1.02s.\n\n\nWarning When changes are made to the schema file, please remember to re-run yarn codegen to regenerate your types directory.\n\n\n# Step 4: Build code\n\nThe next step is to build the code with yarn build.\n\n# Yarn\nyarn build\n\n# NPM\nnpm run-script build\n\n\nAn example of yarn build\n\n> yarn build\nyarn run v1.22.10\n$ tsc -b\n✨  Done in 5.68s.\n\n\n\n# Step 5: Run Docker\n\nUsing Docker allows you to run this example very quickly because all the required infrastructure can be provided within the Docker image. Run docker-compose pull && docker-compose up.\n\nThis will kick everything into life where eventually you will get blocks being fetched.\n\n> #SNIPPET\nsubquery-node_1   | 2021-06-05T22:20:31.450Z <subql-node> INFO node started\nsubquery-node_1   | 2021-06-05T22:20:35.134Z <fetch> INFO fetch block [1, 100]\nsubqlhelloworld_graphql-engine_1 exited with code 0\nsubquery-node_1   | 2021-06-05T22:20:38.412Z <fetch> INFO fetch block [101, 200]\ngraphql-engine_1  | 2021-06-05T22:20:39.353Z <nestjs> INFO Starting Nest application...\ngraphql-engine_1  | 2021-06-05T22:20:39.382Z <nestjs> INFO AppModule dependencies initialized\ngraphql-engine_1  | 2021-06-05T22:20:39.382Z <nestjs> INFO ConfigureModule dependencies initialized\ngraphql-engine_1  | 2021-06-05T22:20:39.383Z <nestjs> INFO GraphqlModule dependencies initialized\ngraphql-engine_1  | 2021-06-05T22:20:39.809Z <nestjs> INFO Nest application successfully started\nsubquery-node_1   | 2021-06-05T22:20:41.122Z <fetch> INFO fetch block [201, 300]\ngraphql-engine_1  | 2021-06-05T22:20:43.244Z <express> INFO request completed\n\n\n\n\n# Step 6: Browse playground\n\nNavigate to http://localhost:3000/ and paste the query below into the left side of the screen and then hit the play button.\n\n{\n query{\n   starterEntities(last:10, orderBy:FIELD1_ASC ){\n     nodes{\n       field1\n     }\n   }\n }\n}\n\n\n\nSubQuery playground on localhost.\n\n\n\nThe block count in the playground should match the block count (technically the block height) in the terminal as well.\n\n\n# Summary\n\nIn this quick start, we demonstrated the basic steps to get a starter project up and running within a Docker environment and then navigated to localhost:3000 and ran a query to return the block number of the mainnet Polkadot network.',normalizedContent:'# hello world (localhost + docker)\n\nwelcome to this subquery hello world quick start. the quick start aims to show you how you get the default starter project running in docker in a few simple steps.\n\n\n# learning objectives\n\nat the end of this quick start, you should:\n\n * understand the required pre-requisites\n * understand the basic common commands\n * be able to navigate to localhost:3000 and view the playground\n * run a simple query to get the block height of the polkadot mainnet\n\n\n# intended audience\n\nthis guide is geared towards new developers who have some development experience and are interested in learning more about subquery.\n\n\n# video guide\n\n\n# pre-requisites\n\nyou will need:\n\n * yarn or npm package manager\n * subquery cli (@subql/cli)\n * docker\n\nyou can run the following commands in a terminal to see if you already have any of these pre-requisites.\n\nyarn -v (or npm -v)\nsubql -v\ndocker -v\n\n\nfor more advanced users, copy and paste the following:\n\necho -e "my yarn version is:" `yarn -v` "\\nmy subql version is:" `subql -v`  "\\nmy docker version is:" `docker -v`\n\n\nthis should return: (for npm users, replace yarn with npm)\n\nmy yarn version is: 1.22.10\nmy subql version is: @subql/cli/0.9.3 darwin-x64 node-v16.3.0\nmy docker version is: docker version 20.10.5, build 55c4c88\n\n\nif you get the above, then you are good to go. if not, follow these links to install them:\n\n * yarn or npm\n * subquery cli\n * docker\n\n\n# step 1: initialise project\n\nthe first step when starting off with subquery is to run the subql init command. let\'s initialise a start project with the name subqlhelloworld. note that only author is mandatory. everything else is left empty below.\n\n> subql init --starter subqlhelloworld\ngit repository:\nrpc endpoint [wss://polkadot.api.onfinality.io/public-ws]:\nauthors: sa\ndescription:\nversion: [1.0.0]:\nlicense: [apache-2.0]:\ninit the starter package... subqlhelloworld is ready\n\n\n\ndon\'t forget to change into this new directory.\n\ncd subqlhelloworld\n\n\n\n# step 2: install dependencies\n\nnow do a yarn or node install to install the various dependencies.\n\n# yarn\nyarn install\n\n# npm\nnpm install\n\n\nan example of yarn install\n\n> yarn install\nyarn install v1.22.10\ninfo no lockfile found.\n[1/4] 🔍  resolving packages...\n[2/4] 🚚  fetching packages...\n[3/4] 🔗  linking dependencies...\n[4/4] 🔨  building fresh packages...\nsuccess saved lockfile.\n✨  done in 31.84s.\n\n\n\n# step 3: generate code\n\nnow run yarn codegen to generate typescript from the graphql schema.\n\n# yarn\nyarn codegen\n\n# npm\nnpm run-script codegen\n\n\nan example of yarn codegen\n\n> yarn codegen\nyarn run v1.22.10\n$ ./node_modules/.bin/subql codegen\n===============================\n---------subql codegen---------\n===============================\n* schema starterentity generated !\n* models index generated !\n* types index generated !\n✨  done in 1.02s.\n\n\nwarning when changes are made to the schema file, please remember to re-run yarn codegen to regenerate your types directory.\n\n\n# step 4: build code\n\nthe next step is to build the code with yarn build.\n\n# yarn\nyarn build\n\n# npm\nnpm run-script build\n\n\nan example of yarn build\n\n> yarn build\nyarn run v1.22.10\n$ tsc -b\n✨  done in 5.68s.\n\n\n\n# step 5: run docker\n\nusing docker allows you to run this example very quickly because all the required infrastructure can be provided within the docker image. run docker-compose pull && docker-compose up.\n\nthis will kick everything into life where eventually you will get blocks being fetched.\n\n> #snippet\nsubquery-node_1   | 2021-06-05t22:20:31.450z <subql-node> info node started\nsubquery-node_1   | 2021-06-05t22:20:35.134z <fetch> info fetch block [1, 100]\nsubqlhelloworld_graphql-engine_1 exited with code 0\nsubquery-node_1   | 2021-06-05t22:20:38.412z <fetch> info fetch block [101, 200]\ngraphql-engine_1  | 2021-06-05t22:20:39.353z <nestjs> info starting nest application...\ngraphql-engine_1  | 2021-06-05t22:20:39.382z <nestjs> info appmodule dependencies initialized\ngraphql-engine_1  | 2021-06-05t22:20:39.382z <nestjs> info configuremodule dependencies initialized\ngraphql-engine_1  | 2021-06-05t22:20:39.383z <nestjs> info graphqlmodule dependencies initialized\ngraphql-engine_1  | 2021-06-05t22:20:39.809z <nestjs> info nest application successfully started\nsubquery-node_1   | 2021-06-05t22:20:41.122z <fetch> info fetch block [201, 300]\ngraphql-engine_1  | 2021-06-05t22:20:43.244z <express> info request completed\n\n\n\n\n# step 6: browse playground\n\nnavigate to http://localhost:3000/ and paste the query below into the left side of the screen and then hit the play button.\n\n{\n query{\n   starterentities(last:10, orderby:field1_asc ){\n     nodes{\n       field1\n     }\n   }\n }\n}\n\n\n\nsubquery playground on localhost.\n\n\n\nthe block count in the playground should match the block count (technically the block height) in the terminal as well.\n\n\n# summary\n\nin this quick start, we demonstrated the basic steps to get a starter project up and running within a docker environment and then navigated to localhost:3000 and ran a query to return the block number of the mainnet polkadot network.',charsets:{cjk:!0}},{title:"Quick Start Guide",frontmatter:{},regularPath:"/quickstart/quickstart.html",relativePath:"quickstart/quickstart.md",key:"v-867568e6",path:"/quickstart/quickstart.html",headers:[{level:2,title:"Preparation",slug:"preparation",normalizedTitle:"preparation",charIndex:429},{level:3,title:"Local Development Environment",slug:"local-development-environment",normalizedTitle:"local development environment",charIndex:445},{level:3,title:"Install the SubQuery CLI",slug:"install-the-subquery-cli",normalizedTitle:"install the subquery cli",charIndex:672},{level:2,title:"Initialise the Starter SubQuery Project",slug:"initialise-the-starter-subquery-project",normalizedTitle:"initialise the starter subquery project",charIndex:1026},{level:2,title:"Configure and Build the Starter Project",slug:"configure-and-build-the-starter-project",normalizedTitle:"configure and build the starter project",charIndex:2536},{level:3,title:"GraphQL Model Generation",slug:"graphql-model-generation",normalizedTitle:"graphql model generation",charIndex:2979},{level:2,title:"Build the Project",slug:"build-the-project",normalizedTitle:"build the project",charIndex:3346},{level:2,title:"Running and Querying your Starter Project",slug:"running-and-querying-your-starter-project",normalizedTitle:"running and querying your starter project",charIndex:3574},{level:3,title:"Run your SubQuery Project",slug:"run-your-subquery-project",normalizedTitle:"run your subquery project",charIndex:3927},{level:3,title:"Query your Project",slug:"query-your-project",normalizedTitle:"query your project",charIndex:4490},{level:2,title:"Next Steps",slug:"next-steps",normalizedTitle:"next steps",charIndex:5151}],lastUpdated:"8/2/2021, 10:56:41 PM",headersStr:"Preparation Local Development Environment Install the SubQuery CLI Initialise the Starter SubQuery Project Configure and Build the Starter Project GraphQL Model Generation Build the Project Running and Querying your Starter Project Run your SubQuery Project Query your Project Next Steps",content:"# Quick Start Guide\n\nIn this Quick Start guide, we're going to create a simple starter project that you can be used as a framework for developing your own SubQuery Project.\n\nAt the end of this guide, you'll have a working SubQuery project running on a SubQuery node with a GraphQL endpoint that you can query data from.\n\nIf you haven't already, we suggest that you familiarise yourself with the terminology used in SubQuery.\n\n\n# Preparation\n\n\n# Local Development Environment\n\n * Typescript is required to compile project and define types.\n * Both SubQuery CLI and generated Project have dependencies and require a modern version Node.\n * SubQuery Nodes require Docker\n\n\n# Install the SubQuery CLI\n\nInstall SubQuery CLI globally on your terminal by using NPM:\n\n# NPM\nnpm install -g @subql/cli\n\n\nPlease note that we DO NOT encourage the use of yarn global due to its poor dependency management which may lead to an errors down the line.\n\nYou can then run help to see available commands and usage provide by CLI\n\nsubql help\n\n\n\n# Initialise the Starter SubQuery Project\n\nInside the directory in which you want to create a SubQuery project, simply replace PROJECT_NAME with your own and run the command:\n\nsubql init --starter PROJECT_NAME\n\n\nYou'll be asked certain questions as the SubQuery project is initalised:\n\n * Git repository (Optional): Provide a Git URL to a repo that this SubQuery project will be hosted in (when hosted in SubQuery Explorer)\n * RPC endpoint (Required): Provide a wss URL to a running RPC endpoint that will be used by default for this project. You can quickly access public endpoints for different Polkadot networks or even create your own private dedicated node using OnFinality or just use the default Polkadot endpoint.\n * Authors (Required): Enter the owner of this SubQuery project here\n * Description (Optional): You can provide a short paragraph about your project that describe what data it contains and what users can do with it\n * Version (Required): Enter a custom version number or use the default (1.0.0)\n * License (Required): Provide the software license for this project or accept the default (Apache-2.0)\n\nAfter the initialisation process is complete, you should see a folder with your project name has been created inside the directory. The contents of this directoy should be identical to what's listed in the Directory Structure.\n\nLast, under the project directory, run following command to install the new project's dependencies.\n\ncd PROJECT_NAME\n\n# Yarn\nyarn install\n\n# NPM\nnpm install\n\n\n\n# Configure and Build the Starter Project\n\nIn the starter package that you just initialised, we have provided a standard configuration for your new project. You will mainly be working on the following files:\n\n * The Manifest in project.yaml\n * The GraphQL Schema in schema.graphql\n * The Mapping functions in src/mappings/ directory\n\nFor more information on how to write your own SubQuery, check out our documentation under Create a Project\n\n\n# GraphQL Model Generation\n\nIn order to index your SubQuery project, you must first generate the required GraphQL models that you have defined in your GraphQL Schema file (schema.graphql). Run this command in the root of the project directory.\n\n# Yarn\nyarn codegen\n\n# NPM\nnpm run-script codegen\n\n\nYou'll find the generated models in the /src/types/models directory\n\n\n# Build the Project\n\nIn order run your SubQuery Project on a locally hosted SubQuery Node, you need to build your work.\n\nRun the build command from the project's root directory.\n\n# Yarn\nyarn build\n\n# NPM\nnpm run-script build\n\n\n\n# Running and Querying your Starter Project\n\nAlthough you can quickly publish your new project to SubQuery Projects and query it using our Explorer, the easiest way to run SubQuery nodes locally is in a Docker container, if you don't already have Docker you can install it from docker.com.\n\nSkip this and publish your new project to SubQuery Projects\n\n\n# Run your SubQuery Project\n\nAll configuration that controls how a SubQuery node is run is defined in this docker-compose.yml file. For a new project that has been just initalised you won't need to change anything here, but you can read more about the file and the settings in our Run a Project section\n\nUnder the project directory run following command:\n\ndocker-compose pull && docker-compose up\n\n\nIt may take some time to download the required packages (@subql/node, @subql/query, and Postgres) for the first time but soon you'll see a running SubQuery node.\n\n\n# Query your Project\n\nOpen your browser and head to http://localhost:3000.\n\nYou should see a GraphQL playground is showing in the explorer and the schemas that are ready to query. On the top right of the playground, you'll find a Docs button that will open a documentation draw. This documentation is automatically generated and helps you find what entities and methods you can query.\n\nFor a new SubQuery starter project, you can try the following query to get a taste of how it works or learn more about the GraphQL Query language.\n\n{\n  query {\n    starterEntities(first: 10) {\n      nodes {\n        field1\n        field2\n        field3\n      }\n    }\n  }\n}\n\n\n\n# Next Steps\n\nCongratulations, you now have a locally running SubQuery project that accepts GraphQL API requests for sample data. In the next guide, we'll show you how to publish your new project to SubQuery Projects and query it using our Explorer\n\nPublish your new project to SubQuery Projects",normalizedContent:"# quick start guide\n\nin this quick start guide, we're going to create a simple starter project that you can be used as a framework for developing your own subquery project.\n\nat the end of this guide, you'll have a working subquery project running on a subquery node with a graphql endpoint that you can query data from.\n\nif you haven't already, we suggest that you familiarise yourself with the terminology used in subquery.\n\n\n# preparation\n\n\n# local development environment\n\n * typescript is required to compile project and define types.\n * both subquery cli and generated project have dependencies and require a modern version node.\n * subquery nodes require docker\n\n\n# install the subquery cli\n\ninstall subquery cli globally on your terminal by using npm:\n\n# npm\nnpm install -g @subql/cli\n\n\nplease note that we do not encourage the use of yarn global due to its poor dependency management which may lead to an errors down the line.\n\nyou can then run help to see available commands and usage provide by cli\n\nsubql help\n\n\n\n# initialise the starter subquery project\n\ninside the directory in which you want to create a subquery project, simply replace project_name with your own and run the command:\n\nsubql init --starter project_name\n\n\nyou'll be asked certain questions as the subquery project is initalised:\n\n * git repository (optional): provide a git url to a repo that this subquery project will be hosted in (when hosted in subquery explorer)\n * rpc endpoint (required): provide a wss url to a running rpc endpoint that will be used by default for this project. you can quickly access public endpoints for different polkadot networks or even create your own private dedicated node using onfinality or just use the default polkadot endpoint.\n * authors (required): enter the owner of this subquery project here\n * description (optional): you can provide a short paragraph about your project that describe what data it contains and what users can do with it\n * version (required): enter a custom version number or use the default (1.0.0)\n * license (required): provide the software license for this project or accept the default (apache-2.0)\n\nafter the initialisation process is complete, you should see a folder with your project name has been created inside the directory. the contents of this directoy should be identical to what's listed in the directory structure.\n\nlast, under the project directory, run following command to install the new project's dependencies.\n\ncd project_name\n\n# yarn\nyarn install\n\n# npm\nnpm install\n\n\n\n# configure and build the starter project\n\nin the starter package that you just initialised, we have provided a standard configuration for your new project. you will mainly be working on the following files:\n\n * the manifest in project.yaml\n * the graphql schema in schema.graphql\n * the mapping functions in src/mappings/ directory\n\nfor more information on how to write your own subquery, check out our documentation under create a project\n\n\n# graphql model generation\n\nin order to index your subquery project, you must first generate the required graphql models that you have defined in your graphql schema file (schema.graphql). run this command in the root of the project directory.\n\n# yarn\nyarn codegen\n\n# npm\nnpm run-script codegen\n\n\nyou'll find the generated models in the /src/types/models directory\n\n\n# build the project\n\nin order run your subquery project on a locally hosted subquery node, you need to build your work.\n\nrun the build command from the project's root directory.\n\n# yarn\nyarn build\n\n# npm\nnpm run-script build\n\n\n\n# running and querying your starter project\n\nalthough you can quickly publish your new project to subquery projects and query it using our explorer, the easiest way to run subquery nodes locally is in a docker container, if you don't already have docker you can install it from docker.com.\n\nskip this and publish your new project to subquery projects\n\n\n# run your subquery project\n\nall configuration that controls how a subquery node is run is defined in this docker-compose.yml file. for a new project that has been just initalised you won't need to change anything here, but you can read more about the file and the settings in our run a project section\n\nunder the project directory run following command:\n\ndocker-compose pull && docker-compose up\n\n\nit may take some time to download the required packages (@subql/node, @subql/query, and postgres) for the first time but soon you'll see a running subquery node.\n\n\n# query your project\n\nopen your browser and head to http://localhost:3000.\n\nyou should see a graphql playground is showing in the explorer and the schemas that are ready to query. on the top right of the playground, you'll find a docs button that will open a documentation draw. this documentation is automatically generated and helps you find what entities and methods you can query.\n\nfor a new subquery starter project, you can try the following query to get a taste of how it works or learn more about the graphql query language.\n\n{\n  query {\n    starterentities(first: 10) {\n      nodes {\n        field1\n        field2\n        field3\n      }\n    }\n  }\n}\n\n\n\n# next steps\n\ncongratulations, you now have a locally running subquery project that accepts graphql api requests for sample data. in the next guide, we'll show you how to publish your new project to subquery projects and query it using our explorer\n\npublish your new project to subquery projects",charsets:{}},{title:"Hello World Explained",frontmatter:{},regularPath:"/quickstart/understanding-helloworld.html",relativePath:"quickstart/understanding-helloworld.md",key:"v-d4874966",path:"/quickstart/understanding-helloworld.html",headers:[{level:2,title:"subql init",slug:"subql-init",normalizedTitle:"subql init",charIndex:378},{level:2,title:"yarn install",slug:"yarn-install",normalizedTitle:"yarn install",charIndex:1161},{level:2,title:"yarn codegen",slug:"yarn-codegen",normalizedTitle:"yarn codegen",charIndex:1998},{level:2,title:"yarn build",slug:"yarn-build",normalizedTitle:"yarn build",charIndex:2339},{level:2,title:"docker-compose",slug:"docker-compose",normalizedTitle:"docker-compose",charIndex:2566},{level:2,title:"Summary",slug:"summary",normalizedTitle:"summary",charIndex:3233}],lastUpdated:"8/2/2021, 10:56:41 PM",headersStr:"subql init yarn install yarn codegen yarn build docker-compose Summary",content:"# Hello World Explained\n\nIn the Hello World quick start guide, we ran through some simple commands and very quickly got an example up and running. This allowed you to ensure that you had all the pre-requisites in place and could use a local playground to make a simple query to get your first data from SubQuery. Here, we take a closer look at what all those commands mean.\n\n\n# subql init\n\nThe first command we ran was subql init --starter subqlHelloWorld.\n\nThis does the heavy lifting and creates a whole bunch of files for you. As noted in the official documentation, you will mainly be working on the following files:\n\n * The Manifest in project.yaml\n * The GraphQL Schema in schema.graphql\n * The Mapping functions in src/mappings/ directory\n\n\n\nThese files are the core of everything we do. As such, we'll dedicate more time to these files in another article. For now though, just know that the schema contains a description of the data users can request from the SubQuery API, the project yaml file which contains \"configuration\" type parameters and of course the mappingHandlers containing typescript which contains functions that transform the data.\n\n\n# yarn install\n\nThe next thing we did was yarn install. npm install can be used as well.\n\n> A short history lesson. Node Package Manager or npm was initially released in 2010 and is a tremendously popular package manager among JavaScript developers. It is the default package that is automatically installed whenever you install Node.js on your system. Yarn was initially released by Facebook in 2016 with the intention to address some of the performance and security shortcomings of working with npm (at that time).\n\nWhat yarn does is look at the package.json file and download various other dependencies. Looking at the package.json file, it doesn't look like there are many dependencies, but when you run the command, you'll notice that 18,983 files are added. This is because each dependency will also have its own dependencies.\n\n\n\n\n# yarn codegen\n\nThen we ran yarn codegen or npm run-script codegen. What this does is fetch the GraphQL schema (in the schema.graphql) and generates the associated typescript model files (Hence the output files will have a .ts extension). You should never change any of these generated files, only change the source schema.graphql file.\n\n\n\n\n# yarn build\n\nyarn build or npm run-script build was then executed. This should be familiar for seasoned programmers. It creates a distribution folder performing things such as code optimisation preparing for a deployment.\n\n\n\n\n# docker-compose\n\nThe final step was the combined docker command docker-compose pull && docker-compose up (can be run separately as well). The pull command grabs all the required images from Docker Hub and the up command starts the container.\n\n> docker-compose pull\nPulling postgres        ... done\nPulling subquery-node   ... done\nPulling graphql-engine  ... done\n\n\nWhen the container is started, you'll see the terminal spit out lots of text showing the status of the node and the GraphQL engine. It's when you see:\n\nsubquery-node_1   | 2021-06-06T02:04:25.490Z <fetch> INFO fetch block [1, 100]\n\n\nthat you know that the SubQuery node has started to synchronise.\n\n\n# Summary\n\nNow that you've had an insight into what is happening under the covers, the question is where to from here? If you are feeling confident, you can jump into learning about how to create a project and learn more about the three key files. The manifest file, the GraphQL schema, and the mappings file.\n\nOtherwise, continue to our tutorials section where we look at how we can run this Hello World example on SubQuery's hosted infrastructure, we'll look at modifying the start block, and we'll take a deeper dive at running SubQuery projects by running readily available and open source projects.",normalizedContent:"# hello world explained\n\nin the hello world quick start guide, we ran through some simple commands and very quickly got an example up and running. this allowed you to ensure that you had all the pre-requisites in place and could use a local playground to make a simple query to get your first data from subquery. here, we take a closer look at what all those commands mean.\n\n\n# subql init\n\nthe first command we ran was subql init --starter subqlhelloworld.\n\nthis does the heavy lifting and creates a whole bunch of files for you. as noted in the official documentation, you will mainly be working on the following files:\n\n * the manifest in project.yaml\n * the graphql schema in schema.graphql\n * the mapping functions in src/mappings/ directory\n\n\n\nthese files are the core of everything we do. as such, we'll dedicate more time to these files in another article. for now though, just know that the schema contains a description of the data users can request from the subquery api, the project yaml file which contains \"configuration\" type parameters and of course the mappinghandlers containing typescript which contains functions that transform the data.\n\n\n# yarn install\n\nthe next thing we did was yarn install. npm install can be used as well.\n\n> a short history lesson. node package manager or npm was initially released in 2010 and is a tremendously popular package manager among javascript developers. it is the default package that is automatically installed whenever you install node.js on your system. yarn was initially released by facebook in 2016 with the intention to address some of the performance and security shortcomings of working with npm (at that time).\n\nwhat yarn does is look at the package.json file and download various other dependencies. looking at the package.json file, it doesn't look like there are many dependencies, but when you run the command, you'll notice that 18,983 files are added. this is because each dependency will also have its own dependencies.\n\n\n\n\n# yarn codegen\n\nthen we ran yarn codegen or npm run-script codegen. what this does is fetch the graphql schema (in the schema.graphql) and generates the associated typescript model files (hence the output files will have a .ts extension). you should never change any of these generated files, only change the source schema.graphql file.\n\n\n\n\n# yarn build\n\nyarn build or npm run-script build was then executed. this should be familiar for seasoned programmers. it creates a distribution folder performing things such as code optimisation preparing for a deployment.\n\n\n\n\n# docker-compose\n\nthe final step was the combined docker command docker-compose pull && docker-compose up (can be run separately as well). the pull command grabs all the required images from docker hub and the up command starts the container.\n\n> docker-compose pull\npulling postgres        ... done\npulling subquery-node   ... done\npulling graphql-engine  ... done\n\n\nwhen the container is started, you'll see the terminal spit out lots of text showing the status of the node and the graphql engine. it's when you see:\n\nsubquery-node_1   | 2021-06-06t02:04:25.490z <fetch> info fetch block [1, 100]\n\n\nthat you know that the subquery node has started to synchronise.\n\n\n# summary\n\nnow that you've had an insight into what is happening under the covers, the question is where to from here? if you are feeling confident, you can jump into learning about how to create a project and learn more about the three key files. the manifest file, the graphql schema, and the mappings file.\n\notherwise, continue to our tutorials section where we look at how we can run this hello world example on subquery's hosted infrastructure, we'll look at modifying the start block, and we'll take a deeper dive at running subquery projects by running readily available and open source projects.",charsets:{cjk:!0}},{title:"Running SubQuery Locally",frontmatter:{},regularPath:"/run/run.html",relativePath:"run/run.md",key:"v-09dfd14d",path:"/run/run.html",headers:[{level:2,title:"Using Docker",slug:"using-docker",normalizedTitle:"using docker",charIndex:392},{level:2,title:"Running an Indexer (subql/node)",slug:"running-an-indexer-subql-node",normalizedTitle:"running an indexer (subql/node)",charIndex:855},{level:3,title:"Installation",slug:"installation",normalizedTitle:"installation",charIndex:1215},{level:3,title:"Key Commands",slug:"key-commands",normalizedTitle:"key commands",charIndex:1498},{level:4,title:"Point to local project path",slug:"point-to-local-project-path",normalizedTitle:"point to local project path",charIndex:1668},{level:4,title:"Using a Dictionary",slug:"using-a-dictionary",normalizedTitle:"using a dictionary",charIndex:1733},{level:4,title:"Connect to database",slug:"connect-to-database",normalizedTitle:"connect to database",charIndex:2410},{level:4,title:"Specify a configuration file",slug:"specify-a-configuration-file",normalizedTitle:"specify a configuration file",charIndex:2809},{level:4,title:"Change the block fetching batch size",slug:"change-the-block-fetching-batch-size",normalizedTitle:"change the block fetching batch size",charIndex:3106},{level:4,title:"Local mode",slug:"local-mode",normalizedTitle:"local mode",charIndex:3544},{level:2,title:"Running a Query Service (subql/query)",slug:"running-a-query-service-subql-query",normalizedTitle:"running a query service (subql/query)",charIndex:3874},{level:3,title:"Installation",slug:"installation-2",normalizedTitle:"installation",charIndex:1215},{level:3,title:"Running the Query service",slug:"running-the-query-service",normalizedTitle:"running the query service",charIndex:4111}],lastUpdated:"8/2/2021, 10:56:41 PM",headersStr:"Using Docker Running an Indexer (subql/node) Installation Key Commands Point to local project path Using a Dictionary Connect to database Specify a configuration file Change the block fetching batch size Local mode Running a Query Service (subql/query) Installation Running the Query service",content:"# Running SubQuery Locally\n\nThis guide works through how to run a local SubQuery node on your infrastructure, which includes both the indexer and query service. Don't want to worry about running your own SubQuery infrastructure? SubQuery provides a managed hosted service to the community for free. Follow our publishing guide to see how you can upload your project to SubQuery Projects.\n\n\n# Using Docker\n\nAn alternative solution is to run a Docker Container, defined by the docker-compose.yml file. For a new project that has been just initialised you won't need to change anything here.\n\nUnder the project directory run the following command:\n\ndocker-compose pull && docker-compose up\n\n\nIt may take some time to download the required packages (@subql/node, @subql/query, and Postgres) for the first time but soon you'll see a running SubQuery node.\n\n\n# Running an Indexer (subql/node)\n\nRequirements:\n\n * Postgres database (version 12 or higher). While the SubQuery node is indexing the blockchain, the extracted data is stored in an external database instance.\n\nA SubQuery node is an implementation that extracts substrate-based blockchain data per the SubQuery project and saves it into a Postgres database.\n\n\n# Installation\n\n# NPM\nnpm install -g @subql/node\n\n\nPlease note that we DO NOT encourage the use of yarn global due to its poor dependency management which may lead to an errors down the line.\n\nOnce installed, you can start a node with the following command:\n\nsubql-node <command>\n\n\n\n# Key Commands\n\nThe following commands will assist you to complete the configuration of a SubQuery node and begin indexing. To find out more, you can always run --help.\n\n# Point to local project path\n\nsubql-node -f your-project-path\n\n\n# Using a Dictionary\n\nUsing a full chain dictionary can dramatically speed up the processing of a SubQuery project during testing or during your first index. In some cases, we've seen indexing performance increases of up to 10x.\n\nA full chain dictionary pre-indexes the location of all events and extrinsics within the specific chain and allows your node service to skip to relevant locations when indexing rather than inspecting each block.\n\nYou can add the dictionary endpoint in your project.yaml file (see Manifest File), or specify it at run time using the following command:\n\nsubql-node --network-dictionary=https://api.subquery.network/sq/subquery/dictionary-polkadot\n\n\n# Connect to database\n\nexport DB_USER=postgres\nexport DB_PASS=postgres\nexport DB_DATABASE=postgres\nexport DB_HOST=localhost\nexport DB_POST=5432\nsubql-node -f your-project-path \n\n\nDepending on the configuration of your Postgres database (e.g. a different database password), please ensure also that both the indexer (subql/node) and the query service (subql/query) can establish a connection to it.\n\n# Specify a configuration file\n\nsubql-node -c your-project-config.yml\n\n\nThis will point the query node to a configuration file which can be in YAML or JSON format. Check out the example below.\n\nsubquery: ../../../../subql-example/extrinsics\nsubqueryName: extrinsics\nbatchSize:100\nlocalMode:true\n\n\n# Change the block fetching batch size\n\nsubql-node -f your-project-path --batch-size 200\n\nResult:\n[IndexerManager] fetch block [203, 402]\n[IndexerManager] fetch block [403, 602]\n\n\nWhen the indexer first indexes the chain, fetching single blocks will significantly decrease the performance. Increasing the batch size to adjust the number of blocks fetched will decrease the overall processing time. The current default batch size is 100.\n\n# Local mode\n\nsubql-node -f your-project-path --local\n\n\nFor debugging purposes, users can run the node in local mode. Switching to local model will create Postgres tables in the default schema public.\n\nIf local mode is not used, a new Postgres schema with the initial subquery_ and corresponding project tables will be created.\n\n\n# Running a Query Service (subql/query)\n\n\n# Installation\n\n# NPM\nnpm install -g @subql/query\n\n\nPlease note that we DO NOT encourage the use of yarn global due to its poor dependency management which may lead to an errors down the line.\n\n\n# Running the Query service\n\nexport DB_HOST=localhost\nsubql-query --name <project_name> --playground\n\n\nMake sure the project name is the same as the project name when you initialize the project. Also, check the environment variables are correct.\n\nAfter running the subql-query service successfully, open your browser and head to http://localhost:3000. You should see a GraphQL playground showing in the Explorer and the schema that is ready to query.",normalizedContent:"# running subquery locally\n\nthis guide works through how to run a local subquery node on your infrastructure, which includes both the indexer and query service. don't want to worry about running your own subquery infrastructure? subquery provides a managed hosted service to the community for free. follow our publishing guide to see how you can upload your project to subquery projects.\n\n\n# using docker\n\nan alternative solution is to run a docker container, defined by the docker-compose.yml file. for a new project that has been just initialised you won't need to change anything here.\n\nunder the project directory run the following command:\n\ndocker-compose pull && docker-compose up\n\n\nit may take some time to download the required packages (@subql/node, @subql/query, and postgres) for the first time but soon you'll see a running subquery node.\n\n\n# running an indexer (subql/node)\n\nrequirements:\n\n * postgres database (version 12 or higher). while the subquery node is indexing the blockchain, the extracted data is stored in an external database instance.\n\na subquery node is an implementation that extracts substrate-based blockchain data per the subquery project and saves it into a postgres database.\n\n\n# installation\n\n# npm\nnpm install -g @subql/node\n\n\nplease note that we do not encourage the use of yarn global due to its poor dependency management which may lead to an errors down the line.\n\nonce installed, you can start a node with the following command:\n\nsubql-node <command>\n\n\n\n# key commands\n\nthe following commands will assist you to complete the configuration of a subquery node and begin indexing. to find out more, you can always run --help.\n\n# point to local project path\n\nsubql-node -f your-project-path\n\n\n# using a dictionary\n\nusing a full chain dictionary can dramatically speed up the processing of a subquery project during testing or during your first index. in some cases, we've seen indexing performance increases of up to 10x.\n\na full chain dictionary pre-indexes the location of all events and extrinsics within the specific chain and allows your node service to skip to relevant locations when indexing rather than inspecting each block.\n\nyou can add the dictionary endpoint in your project.yaml file (see manifest file), or specify it at run time using the following command:\n\nsubql-node --network-dictionary=https://api.subquery.network/sq/subquery/dictionary-polkadot\n\n\n# connect to database\n\nexport db_user=postgres\nexport db_pass=postgres\nexport db_database=postgres\nexport db_host=localhost\nexport db_post=5432\nsubql-node -f your-project-path \n\n\ndepending on the configuration of your postgres database (e.g. a different database password), please ensure also that both the indexer (subql/node) and the query service (subql/query) can establish a connection to it.\n\n# specify a configuration file\n\nsubql-node -c your-project-config.yml\n\n\nthis will point the query node to a configuration file which can be in yaml or json format. check out the example below.\n\nsubquery: ../../../../subql-example/extrinsics\nsubqueryname: extrinsics\nbatchsize:100\nlocalmode:true\n\n\n# change the block fetching batch size\n\nsubql-node -f your-project-path --batch-size 200\n\nresult:\n[indexermanager] fetch block [203, 402]\n[indexermanager] fetch block [403, 602]\n\n\nwhen the indexer first indexes the chain, fetching single blocks will significantly decrease the performance. increasing the batch size to adjust the number of blocks fetched will decrease the overall processing time. the current default batch size is 100.\n\n# local mode\n\nsubql-node -f your-project-path --local\n\n\nfor debugging purposes, users can run the node in local mode. switching to local model will create postgres tables in the default schema public.\n\nif local mode is not used, a new postgres schema with the initial subquery_ and corresponding project tables will be created.\n\n\n# running a query service (subql/query)\n\n\n# installation\n\n# npm\nnpm install -g @subql/query\n\n\nplease note that we do not encourage the use of yarn global due to its poor dependency management which may lead to an errors down the line.\n\n\n# running the query service\n\nexport db_host=localhost\nsubql-query --name <project_name> --playground\n\n\nmake sure the project name is the same as the project name when you initialize the project. also, check the environment variables are correct.\n\nafter running the subql-query service successfully, open your browser and head to http://localhost:3000. you should see a graphql playground showing in the explorer and the schema that is ready to query.",charsets:{}},{title:"The Sandbox",frontmatter:{},regularPath:"/run/sandbox.html",relativePath:"run/sandbox.md",key:"v-07cf064d",path:"/run/sandbox.html",headers:[{level:2,title:"Restriction",slug:"restriction",normalizedTitle:"restriction",charIndex:742}],lastUpdated:"8/2/2021, 10:56:41 PM",headersStr:"Restriction",content:"# The Sandbox\n\nIn our envisioned usage scenario, the SubQuery node is usually run by a trusted host, and the code of the SubQuery project submitted by the user to the node is not entirely trustworthy.\n\nSome malicious code is likely to attack the host or even compromise it, and cause damage to the data of other projects in the same host. Therefore, we use the VM2 sandbox secured mechanism to reduce risks. This:\n\n * Runs untrusted code securely in an isolated context and malicious code will not access the network and file system of the host unless through the exposed interface we injected into the sandbox.\n\n * Securely calls methods and exchanges data and callbacks between sandboxes.\n\n * Is immune to many known methods of attack.\n\n\n# Restriction\n\n * To limit access to certain built-in modules, only assert, buffer, crypto,util and path are whitelisted.\n\n * We support 3rd party modules written in CommonJS and hybrid libraries like @polkadot/* that use ESM as default.\n\n * Any modules using HTTP and WebSocket are forbidden.",normalizedContent:"# the sandbox\n\nin our envisioned usage scenario, the subquery node is usually run by a trusted host, and the code of the subquery project submitted by the user to the node is not entirely trustworthy.\n\nsome malicious code is likely to attack the host or even compromise it, and cause damage to the data of other projects in the same host. therefore, we use the vm2 sandbox secured mechanism to reduce risks. this:\n\n * runs untrusted code securely in an isolated context and malicious code will not access the network and file system of the host unless through the exposed interface we injected into the sandbox.\n\n * securely calls methods and exchanges data and callbacks between sandboxes.\n\n * is immune to many known methods of attack.\n\n\n# restriction\n\n * to limit access to certain built-in modules, only assert, buffer, crypto,util and path are whitelisted.\n\n * we support 3rd party modules written in commonjs and hybrid libraries like @polkadot/* that use esm as default.\n\n * any modules using http and websocket are forbidden.",charsets:{}},{title:"Tutorials",frontmatter:{},regularPath:"/tutorials_examples/howto.html",relativePath:"tutorials_examples/howto.md",key:"v-462cc17b",path:"/tutorials_examples/howto.html",headers:[{level:2,title:"How to start at a different block height?",slug:"how-to-start-at-a-different-block-height",normalizedTitle:"how to start at a different block height?",charIndex:16},{level:3,title:"Video guide",slug:"video-guide",normalizedTitle:"video guide",charIndex:62},{level:3,title:"Introduction",slug:"introduction",normalizedTitle:"introduction",charIndex:78},{level:3,title:"Why not start from zero?",slug:"why-not-start-from-zero",normalizedTitle:"why not start from zero?",charIndex:928},{level:3,title:"What are the drawbacks of not starting from zero?",slug:"what-are-the-drawbacks-of-not-starting-from-zero",normalizedTitle:"what are the drawbacks of not starting from zero?",charIndex:1235},{level:3,title:"How to figure out the current blockchain height?",slug:"how-to-figure-out-the-current-blockchain-height",normalizedTitle:"how to figure out the current blockchain height?",charIndex:1415},{level:3,title:"Do I have to do a rebuild or a codegen?",slug:"do-i-have-to-do-a-rebuild-or-a-codegen",normalizedTitle:"do i have to do a rebuild or a codegen?",charIndex:1609},{level:2,title:"How to change the blockchain fetching batch size?",slug:"how-to-change-the-blockchain-fetching-batch-size",normalizedTitle:"how to change the blockchain fetching batch size?",charIndex:1814},{level:3,title:"Video guide",slug:"video-guide-2",normalizedTitle:"video guide",charIndex:62},{level:3,title:"Introduction",slug:"introduction-2",normalizedTitle:"introduction",charIndex:78},{level:3,title:"Why change the batch size?",slug:"why-change-the-batch-size",normalizedTitle:"why change the batch size?",charIndex:2509}],lastUpdated:"8/2/2021, 10:56:41 PM",headersStr:"How to start at a different block height? Video guide Introduction Why not start from zero? What are the drawbacks of not starting from zero? How to figure out the current blockchain height? Do I have to do a rebuild or a codegen? How to change the blockchain fetching batch size? Video guide Introduction Why change the batch size?",content:'# Tutorials\n\n\n# How to start at a different block height?\n\n\n# Video guide\n\n\n# Introduction\n\nBy default, all starter projects start synchronising the blockchain from the genesis block. In otherwords, from block 1. For large blockchains, this can typically take days or even weeks to fully synchronise.\n\nTo start a SubQuery node synchronising from a non-zero height, all you have to do is to modify your project.yaml file and change the startBlock key.\n\nBelow is a project.yaml file where the start block has been set to 1,000,000\n\nspecVersion: 0.0.1\ndescription: ""\nrepository: ""\nschema: ./schema.graphql\nnetwork:\n  endpoint: wss://polkadot.api.onfinality.io/public-ws\n  dictionary: https://api.subquery.network/sq/subquery/dictionary-polkadot\ndataSources:\n  - name: main\n    kind: substrate/Runtime\n    startBlock: 1000000\n    mapping:\n      handlers:\n        - handler: handleBlock\n          kind: substrate/BlockHandler\n\n\n\n# Why not start from zero?\n\nThe main reason is that it can reduce the time to synchronise the blockchain. This means that if you are only interested in transactions in the last 3 months, you can only synchronise the last 3 months worth meaning less waiting time and you can start your development faster.\n\n\n# What are the drawbacks of not starting from zero?\n\nThe most obvious drawback will be that you won’t be able to query for data on the blockchain for blocks that you don’t have.\n\n\n# How to figure out the current blockchain height?\n\nIf you are using the Polkadot network, you can visit https://polkascan.io/, select the network, and then view the "Finalised Block" figure.\n\n\n# Do I have to do a rebuild or a codegen?\n\nNo. Because you are modifying the project.yaml file, which is essentially a configuration file, you will not have to rebuild or regenerate the typescript code.\n\n\n# How to change the blockchain fetching batch size?\n\n\n# Video guide\n\n\n# Introduction\n\nThe default batch size is 100, but this can be changed by using the extra command --batch-size=xx.\n\nYou need to this to the command line as an extra flag or if you are using Docker, modify the docker-compose.yml with:\n\nsubquery-node:\n    image: onfinality/subql-node:latest\n    depends_on:\n      - "postgres"\n    restart: always\n    environment:\n      DB_USER: postgres\n      DB_PASS: postgres\n      DB_DATABASE: postgres\n      DB_HOST: postgres\n      DB_PORT: 5432\n    volumes:\n      - ./:/app\n    command:\n      - -f=/app\n      - --local\n      - --batch-size=50\n\n\n\nThis example sets the batch size to 50.\n\n\n# Why change the batch size?\n\nUsing a smaller batch size can reduce memory usage and not leave users hanging for large queries. In otherwords, your application can be more responsive. However, more API calls are being made so if you are being charged on an I/O basis or if you have API limits somewhere in your chain, this could work to your disadvantage.',normalizedContent:'# tutorials\n\n\n# how to start at a different block height?\n\n\n# video guide\n\n\n# introduction\n\nby default, all starter projects start synchronising the blockchain from the genesis block. in otherwords, from block 1. for large blockchains, this can typically take days or even weeks to fully synchronise.\n\nto start a subquery node synchronising from a non-zero height, all you have to do is to modify your project.yaml file and change the startblock key.\n\nbelow is a project.yaml file where the start block has been set to 1,000,000\n\nspecversion: 0.0.1\ndescription: ""\nrepository: ""\nschema: ./schema.graphql\nnetwork:\n  endpoint: wss://polkadot.api.onfinality.io/public-ws\n  dictionary: https://api.subquery.network/sq/subquery/dictionary-polkadot\ndatasources:\n  - name: main\n    kind: substrate/runtime\n    startblock: 1000000\n    mapping:\n      handlers:\n        - handler: handleblock\n          kind: substrate/blockhandler\n\n\n\n# why not start from zero?\n\nthe main reason is that it can reduce the time to synchronise the blockchain. this means that if you are only interested in transactions in the last 3 months, you can only synchronise the last 3 months worth meaning less waiting time and you can start your development faster.\n\n\n# what are the drawbacks of not starting from zero?\n\nthe most obvious drawback will be that you won’t be able to query for data on the blockchain for blocks that you don’t have.\n\n\n# how to figure out the current blockchain height?\n\nif you are using the polkadot network, you can visit https://polkascan.io/, select the network, and then view the "finalised block" figure.\n\n\n# do i have to do a rebuild or a codegen?\n\nno. because you are modifying the project.yaml file, which is essentially a configuration file, you will not have to rebuild or regenerate the typescript code.\n\n\n# how to change the blockchain fetching batch size?\n\n\n# video guide\n\n\n# introduction\n\nthe default batch size is 100, but this can be changed by using the extra command --batch-size=xx.\n\nyou need to this to the command line as an extra flag or if you are using docker, modify the docker-compose.yml with:\n\nsubquery-node:\n    image: onfinality/subql-node:latest\n    depends_on:\n      - "postgres"\n    restart: always\n    environment:\n      db_user: postgres\n      db_pass: postgres\n      db_database: postgres\n      db_host: postgres\n      db_port: 5432\n    volumes:\n      - ./:/app\n    command:\n      - -f=/app\n      - --local\n      - --batch-size=50\n\n\n\nthis example sets the batch size to 50.\n\n\n# why change the batch size?\n\nusing a smaller batch size can reduce memory usage and not leave users hanging for large queries. in otherwords, your application can be more responsive. however, more api calls are being made so if you are being charged on an i/o basis or if you have api limits somewhere in your chain, this could work to your disadvantage.',charsets:{}},{title:"Tutorials & Examples",frontmatter:{},regularPath:"/tutorials_examples/introduction.html",relativePath:"tutorials_examples/introduction.md",key:"v-65affcad",path:"/tutorials_examples/introduction.html",headers:[{level:2,title:"SubQuery Examples",slug:"subquery-examples",normalizedTitle:"subquery examples",charIndex:155}],lastUpdated:"8/2/2021, 10:56:41 PM",headersStr:"SubQuery Examples",content:"# Tutorials & Examples\n\nHere we will list our tutorials and explore various examples to help you get up and running in the easiest and fastest manner.\n\n\n# SubQuery Examples\n\nEXAMPLE                     DESCRIPTION                                                    TOPICS\nextrinsic-finalized-block   Indexes extrinsics so they can be queried by their hash        The simplest example with a block handler function\nblock-timestamp             Indexes timestamp of each finalized block                      Another simple call handler function\nvalidator-threshold         Indexes the least staking amount required for a validator to   More complicated block handler function that makes external\n                            be elected.                                                    calls to the @polkadot/api for additional on-chain data\nsum-reward                  Indexes staking bond, rewards, and slashes from the events     More complicated event handlers with a one-to-many\n                            of finalized block                                             relationship\nentity-relation             Indexes balance transfers between accounts, also indexes       One-to-many and many-to-many relationships and complicated\n                            utility batchAll to find out the content of the extrinsic      extrinsic handling\n                            calls\nkitty                       Indexes birth info of kitties.                                 Complex call handlers and event handlers, with data indexed\n                                                                                           from a custom chain",normalizedContent:"# tutorials & examples\n\nhere we will list our tutorials and explore various examples to help you get up and running in the easiest and fastest manner.\n\n\n# subquery examples\n\nexample                     description                                                    topics\nextrinsic-finalized-block   indexes extrinsics so they can be queried by their hash        the simplest example with a block handler function\nblock-timestamp             indexes timestamp of each finalized block                      another simple call handler function\nvalidator-threshold         indexes the least staking amount required for a validator to   more complicated block handler function that makes external\n                            be elected.                                                    calls to the @polkadot/api for additional on-chain data\nsum-reward                  indexes staking bond, rewards, and slashes from the events     more complicated event handlers with a one-to-many\n                            of finalized block                                             relationship\nentity-relation             indexes balance transfers between accounts, also indexes       one-to-many and many-to-many relationships and complicated\n                            utility batchall to find out the content of the extrinsic      extrinsic handling\n                            calls\nkitty                       indexes birth info of kitties.                                 complex call handlers and event handlers, with data indexed\n                                                                                           from a custom chain",charsets:{}},{title:"Terminology",frontmatter:{},regularPath:"/tutorials_examples/terminology.html",relativePath:"tutorials_examples/terminology.md",key:"v-05bf836b",path:"/tutorials_examples/terminology.html",headers:[{level:2,title:"Terminology",slug:"terminology",normalizedTitle:"terminology",charIndex:2}],lastUpdated:"8/2/2021, 10:56:41 PM",headersStr:"Terminology",content:"# Terminology\n\n * SubQuery Project (where the magic happens): A definition (@subql/cli) of how a SubQuery Node should traverse and aggregate a projects network and how the data should the transformed and stored to enable useful GraphQL queries\n * SubQuery Node (where the work is done): A package (@subql/node) that will accept a SubQuery project definiton, and run a node that constantly indexes a connected network to a database\n * SubQuery Query Service (where we get the data from): A package (@subql/query) that interacts with the GraphQL API of a deployed SubQuery node to query and view the indexed data\n * GraphQL (how we query the data): A query langage for APIs that is specifically suited for flexible graph based data - see graphql.org",normalizedContent:"# terminology\n\n * subquery project (where the magic happens): a definition (@subql/cli) of how a subquery node should traverse and aggregate a projects network and how the data should the transformed and stored to enable useful graphql queries\n * subquery node (where the work is done): a package (@subql/node) that will accept a subquery project definiton, and run a node that constantly indexes a connected network to a database\n * subquery query service (where we get the data from): a package (@subql/query) that interacts with the graphql api of a deployed subquery node to query and view the indexed data\n * graphql (how we query the data): a query langage for apis that is specifically suited for flexible graph based data - see graphql.org",charsets:{}}],themeConfig:{logo:"/assets/img/logo.png",logoLink:"https://subquery.network",lastUpdated:!0,nav:[{text:"Explorer",link:"https://explorer.subquery.network/",target:"_blank",rel:""},{text:"Projects",link:"https://project.subquery.network/",target:"_blank",rel:""},{text:"Documentation",link:"/"},{text:"GitHub",link:"https://github.com/subquery/subql",target:"_blank",rel:""}],sidebarDepth:2,sidebar:[{title:"Welcome to SubQuery",path:"/"},{title:"Quick Start Guide",path:"/quickstart/quickstart",children:["/quickstart/quickstart.md","/quickstart/helloworld-localhost.md","/quickstart/understanding-helloworld.md","/quickstart/helloworld-hosted.md"]},{title:"Installation",path:"/install/install",children:["/install/install.md"]},{title:"Create a Project",path:"/create/introduction",children:["/create/introduction.md","/create/manifest.md","/create/graphql.md","/create/mapping.md"]},{title:"Run a Project",path:"/run/run",children:["/run/run.md","/run/sandbox.md"]},{title:"Publish a Project",path:"/publish/publish",children:["/publish/publish.md","/publish/upgrade.md","/publish/connect.md"]},{title:"Query your Data",path:"/query/query",children:["/query/query.md","/query/graphql.md"]},{title:"Tutorials & Examples",path:"/tutorials_examples/introduction",children:["/tutorials_examples/howto.md","/tutorials_examples/terminology.md"]},{title:"FAQs",path:"/faqs/faqs.md",children:[]},{title:"Miscellaneous",path:"/miscellaneous/contributing",children:["/miscellaneous/contributing.md","/miscellaneous/social_media.md","/miscellaneous/branding.md","/miscellaneous/ambassadors.md"]}]},locales:{"/":{lang:"English",title:"SubQuery Docs",description:"Explore and transform your chain data to build intuitive dApps faster!.",path:"/"}}};n(303);Lo.component("Badge",(function(){return Promise.all([n.e(0),n.e(3)]).then(n.bind(null,406))})),Lo.component("CodeBlock",(function(){return Promise.all([n.e(0),n.e(4)]).then(n.bind(null,379))})),Lo.component("CodeGroup",(function(){return Promise.all([n.e(0),n.e(5)]).then(n.bind(null,380))}));n(304),n(187);var ds=[{},function(e){e.Vue.mixin({computed:{$dataBlock:function(){return this.$options.__data__block__}}})},{},{},function(e){e.router}],hs=[];function ps(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}n(177);function fs(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function ys(e,t,n){return t&&fs(e.prototype,t),n&&fs(e,n),e}n(168);n(159);function ms(e,t){return(ms=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}n(160);function gs(e){return(gs=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var bs=n(165),vs=n.n(bs);function ws(e,t){return!t||"object"!==vs()(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function ks(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,r=gs(e);if(t){var o=gs(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return ws(this,n)}}var xs=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&ms(e,t)}(n,e);var t=ks(n);function n(){return ps(this,n),t.apply(this,arguments)}return n}(function(){function e(){ps(this,e),this.store=new Lo({data:{state:{}}})}return ys(e,[{key:"$get",value:function(e){return this.store.state[e]}},{key:"$set",value:function(e,t){Lo.set(this.store.state,e,t)}},{key:"$emit",value:function(){var e;(e=this.store).$emit.apply(e,arguments)}},{key:"$on",value:function(){var e;(e=this.store).$on.apply(e,arguments)}}]),e}());Object.assign(xs.prototype,{getPageAsyncComponent:Da,getLayoutAsyncComponent:Ha,getAsyncComponent:Ba,getVueComponent:Fa});var js={install:function(e){var t=new xs;e.$vuepress=t,e.prototype.$vuepress=t}};function qs(e){e.beforeEach((function(t,n,r){if(Ss(e,t.path))r();else if(/(\/|\.html)$/.test(t.path))if(/\/$/.test(t.path)){var o=t.path.replace(/\/$/,"")+".html";Ss(e,o)?r(o):r()}else r();else{var i=t.path+"/",a=t.path+".html";Ss(e,a)?r(a):Ss(e,i)?r(i):r()}}))}function Ss(e,t){var n=t.toLowerCase();return e.options.routes.some((function(e){return e.path.toLowerCase()===n}))}var _s={props:{pageKey:String,slotKey:{type:String,default:"default"}},render:function(e){var t=this.pageKey||this.$parent.$page.key;return Ga("pageKey",t),Lo.component(t)||Lo.component(t,Da(t)),Lo.component(t)?e(t):e("")}},Ts={functional:!0,props:{slotKey:String,required:!0},render:function(e,t){var n=t.props,r=t.slots;return e("div",{class:["content__".concat(n.slotKey)]},r()[n.slotKey])}},Ps={computed:{openInNewWindowTitle:function(){return this.$themeLocaleConfig.openNewWindowText||"(opens new window)"}}},Os=(n(306),n(307),Object(ss.a)(Ps,(function(){var e=this.$createElement,t=this._self._c||e;return t("span",[t("svg",{staticClass:"icon outbound",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"}},[t("path",{attrs:{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}}),this._v(" "),t("polygon",{attrs:{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}})]),this._v(" "),t("span",{staticClass:"sr-only"},[this._v(this._s(this.openInNewWindowTitle))])])}),[],!1,null,null,null).exports);function Is(){return(Is=Object(r.a)(regeneratorRuntime.mark((function e(t){var n,r,o,i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n="undefined"!=typeof window&&window.__VUEPRESS_ROUTER_BASE__?window.__VUEPRESS_ROUTER_BASE__:cs.routerBase||cs.base,qs(r=new qa({base:n,mode:"history",fallback:!1,routes:ls,scrollBehavior:function(e,t,n){return n||(e.hash?!Lo.$vuepress.$get("disableScrollBehavior")&&{selector:decodeURIComponent(e.hash)}:{x:0,y:0})}})),o={},e.prev=4,e.next=7,Promise.all(ds.filter((function(e){return"function"==typeof e})).map((function(e){return e({Vue:Lo,options:o,router:r,siteData:cs,isServer:t})})));case 7:e.next=12;break;case 9:e.prev=9,e.t0=e.catch(4),console.error(e.t0);case 12:return i=new Lo(Object.assign(o,{router:r,render:function(e){return e("div",{attrs:{id:"app"}},[e("RouterView",{ref:"layout"}),e("div",{class:"global-ui"},hs.map((function(t){return e(t)})))])}})),e.abrupt("return",{app:i,router:r});case 14:case"end":return e.stop()}}),e,null,[[4,9]])})))).apply(this,arguments)}Lo.config.productionTip=!1,Lo.use(qa),Lo.use(js),Lo.mixin(function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Lo;Sa(t),n.$vuepress.$set("siteData",t);var r=e(n.$vuepress.$get("siteData")),o=new r,i=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(o)),a={};return Object.keys(i).reduce((function(e,t){return t.startsWith("$")&&(e[t]=i[t].get),e}),a),{computed:a}}((function(e){return function(){function t(){ps(this,t)}return ys(t,[{key:"setPage",value:function(e){this.__page=e}},{key:"$site",get:function(){return e}},{key:"$themeConfig",get:function(){return this.$site.themeConfig}},{key:"$frontmatter",get:function(){return this.$page.frontmatter}},{key:"$localeConfig",get:function(){var e,t,n=this.$site.locales,r=void 0===n?{}:n;for(var o in r)"/"===o?t=r[o]:0===this.$page.path.indexOf(o)&&(e=r[o]);return e||t||{}}},{key:"$siteTitle",get:function(){return this.$localeConfig.title||this.$site.title||""}},{key:"$canonicalUrl",get:function(){var e=this.$page.frontmatter.canonicalUrl;return"string"==typeof e&&e}},{key:"$title",get:function(){var e=this.$page,t=this.$page.frontmatter.metaTitle;if("string"==typeof t)return t;var n=this.$siteTitle,r=e.frontmatter.home?null:e.frontmatter.title||e.title;return n?r?r+" | "+n:n:r||"VuePress"}},{key:"$description",get:function(){var e=function(e){if(e){var t=e.filter((function(e){return"description"===e.name}))[0];if(t)return t.content}}(this.$page.frontmatter.meta);return e||(this.$page.frontmatter.description||this.$localeConfig.description||this.$site.description||"")}},{key:"$lang",get:function(){return this.$page.frontmatter.lang||this.$localeConfig.lang||"en-US"}},{key:"$localePath",get:function(){return this.$localeConfig.path||"/"}},{key:"$themeLocaleConfig",get:function(){return(this.$site.themeConfig.locales||{})[this.$localePath]||{}}},{key:"$page",get:function(){return this.__page?this.__page:function(e,t){for(var n=0;n<e.length;n++){var r=e[n];if(r.path.toLowerCase()===t.toLowerCase())return r}return{path:"",frontmatter:{}}}(this.$site.pages,this.$route.path)}}]),t}()}),cs)),Lo.component("Content",_s),Lo.component("ContentSlotsDistributor",Ts),Lo.component("OutboundLink",Os),Lo.component("ClientOnly",{functional:!0,render:function(e,t){var n=t.parent,r=t.children;if(n._isMounted)return r;n.$once("hook:mounted",(function(){n.$forceUpdate()}))}}),Lo.component("Layout",Ha("Layout")),Lo.component("NotFound",Ha("NotFound")),Lo.prototype.$withBase=function(e){var t=this.$site.base;return"/"===e.charAt(0)?t+e.slice(1):e},window.__VUEPRESS__={version:"1.8.2",hash:"acc5324"},function(e){return Is.apply(this,arguments)}(!1).then((function(e){var t=e.app;e.router.onReady((function(){t.$mount("#app")}))}))}]);