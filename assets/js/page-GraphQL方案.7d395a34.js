(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{896:function(s,t,a){"use strict";a.r(t);var n=a(1),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"graphql方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#graphql方案"}},[s._v("#")]),s._v(" GraphQL方案")]),s._v(" "),a("h2",{attrs:{id:"定义实体"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义实体"}},[s._v("#")]),s._v(" 定义实体")]),s._v(" "),a("p",[a("code",[s._v("schema.graphql")]),s._v(" 文件定义了各种GraphQL schemas。 由于GraphQL查询语言的工作方式，方案文件基本上决定了您从 SubQuery 获取数据的形状。 要更多地了解如何使用 GraphQL schema 语言写入，我们建议查看 "),a("a",{attrs:{href:"https://graphql.org/learn/schema/#type-language",target:"_blank",rel:"noopener noreferrer"}},[s._v("Schemas 和 Type"),a("OutboundLink")],1),s._v("。")]),s._v(" "),a("p",[a("strong",[s._v("重要：当您对模式文件做任何更改时， 请确保你重新生成你的类型目录，命令 "),a("code",[s._v("yarn codegen")])])]),s._v(" "),a("h3",{attrs:{id:"实体"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实体"}},[s._v("#")]),s._v(" 实体")]),s._v(" "),a("p",[s._v("每个实体必须使用 "),a("code",[s._v("ID!")]),s._v(" 类型定义其必填字段 "),a("code",[s._v("id")]),s._v("。 它被用作同类所有实体的主要钥匙和独特之处。")]),s._v(" "),a("p",[s._v("实体中不可用字段由 `表示！ 请参阅下面的示例：")]),a("p"),s._v(" "),a("pre",[a("code",{staticClass:"graphql"},[s._v("type Example @entity {\n  id: ID!  # id field is always required and must look like this\n  name: String! # This is a required field\n  address: String # This is an optional field\n}\n`")])]),s._v(" "),a("h3",{attrs:{id:"支持的标尺和类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#支持的标尺和类型"}},[s._v("#")]),s._v(" 支持的标尺和类型")]),s._v(" "),a("p",[s._v("我们目前支持流量缩放类型：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("ID")])]),s._v(" "),a("li",[a("code",[s._v("Int")])]),s._v(" "),a("li",[a("code",[s._v("String")])]),s._v(" "),a("li",[a("code",[s._v("BigInt")])]),s._v(" "),a("li",[a("code",[s._v("Date")])]),s._v(" "),a("li",[a("code",[s._v("Boolean")])]),s._v(" "),a("li",[a("code",[s._v("<EntityName>")]),s._v(" 对于嵌套关系实体，您可以使用定义实体的名称作为字段之一。 请在 "),a("a",{attrs:{href:"#entity-relationships"}},[s._v("实体关系")]),s._v(" 中查看。")]),s._v(" "),a("li",[a("code",[s._v("JSON")]),s._v(" 也可以存储结构化数据，请查看 "),a("a",{attrs:{href:"#json-type"}},[s._v("JSON 类型")])])]),s._v(" "),a("h2",{attrs:{id:"非主键领域索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#非主键领域索引"}},[s._v("#")]),s._v(" 非主键领域索引")]),s._v(" "),a("p",[s._v("为了提高查询性能，只需在非主键字段实现 "),a("code",[s._v("@index")]),s._v(" 注解，便可索引实体字段。")]),s._v(" "),a("p",[s._v("但是，我们不允许用户在任何 "),a("code",[s._v("JSON")]),s._v(" 对象上添加 "),a("a",{attrs:{href:"#json-type"}},[s._v("@index")]),s._v(" 注释。 默认情况下，索引会自动添加到外键和 JSON 字段，但只是为了提高查询服务的性能。")]),s._v(" "),a("p",[s._v("这里就是一个例子。")]),s._v(" "),a("div",{staticClass:"language-graphql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-graphql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("User")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@entity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" String"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@index")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("unique")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# unique can be set to true or false")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("title")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Title"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Indexes are automatically added to foreign key field ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Title")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@entity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("  \n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" String"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@index")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("unique")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("假定我们知道这个用户的名字，但我们不知道确切的 id 值。 而不是提取所有用户，然后通过名称过滤，我们可以在名称字段后面添加 "),a("code",[s._v("@index")]),s._v(" 这使查询速度更快，我们还可以通过 "),a("code",[s._v("的唯一性：真的")]),s._v(" 来确保唯一性。")]),s._v(" "),a("p",[a("strong",[s._v("如果字段不是唯一的，最大结果设置为 100")])]),s._v(" "),a("p",[s._v("当代码生成运行时，它将自动在 "),a("code",[s._v("用户")]),s._v(" 模型下创建 "),a("code",[s._v("getByname")]),s._v(" 。 和外键字段 "),a("code",[s._v("标题")]),s._v(" 将创建 "),a("code",[s._v("getByTitleId")]),s._v(" 方法 这两者都可以直接访问映射功能。")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 为标题实体准备记录 */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" title "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'id_1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Captain'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("div",{staticClass:"language-typescript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 映射函数中的处理程序")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("User"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"../types/models/User"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("Title"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"../types/models/Title"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" jack "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" User"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getByName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Jack Sparrow'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" captainTitle "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" Title"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getByName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Captain'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" pirateLords "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" User"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getByTitleId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("captainTitle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// List of all Captains")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h2",{attrs:{id:"实体关系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实体关系"}},[s._v("#")]),s._v(" 实体关系")]),s._v(" "),a("p",[s._v("一个实体往往与其他实体有嵌套的关系。 设置字段值为另一个实体名将默认定义这两个实体之间的一对一关系。")]),s._v(" "),a("p",[s._v("可以使用以下示例配置不同的实体关系(一对一、一对多和多对多)")]),s._v(" "),a("h3",{attrs:{id:"一对一关系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一对一关系"}},[s._v("#")]),s._v(" 一对一关系")]),s._v(" "),a("p",[s._v("只有一个实体被映射到另一个实体时，一对一的关系是缺省的。")]),s._v(" "),a("p",[s._v("例如：护照只属于一人，只有一本护照(例如)：")]),s._v(" "),a("div",{staticClass:"language-graphql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-graphql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@entity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n   "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("owner")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Person"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("owner")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Person"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("或者")]),s._v(" "),a("div",{staticClass:"language-graphql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-graphql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@entity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n   "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n\n   "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("passport")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Passport"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Passport")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@entity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("owner")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Person"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("h3",{attrs:{id:"一对多关系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一对多关系"}},[s._v("#")]),s._v(" 一对多关系")]),s._v(" "),a("p",[s._v("您可以使用方括号来表示字段类型包含多个实体。")]),s._v(" "),a("p",[s._v("示例：一个人可以有多个帐户。")]),s._v(" "),a("div",{staticClass:"language-graphql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-graphql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@entity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@entity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("accounts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Account"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Account")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@entity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("publicAddress")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" String"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("publicAddress")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" String"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h3",{attrs:{id:"多对多关系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多对多关系"}},[s._v("#")]),s._v(" 多对多关系")]),s._v(" "),a("p",[s._v("通过建立一个映射实体，将另外两个实体连接起来，可以实现多对多的关系。")]),s._v(" "),a("p",[s._v("示例：每个人都是多个组的一部分(个人组)，还有多个不同的人(个人组)。")]),s._v(" "),a("div",{staticClass:"language-graphql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-graphql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@entity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" String"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@entity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" String"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("groups")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("PersonGroup"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PersonGroup")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@entity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Person"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("Group")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Group"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Group")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@entity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" String"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  人员"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("PersonGroup"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Person"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("Group")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Group"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Group")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@entity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" String"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("persons")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("PersonGroup"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br")])]),a("p",[s._v("此外，还可以在中间实体的多个领域创建同一实体的连接。")]),s._v(" "),a("p",[s._v("例如，一个帐户可能有多次转账，每次转账都有一个来源和目的地帐户。")]),s._v(" "),a("p",[s._v("这将通过 Transfer 表在两个 Accounts (from 和 to) 之间建立双向关系。")]),s._v(" "),a("div",{staticClass:"language-graphql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-graphql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Account")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@entity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("publicAddress")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" String"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Transfer")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@entity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("amount")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" BigInt\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Account"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("to")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Account"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("h3",{attrs:{id:"反向查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#反向查询"}},[s._v("#")]),s._v(" 反向查询")]),s._v(" "),a("p",[s._v("为了启用在一个实体上反向查找关系， 将 "),a("code",[s._v("@derivedFrom")]),s._v(" 附加到字段，并指向另一个实体的反向查找字段。")]),s._v(" "),a("p",[s._v("这将在可以查询的实体上创建一个虚拟字段。")]),s._v(" "),a("p",[s._v("“从”账户转账可从账户实体通过设定发送或接收的转账具有从相应字段或字段衍生出的价值。")]),s._v(" "),a("div",{staticClass:"language-graphql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-graphql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Account")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@entity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("publicAddress")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" String"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Account")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@entity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("publicAddress")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" String"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("sentTransfers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Transfer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@derivedFrom")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("field")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"from"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("receivedTransfers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Transfer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@derivedFrom")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("field")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"to"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Transfer")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@entity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("amount")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" BigInt\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Account"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("to")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Account"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("amount")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" BigInt\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Account"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("to")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Account"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])]),a("h2",{attrs:{id:"json-类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#json-类型"}},[s._v("#")]),s._v(" JSON 类型")]),s._v(" "),a("p",[s._v("我们支持将数据保存为 JSON 类型，这是存储结构化数据的一个快速方法。 我们会自动生成相应的 JSON 接口来查询此数据，并节省您的时间来定义和管理实体。")]),s._v(" "),a("p",[s._v("我们推荐用户在以下场景中使用 JSON 类型：")]),s._v(" "),a("ul",[a("li",[s._v("在一个单一领域储存结构化数据比创建多个单独实体更易管理。")]),s._v(" "),a("li",[s._v("保存任意键/值用户首选项 (其中值可以是布尔值、文本或数字，并且您不希望不同数据类型有单独的列)")]),s._v(" "),a("li",[s._v("模式不稳定且经常变化")])]),s._v(" "),a("h3",{attrs:{id:"定义-json-指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义-json-指令"}},[s._v("#")]),s._v(" 定义 JSON 指令")]),s._v(" "),a("p",[s._v("通过在实体中添加 "),a("code",[s._v("jsonField")]),s._v(" 注解来定义属性为 JSON 类型。 这将自动为您项目中 "),a("code",[s._v("types/interfaces.ts")]),s._v(" 下的所有 JSON 对象生成接口，您可以在映射函数中访问它们。")]),s._v(" "),a("p",[s._v("与实体不同，jsonField 指令对象不需要 "),a("code",[s._v("id")]),s._v(" 字段。 JSON对象也可以与其他JSON对象嵌套。")]),s._v(" "),a("div",{staticClass:"language-graphql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-graphql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AddressDetail")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@jsonField")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("street")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" String"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("district")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" String"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ContactCard")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@jsonField")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("phone")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" String"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("address")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" AddressDetail "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Nested JSON")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("User")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@entity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" \n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("contact")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("ContactCard"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Store a list of JSON objects")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("district")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" String"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("address")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" AddressDetail "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Nested JSON")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" \n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("contact")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("ContactCard"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Store a list of JSON objects")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])]),a("h3",{attrs:{id:"查询-json-字段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询-json-字段"}},[s._v("#")]),s._v(" 查询 JSON 字段")]),s._v(" "),a("p",[s._v("使用 JSON 类型的缺点对过滤时查询效率有轻微的影响， 每次进行文本搜索时，它都在整个实体上。")]),s._v(" "),a("p",[s._v("然而，我们的查询服务仍然可以接受这种影响。 这里是如何使用 "),a("code",[s._v("的示例在 JSON 字段的 GraphQL 查询中包含")]),s._v(" 操作员来找到拥有包含 '0064 ' 的电话号码的前5个用户。")]),s._v(" "),a("div",{staticClass:"language-graphql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-graphql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#要找到前5个用户自己的电话号码包含 '0064'。")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#To find the the first 5 users own phone numbers contains '0064'.")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("query")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("first")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("contactCard")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("contains")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("phone")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0064"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    nodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      id\n      contactCard\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);