(self.webpackChunksubql_mono=self.webpackChunksubql_mono||[]).push([[512],{914:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>e});const e={key:"v-e2325936",path:"/create/mapping.html",title:"Mapping",lang:"English",frontmatter:{},excerpt:"",headers:[{level:2,title:"Block Handler",slug:"block-handler",children:[]},{level:2,title:"Event Handler",slug:"event-handler",children:[]},{level:2,title:"Call Handler",slug:"call-handler",children:[]},{level:2,title:"Query States",slug:"query-states",children:[]},{level:2,title:"Modules and Libraries",slug:"modules-and-libraries",children:[{level:3,title:"Built-in modules",slug:"built-in-modules",children:[]},{level:3,title:"Third-party libraries",slug:"third-party-libraries",children:[]}]}],filePathRelative:"create/mapping.md",git:{updatedTime:1620191309e3,contributors:[]}}},2658:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>bn});var e=a(6252);const t=(0,e.uE)('<h1 id="mapping"><a class="header-anchor" href="#mapping">#</a> Mapping</h1><p>Mappings functions define how chain data is transformed in to the optimised GraphQL entities that we have previously defined in teh <code>schema.graphql</code> file.</p><p>Mappings are written in a subset of TypeScript called AssemblyScript which can be compiled to WASM (WebAssembly).</p><ul><li>Mappings are defined in the <code>src/mappings</code> directory and are exported as a function</li><li>These mappings are also exported in <code>src/index.ts</code></li><li>The mappings files are reference in <code>project.yaml</code> under the mapping handlers.</li></ul><p>There are three classes of mappings functions; <a href="#block-handler">Block handlers</a>, <a href="#event-handler">Event Handlers</a> and <a href="#call-handler">Call Handlers</a>.</p><h2 id="block-handler"><a class="header-anchor" href="#block-handler">#</a> Block Handler</h2><p>You can use block handlers to capture information each time a new block is attached to the Substrate chain, e.g. block number. To achieve this this, a defined BlockHandler will be called once for every block.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>SubstrateBlock<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@subql/types&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">handleBlock</span><span class="token punctuation">(</span>block<span class="token operator">:</span> SubstrateBlock<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>\n    <span class="token comment">// Create a new StarterEntity with the block hash as it&#39;s ID</span>\n    <span class="token keyword">const</span> record <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">starterEntity</span><span class="token punctuation">(</span>block<span class="token punctuation">.</span>block<span class="token punctuation">.</span>header<span class="token punctuation">.</span>hash<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    record<span class="token punctuation">.</span>field1 <span class="token operator">=</span> block<span class="token punctuation">.</span>block<span class="token punctuation">.</span>header<span class="token punctuation">.</span><span class="token builtin">number</span><span class="token punctuation">.</span><span class="token function">toNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">await</span> record<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>',8),p=(0,e.Uk)("A "),o={href:"https://github.com/OnFinality-io/subql/blob/a5ab06526dcffe5912206973583669c7f5b9fdc9/packages/types/src/interfaces.ts#L16",target:"_blank",rel:"noopener noreferrer"},l=(0,e.Uk)("SubstrateBlock"),c=(0,e.Uk)(" is an extended interface type of "),r={href:"https://polkadot.js.org/docs/api/cookbook/blocks/",target:"_blank",rel:"noopener noreferrer"},i=(0,e.Uk)("signedBlock"),u=(0,e.Uk)(", but also includes the "),k=(0,e.Wm)("code",null,"specVersion",-1),d=(0,e.Uk)(" and "),h=(0,e.Wm)("code",null,"timestamp",-1),m=(0,e.Uk)("."),b=(0,e.Wm)("h2",{id:"event-handler"},[(0,e.Wm)("a",{class:"header-anchor",href:"#event-handler"},"#"),(0,e.Uk)(" Event Handler")],-1),f=(0,e.Wm)("p",null,"You can use event handlers to capture infomration when certain events are included on a new block. The events that are part of the default Substrate runtime and a block may contain multiple events.",-1),y=(0,e.Uk)("During the processing, the event handler will receive a substrate event as an argument with the event's typed inputs and outputs. Any type of events will trigger the mapping, allowing activity with the data source to be captured. You should use "),g=(0,e.Uk)("Mapping Filters"),w=(0,e.Uk)(" in your manifest to filter events to reduce the time it takes to index data and improve mapping performance."),v=(0,e.uE)('<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>SubstrateEvent<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@subql/types&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">handleEvent</span><span class="token punctuation">(</span>event<span class="token operator">:</span> SubstrateEvent<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span>event<span class="token operator">:</span> <span class="token punctuation">{</span>data<span class="token operator">:</span> <span class="token punctuation">[</span>account<span class="token punctuation">,</span> balance<span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token operator">=</span> event<span class="token punctuation">;</span>\n    <span class="token comment">// Retrieve the record by its ID</span>\n    <span class="token keyword">const</span> record <span class="token operator">=</span> <span class="token keyword">await</span> starterEntity<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>extrinsic<span class="token punctuation">.</span>block<span class="token punctuation">.</span>block<span class="token punctuation">.</span>header<span class="token punctuation">.</span>hash<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    record<span class="token punctuation">.</span>field2 <span class="token operator">=</span> account<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    record<span class="token punctuation">.</span>field3 <span class="token operator">=</span> <span class="token punctuation">(</span>balance <span class="token keyword">as</span> Balance<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBigInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">await</span> record<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>',1),W=(0,e.Uk)("A "),q={href:"https://github.com/OnFinality-io/subql/blob/a5ab06526dcffe5912206973583669c7f5b9fdc9/packages/types/src/interfaces.ts#L30",target:"_blank",rel:"noopener noreferrer"},x=(0,e.Uk)("SubstrateEvent"),U=(0,e.Uk)(" is an extended interface type of the "),S={href:"https://github.com/polkadot-js/api/blob/f0ce53f5a5e1e5a77cc01bf7f9ddb7fcf8546d11/packages/types/src/interfaces/system/types.ts#L149",target:"_blank",rel:"noopener noreferrer"},E=(0,e.Uk)("EventRecord"),B=(0,e.Uk)(". Besides the event data, it is also includes an id (the block to which this event belongs) and the extrinsic inside of this block."),_=(0,e.uE)('<h2 id="call-handler"><a class="header-anchor" href="#call-handler">#</a> Call Handler</h2><p>Call handlers are used when you want to capture information on certain substrate extrinsics.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">handleCall</span><span class="token punctuation">(</span>extrinsic<span class="token operator">:</span> SubstrateExtrinsic<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> record <span class="token operator">=</span> <span class="token keyword">await</span> starterEntity<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>extrinsic<span class="token punctuation">.</span>block<span class="token punctuation">.</span>block<span class="token punctuation">.</span>header<span class="token punctuation">.</span>hash<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    record<span class="token punctuation">.</span>field4 <span class="token operator">=</span> extrinsic<span class="token punctuation">.</span>block<span class="token punctuation">.</span>timestamp<span class="token punctuation">;</span>\n    <span class="token keyword">await</span> record<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>',3),M=(0,e.Uk)("The "),T={href:"https://github.com/OnFinality-io/subql/blob/a5ab06526dcffe5912206973583669c7f5b9fdc9/packages/types/src/interfaces.ts#L21",target:"_blank",rel:"noopener noreferrer"},A=(0,e.Uk)("SubstrateExtrinsic"),H=(0,e.Uk)(" extends "),C={href:"https://github.com/polkadot-js/api/blob/a9c9fb5769dec7ada8612d6068cf69de04aa15ed/packages/types/src/extrinsic/Extrinsic.ts#L170",target:"_blank",rel:"noopener noreferrer"},L=(0,e.Uk)("GenericExtrinsic"),P=(0,e.Uk)(". It is assigned an id (the block to which this extrinsic belongs) and provide an extrinsic property which extends the events among this block. Additionally it records the success status of this extrinsic."),j=(0,e.Wm)("h2",{id:"query-states"},[(0,e.Wm)("a",{class:"header-anchor",href:"#query-states"},"#"),(0,e.Uk)(" Query States")],-1),I=(0,e.Wm)("p",null,"Our goal is to cover all data sources for users for mapping handlers (more than just the three interface event types above). Therefore, we have exposed some of the @polkadot/api interfaces to increase the scalability.",-1),O=(0,e.Wm)("p",null,"These are the interface we support now:",-1),R={href:"https://polkadot.js.org/docs/api/start/api.query",target:"_blank",rel:"noopener noreferrer"},D=(0,e.Uk)("api.query.<module>.<method>()"),F=(0,e.Uk)(" will query the "),G=(0,e.Wm)("strong",null,"current",-1),N=(0,e.Uk)(" block."),Q={href:"https://polkadot.js.org/docs/api/start/api.query.multi/#multi-queries-same-type",target:"_blank",rel:"noopener noreferrer"},Y=(0,e.Uk)("api.query.<module>.<method>.multi()"),J=(0,e.Uk)(" will make multiple queries of the "),z=(0,e.Wm)("strong",null,"same",-1),V=(0,e.Uk)(" type at the current block."),K={href:"https://polkadot.js.org/docs/api/start/api.query.multi/#multi-queries-distinct-types",target:"_blank",rel:"noopener noreferrer"},X=(0,e.Uk)("api.queryMulti()"),Z=(0,e.Uk)(" will make multiple queries of "),$=(0,e.Wm)("strong",null,"different",-1),nn=(0,e.Uk)(" types at the current block."),sn=(0,e.uE)("<p>And these are the interface we do <strong>NOT</strong> support currently:</p><ul><li><s>api.tx.*</s></li><li><s>api.rpc.*</s></li><li><s>api.derive.*</s></li><li><s>api.query.&lt;module&gt;.&lt;method&gt;.at</s></li><li><s>api.query.&lt;module&gt;.&lt;method&gt;.entriesAt</s></li><li><s>api.query.&lt;module&gt;.&lt;method&gt;.entriesPaged</s></li><li><s>api.query.&lt;module&gt;.&lt;method&gt;.hash</s></li><li><s>api.query.&lt;module&gt;.&lt;method&gt;.keysAt</s></li><li><s>api.query.&lt;module&gt;.&lt;method&gt;.keysPaged</s></li><li><s>api.query.&lt;module&gt;.&lt;method&gt;.range</s></li><li><s>api.query.&lt;module&gt;.&lt;method&gt;.sizeAt</s></li></ul>",2),an=(0,e.Uk)("See an example of using this API in our "),en={href:"https://github.com/subquery/subql-examples/tree/main/validator-threshold",target:"_blank",rel:"noopener noreferrer"},tn=(0,e.Uk)("validator-threshold"),pn=(0,e.Uk)(" example use case."),on=(0,e.Wm)("h2",{id:"modules-and-libraries"},[(0,e.Wm)("a",{class:"header-anchor",href:"#modules-and-libraries"},"#"),(0,e.Uk)(" Modules and Libraries")],-1),ln=(0,e.Wm)("p",null,[(0,e.Uk)("In order to improve SubQuery's data processing capabilities, we have allowed some of the NodeJS's built-in modules for running mapping functions in the "),(0,e.Wm)("a",{href:"#the-sandbox"},"sandbox"),(0,e.Uk)(", and have allowed users to call third-party libraries.")],-1),cn=(0,e.Uk)("Please note this is an "),rn=(0,e.Wm)("strong",null,"experimental features",-1),un=(0,e.Uk)(" and you may encounter bugs or issues that many negatively impact on your mapping functions. Please report any bugs you find by creating an issue in "),kn={href:"https://github.com/subquery/subql",target:"_blank",rel:"noopener noreferrer"},dn=(0,e.Uk)("GitHub"),hn=(0,e.Uk)("."),mn=(0,e.uE)('<h3 id="built-in-modules"><a class="header-anchor" href="#built-in-modules">#</a> Built-in modules</h3><p>Currently, we allow the following NodeJS modules: <code>assert</code>, <code>buffer</code>, <code>crypto</code>, <code>util</code>, and <code>path</code> .</p><p>Rather than importing the whole module, we recommend only importing the required method(s) that you need. Some methods in these modules may have dependencies that are unsupported and will fail on import.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>hashMessage<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;ethers/lib/utils&quot;</span><span class="token punctuation">;</span> <span class="token comment">//Good way</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>utils<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;ethers&quot;</span> <span class="token comment">//Bad way</span>\n\n<span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">handleCall</span><span class="token punctuation">(</span>extrinsic<span class="token operator">:</span> SubstrateExtrinsic<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> record <span class="token operator">=</span> <span class="token keyword">await</span> starterEntity<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>extrinsic<span class="token punctuation">.</span>block<span class="token punctuation">.</span>block<span class="token punctuation">.</span>header<span class="token punctuation">.</span>hash<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    record<span class="token punctuation">.</span>field1 <span class="token operator">=</span> <span class="token function">hashMessage</span><span class="token punctuation">(</span><span class="token string">&#39;Hello&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">await</span> record<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="third-party-libraries"><a class="header-anchor" href="#third-party-libraries">#</a> Third-party libraries</h3><p>Due to the limitations of the virtual machine in our sandbox, currently we only support third-party libraries written by <strong>CommonJS</strong>.</p><p>If a library is depends on any modules in <strong>ESM</strong> format, the virtual machine will compile and return the outcome.</p>',7),bn={render:function(n,s){const a=(0,e.up)("OutboundLink"),bn=(0,e.up)("RouterLink");return(0,e.wg)(),(0,e.j4)(e.HY,null,[t,(0,e.Wm)("p",null,[p,(0,e.Wm)("a",o,[l,(0,e.Wm)(a)]),c,(0,e.Wm)("a",r,[i,(0,e.Wm)(a)]),u,k,d,h,m]),b,f,(0,e.Wm)("p",null,[y,(0,e.Wm)(bn,{to:"/create/manifest.html#mapping-filters"},{default:(0,e.w5)((()=>[g])),_:1}),w]),v,(0,e.Wm)("p",null,[W,(0,e.Wm)("a",q,[x,(0,e.Wm)(a)]),U,(0,e.Wm)("a",S,[E,(0,e.Wm)(a)]),B]),_,(0,e.Wm)("p",null,[M,(0,e.Wm)("a",T,[A,(0,e.Wm)(a)]),H,(0,e.Wm)("a",C,[L,(0,e.Wm)(a)]),P]),j,I,O,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Wm)("a",R,[D,(0,e.Wm)(a)]),F,G,N]),(0,e.Wm)("li",null,[(0,e.Wm)("a",Q,[Y,(0,e.Wm)(a)]),J,z,V]),(0,e.Wm)("li",null,[(0,e.Wm)("a",K,[X,(0,e.Wm)(a)]),Z,$,nn])]),sn,(0,e.Wm)("p",null,[an,(0,e.Wm)("a",en,[tn,(0,e.Wm)(a)]),pn]),on,ln,(0,e.Wm)("p",null,[cn,rn,un,(0,e.Wm)("a",kn,[dn,(0,e.Wm)(a)]),hn]),mn],64)}}}}]);