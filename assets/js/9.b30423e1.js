(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{372:function(t,a,s){"use strict";s.r(a);var e=s(42),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"define-the-subquery"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#define-the-subquery"}},[t._v("#")]),t._v(" Define the SubQuery")]),t._v(" "),s("h2",{attrs:{id:"the-manifest"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#the-manifest"}},[t._v("#")]),t._v(" The Manifest")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("project.yaml")]),t._v(" is an entry point of your project. It defined the endpoint of the blockchain to be indexed.\n"),s("code",[t._v("dataSources.kind")]),t._v(" defines the type of datasources. In "),s("code",[t._v("mapping.handlers")]),t._v(" will list all the "),s("a",{attrs:{href:"#mapping-function"}},[t._v("mapping functions")]),t._v(" and their corresponding handler types,\nalso "),s("a",{attrs:{href:"#apply-filter"}},[t._v("filters")]),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"the-graphql-schema"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#the-graphql-schema"}},[t._v("#")]),t._v(" The GraphQL Schema")]),t._v(" "),s("p",[t._v("It is must define the GraphQL schemas inside of "),s("code",[t._v("schema.graphql")]),t._v(' file. To know how to write in  "GraphQL schema language",\nwe recommend to check out on '),s("a",{attrs:{href:"https://graphql.org/learn/schema/#type-language",target:"_blank",rel:"noopener noreferrer"}},[t._v("Schemas and Types"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("p",[t._v("We currently supporting flowing types:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("ID")])]),t._v(" "),s("li",[s("code",[t._v("Int")])]),t._v(" "),s("li",[s("code",[t._v("String")])]),t._v(" "),s("li",[s("code",[t._v("BigInt")])]),t._v(" "),s("li",[s("code",[t._v("Date")])])]),t._v(" "),s("h2",{attrs:{id:"mapping-function"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mapping-function"}},[t._v("#")]),t._v(" Mapping function")]),t._v(" "),s("p",[t._v("The mappings function defined how to transform the indexed data into the entities have defined in the schema above. Mappings are written\nin a subset of TypeScript called AssemblyScript which can be compiled to WASM (WebAssembly).")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("We also provided a few examples of a mapping function in "),s("code",[t._v("src/mappings/mappingHandlers.ts")]),t._v(". For each handler that is defined in "),s("code",[t._v("project.yaml")]),t._v("\nunder mapping.handlers, create an exported function of the same name.")])]),t._v(" "),s("li",[s("p",[t._v("Also, under the "),s("code",[t._v("src/index.ts")]),t._v(", you have to export the functions of handlers as defined in above.")])])]),t._v(" "),s("p",[t._v("According to the different input parameters, they can be classified into three types, namely "),s("a",{attrs:{href:"#blockhandler"}},[t._v("Blockhandler")]),t._v(", "),s("a",{attrs:{href:"#eventhandler"}},[t._v("EventHandler")]),t._v(" and "),s("a",{attrs:{href:"#callhandler"}},[t._v("CallHandler")]),t._v(".")]),t._v(" "),s("h3",{attrs:{id:"blockhandler"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#blockhandler"}},[t._v("#")]),t._v(" BlockHandler")]),t._v(" "),s("p",[t._v("Each time a new block is attached to the Substrate chain, it is likely we want to capture some useful information, e.g. block number.\nTo achieve this this, a defined BlockHandler will be called once for every block.")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleBlock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("block"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" SignedBlock"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Create a new starterEntity with ID using block hash")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" record "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("starterEntity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("block"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("block"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("header"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    record"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("field1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" block"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("block"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("header"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toNumber")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" record"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("save")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"eventhandler"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#eventhandler"}},[t._v("#")]),t._v(" EventHandler")]),t._v(" "),s("p",[t._v("The events that are part of the default Substrate runtime and a block may contain multiple events.\nTo process these events, the event handler will receive an substrate event as an argument with the typed inputs\nto and outputs from the event. Any type of events will trigger the mapping, allowing activity with the data source to be captured.")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleEvent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" SubstrateEvent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("event"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("account"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" balance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Retrieve the record by its ID")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" record "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" starterEntity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("extrinsic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("block"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("block"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("header"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    record"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("field2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" account"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    record"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("field3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("balance "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" Balance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toBigInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" record"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("save")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"callhandler"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#callhandler"}},[t._v("#")]),t._v(" CallHandler")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleCall")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("extrinsic"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" SubstrateExtrinsic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" record "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" starterEntity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("extrinsic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("block"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("block"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("header"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    record"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("field4 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" extrinsic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("block"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timestamp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" record"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("save")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("h3",{attrs:{id:"apply-filter"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#apply-filter"}},[t._v("#")]),t._v(" Apply filter")]),t._v(" "),s("p",[t._v("In the "),s("code",[t._v("project.yml")]),t._v(", you may have noticed we are supporting filter feature for "),s("code",[t._v("EventHandler")]),t._v(" and "),s("code",[t._v("Call Handlers.")]),t._v("\nApplying the filter means any extrinsic/event that does not match the required module and section will not be processed further. Doing this will significantly reduce the workload from the mapping function side.")]),t._v(" "),s("p",[t._v("Also, using the filter is an option, but here is an example in your manifest:")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("filter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n   "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("module")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" balances\n   "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("method")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Deposit\n")])])]),s("p",[t._v("To find out module and method are supported, check out "),s("a",{attrs:{href:"https://polkadot.js.org/docs/substrate/extrinsics",target:"_blank",rel:"noopener noreferrer"}},[t._v("Extrinsics"),s("OutboundLink")],1),t._v(" for CallHandler,\nand "),s("a",{attrs:{href:"https://polkadot.js.org/docs/substrate/events",target:"_blank",rel:"noopener noreferrer"}},[t._v("Events"),s("OutboundLink")],1),t._v(" for EventHandler.")]),t._v(" "),s("h2",{attrs:{id:"code-generation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#code-generation"}},[t._v("#")]),t._v(" Code Generation")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$yarn codegen\n")])])]),s("ul",[s("li",[t._v("This will create a new directory "),s("code",[t._v("src/types")]),t._v(" which contains all generated entities in AssemblyScript.")]),t._v(" "),s("li",[t._v("Generated entity class for each type you have defined previously in "),s("code",[t._v("schema.graphql")]),t._v(". These classes provide type-safe\nentity loading, read and write access to entity fields.")])])])}),[],!1,null,null,null);a.default=n.exports}}]);