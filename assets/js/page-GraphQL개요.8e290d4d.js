(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{654:function(s,t,a){"use strict";a.r(t);var n=a(1),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"graphql-개요"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#graphql-개요"}},[s._v("#")]),s._v(" GraphQL 개요")]),s._v(" "),a("h2",{attrs:{id:"엔티티-정의"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#엔티티-정의"}},[s._v("#")]),s._v(" 엔티티 정의")]),s._v(" "),a("p",[a("code",[s._v("schema.graphql")]),s._v(" 파일은 다양한 GraphQL 스키마를 정의합니다. GraphQL 쿼리 언어가 작동하는 방식으로 인해 스키마 파일은 본질적으로 서브쿼리의 데이터 모양을 결정합니다. There are libraries to help you implement GraphQL in "),a("a",{attrs:{href:"https://graphql.org/code/",target:"_blank",rel:"noopener noreferrer"}},[s._v("many different languages"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("strong",[s._v("주요: schema 파일을 변경할 때, 다음 명령 "),a("code",[s._v("yarn codegen")]),s._v("을 사용하여 디렉토리 타입을 재생성하여서 사용하세요.")])]),s._v(" "),a("h3",{attrs:{id:"엔티티"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#엔티티"}},[s._v("#")]),s._v(" 엔티티")]),s._v(" "),a("p",[s._v("각 엔터티는 "),a("code",[s._v("ID!")]),s._v(" 형식의 필수 필드 "),a("code",[s._v("id")]),s._v(" 를 정의해야 합니다. 이 키는 기본 키로 사용되며 동일한 유형의 모든 엔티티에서 고유합니다.")]),s._v(" "),a("p",[s._v("엔티티의 Null 할 수 없는 필드는 "),a("code",[s._v("!")]),s._v(" 으로 표시됩니다. 아래 예제를 참조하세요:")]),s._v(" "),a("div",{staticClass:"language-graphql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-graphql"}},[a("code",[s._v("예시 입력 "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@entity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# id 필드는 항상 필수이며 다음과 같아야 합니다.")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" String"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 필수 필드입니다.")]),s._v("\n  주소"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" String "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 이것은 옵션 필드입니다")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h3",{attrs:{id:"지원되는-스칼라-및-유형"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#지원되는-스칼라-및-유형"}},[s._v("#")]),s._v(" 지원되는 스칼라 및 유형")]),s._v(" "),a("p",[s._v("현재 유동 스칼라 유형 지원:")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("아이디")])]),s._v(" "),a("li",[a("code",[s._v("Int")])]),s._v(" "),a("li",[a("code",[s._v("String")])]),s._v(" "),a("li",[a("code",[s._v("BigInt")])]),s._v(" "),a("li",[a("code",[s._v("날짜")])]),s._v(" "),a("li",[a("code",[s._v("Boolean")])]),s._v(" "),a("li",[a("code",[s._v("<EntityName>")]),s._v(" 중첩된 관계 엔터티의 경우 정의된 엔터티 이름을 필드 중 하나로 사용할 수 있습니다. "),a("a",{attrs:{href:"#entity-relationships"}},[s._v("엔티 관계")]),s._v("를 참조하세요.")]),s._v(" "),a("li",[a("code",[s._v("JSON")]),s._v("가 구조화된 데이터를 저장할 수 있습니다, "),a("a",{attrs:{href:"#json-type"}},[s._v("JSON type")]),s._v("을 참조하세요")])]),s._v(" "),a("h2",{attrs:{id:"기본-키가-아닌-필드별-인덱싱"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#기본-키가-아닌-필드별-인덱싱"}},[s._v("#")]),s._v(" 기본 키가 아닌 필드별 인덱싱")]),s._v(" "),a("p",[s._v("Query 성능을 향상시키려면 기본 키가 아닌 필드에 "),a("code",[s._v("@index")]),s._v(" 주석을 구현하여 엔터티 필드를 인덱싱하세요.")]),s._v(" "),a("p",[s._v("그러나 사용자가 "),a("a",{attrs:{href:"#json-type"}},[s._v(" JSON")]),s._v(" 개체에 "),a("code",[s._v("@index")]),s._v(" 주석을 추가할 수는 없다. 기본적으로 인덱스는 데이터베이스의 JSON 필드 및 외래 키에만 자동으로 추가되지만 Query 서비스 성능만 향상시킵니다.")]),s._v(" "),a("p",[s._v("여기 예가 있습니다.")]),s._v(" "),a("div",{staticClass:"language-graphql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-graphql"}},[a("code",[s._v("사용자 "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@entity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" 입력\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  이름"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" String"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@index")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("unique")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 고유 항목을 참 또는 거짓으로 설정할 수 있습니다.")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("title")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Title"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 인덱스는 외부 키 필드에 자동으로 추가됩니다. ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("  \n  이름"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" String"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@index")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("unique")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("이 사용자의 이름은 알고 있지만 정확한 id 값은 모른다고 가정하면 모든 사용자를 추출한 다음 이름으로 필터링하는 대신 이름 필드 뒤에 "),a("code",[s._v("@index")]),s._v(" 을 추가할 수 있습니다. 이렇게 하면 Query가 훨씬 빨라지고 "),a("code",[s._v("unique: true")]),s._v("를 추가로 전달하여 고유성을 보장할 수 있다.")]),s._v(" "),a("p",[a("strong",[s._v("필드가 고유하지 않은 경우 최대 결과 집합 크기는 100입니다.")])]),s._v(" "),a("p",[s._v("코드 생성을 실행하면 "),a("code",[s._v("User")]),s._v(" 모델 아래에"),a("code",[s._v("getByName")]),s._v(" 이 자동으로 생성되고, 외래 키 필드 "),a("code",[s._v("title")]),s._v("이 "),a("code",[s._v("getByTitleId")]),s._v(" 방법을 사용함으로, 두 가지 모두 매핑 기능에서 직접 사용 할 수 있습니다.")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 제목 엔터티에 대한 레코드 준비 */")]),s._v("\n제목 삽입 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 값 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'id_1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Captain'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("div",{staticClass:"language-typescript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Handler in mapping function")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("User"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"../types/models/User"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("Title"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"../types/models/Title"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" jack "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" User"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getByName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Jack Sparrow'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" captainTitle "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" Title"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getByName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Captain'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" pirateLords "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" User"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getByTitleId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("captainTitle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// List of all Captains")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h2",{attrs:{id:"엔티티-관계"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#엔티티-관계"}},[s._v("#")]),s._v(" 엔티티 관계")]),s._v(" "),a("p",[s._v("엔터티는 종종 다른 엔터티와 중첩된 관계를 가집니다. 필드 값을 다른 엔터티 이름으로 설정하면 기본적으로 두 엔터티 간의 일대일 관계가 정의됩니다.")]),s._v(" "),a("p",[s._v("아래 예제를 사용하여 서로 다른 엔티티 관계(일대일, 일대다, 다대다) 를 구성할 수 있습니다.")]),s._v(" "),a("h3",{attrs:{id:"일대일-관계"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#일대일-관계"}},[s._v("#")]),s._v(" 일대일 관계")]),s._v(" "),a("p",[s._v("일대일 관계는 하나의 엔터티만 다른 엔터티에 매핑된 경우 기본값입니다.")]),s._v(" "),a("p",[s._v("예시: 패스포트은 한 사람의 소유이고 한 사람은 한 사람의 패스포트만 가지고 있습니다(이 예에서는):")]),s._v(" "),a("div",{staticClass:"language-graphql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-graphql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@entity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("owner")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Person"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("또는")]),s._v(" "),a("div",{staticClass:"language-graphql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-graphql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@entity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("passport")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Passport"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("owner")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Person"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h3",{attrs:{id:"일대다-관계"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#일대다-관계"}},[s._v("#")]),s._v(" 일대다 관계")]),s._v(" "),a("p",[s._v("대괄호를 사용하여 필드 유형에 여러 개의 도면요소가 포함됨을 나타낼 수 있습니다.")]),s._v(" "),a("p",[s._v("Example: A person can have multiple accounts.")]),s._v(" "),a("div",{staticClass:"language-graphql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-graphql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@entity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("accounts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Account"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("publicAddress")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" String"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h3",{attrs:{id:"다대다-관계"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#다대다-관계"}},[s._v("#")]),s._v(" 다대다 관계")]),s._v(" "),a("p",[s._v("다대다 관계는 매핑 엔터티를 구현하여 다른 두 엔터티를 연결함으로써 달성될 수 있습니다.")]),s._v(" "),a("p",[s._v("예: 각 사용자는 여러 그룹(사용자 그룹) 의 일부이며 그룹에는 여러 다른 사용자(사용자 그룹) 가 있습니다.")]),s._v(" "),a("div",{staticClass:"language-graphql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-graphql"}},[a("code",[s._v("유형 사람 "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@entity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" String"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("groups")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("PersonGroup"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Person"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("Group")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Group"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Group")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@entity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" String"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("persons")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("PersonGroup"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[s._v("또한 중간 도면요소의 여러 필드에 동일한 도면요소의 연결을 만들 수 있습니다.")]),s._v(" "),a("p",[s._v("예를 들어, 계정에는 여러 개의 전송이 있을 수 있으며 각 전송에는 소스 및 대상 계정이 있습니다.")]),s._v(" "),a("p",[s._v("이렇게 하면 양도 표를 통해 두 계정(출처 및 도착처) 간에 양방향 관계가 설정됩니다.")]),s._v(" "),a("div",{staticClass:"language-graphql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-graphql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Account")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@entity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("publicAddress")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" String"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Transfer")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@entity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("amount")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" BigInt\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Account"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("to")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Account"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("h3",{attrs:{id:"역방향-조회"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#역방향-조회"}},[s._v("#")]),s._v(" 역방향 조회")]),s._v(" "),a("p",[s._v("엔터티에 대한 역방향 조회를 활성화하려면"),a("code",[s._v("@derivedFrom")]),s._v(" 을 필드에 첨부하고 다른 엔터티의 역방향 조회 필드를 가리킵니다.")]),s._v(" "),a("p",[s._v("이렇게 하면 Query할 수 있는 가상 필드가 엔티티에 생성됩니다.")]),s._v(" "),a("p",[s._v('계정 "에서" 계정 엔티티에서 발신 전송 또는 발신 받기를 각각 필드에서 파생된 값으로 설정하여 액세스할 수 있습니다.')]),s._v(" "),a("div",{staticClass:"language-graphql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-graphql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Account")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@entity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("publicAddress")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" String"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("sentTransfers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Transfer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@derivedFrom")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("field")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"from"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("receivedTransfers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Transfer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@derivedFrom")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("field")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"to"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("amount")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" BigInt\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Account"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("to")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Account"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h2",{attrs:{id:"json-타입"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#json-타입"}},[s._v("#")]),s._v(" JSON 타입")]),s._v(" "),a("p",[s._v("저희는 구조화된 데이터를 저장하는 빠른 방법인 JSON 유형으로 데이터 저장을 지원하고 있습니다. 이 데이터를 Query하는 데 필요한 해당 JSON 인터페이스를 자동으로 생성하여 엔터티를 정의하고 관리하는 시간을 절약해 드립니다.")]),s._v(" "),a("p",[s._v("다음 시나리오에서는 사용자가 JSON 유형을 사용하는 것이 좋습니다.")]),s._v(" "),a("ul",[a("li",[s._v("구조화된 데이터를 단일 필드에 저장하는 것이 여러 개의 개별 엔터티를 만드는 것보다 관리 용이함.")]),s._v(" "),a("li",[s._v("임의의 키/값 사용자 기본 설정 저장(여기서 값은 부울, 텍스트 또는 숫자일 수 있으며 다른 데이터 유형에 대해 별도의 열을 사용하지 않을 수 있습니다).")]),s._v(" "),a("li",[s._v("Schema가 휘발성이며 자주 변경됩니다")])]),s._v(" "),a("h3",{attrs:{id:"json-지시어-정의"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#json-지시어-정의"}},[s._v("#")]),s._v(" JSON 지시어 정의")]),s._v(" "),a("p",[s._v("엔터티에 "),a("code",[s._v("jsonField")]),s._v(" 주석을 추가하여 속성을 JSON 유형으로 정의합니다. 이렇게 하면 프로젝트의 모든 JSON 개체에 대한 인터페이스가 "),a("code",[s._v("types/interfaces.ts")]),s._v("에 자동으로 생성되며 매핑 기능에서 액세스할 수 있습니다.")]),s._v(" "),a("p",[s._v("엔티티와 달리 jsonField 지시문 개체에는 "),a("code",[s._v("id")]),s._v(" 필드가 필요하지 않습니다. JSON 개체는 다른 JSON 개체와 중첩할 수도 있습니다.")]),s._v(" "),a("div",{staticClass:"language-graphql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-graphql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AddressDetail")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@jsonField")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("street")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" String"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("district")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" String"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ContactCard")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@jsonField")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("phone")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" String"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("address")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" AddressDetail "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Nested JSON")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" \n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("contact")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("ContactCard"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Store a list of JSON objects")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("h3",{attrs:{id:"querying-json-필드"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#querying-json-필드"}},[s._v("#")]),s._v(" Querying JSON 필드")]),s._v(" "),a("p",[s._v("JSON 유형을 사용할 경우 텍스트 검색을 수행할 때마다 전체 엔티티에 영향을 미치기 때문에 필터링 시 Query 효율성에 약간의 영향이 있습니다.")]),s._v(" "),a("p",[s._v("그러나, 그 영향은 여전히 저희의 질의 서비스에서 받아들여질 수 있습니다. 다음은 JSON 필드의 GraphQL Query에 "),a("code",[s._v("contains")]),s._v(" 포함 연산자를 사용하여 '0064'가 포함된 전화번호를 소유한 처음 5명의 사용자를 찾는 방법의 예입니다.")]),s._v(" "),a("div",{staticClass:"language-graphql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-graphql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#처음 5명의 사용자를 찾으려면 '0064'가 포함되어 있습니다.")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("query")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("first")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("contactCard")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("contains")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("phone")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0064"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    nodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      id\n      contactCard\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);