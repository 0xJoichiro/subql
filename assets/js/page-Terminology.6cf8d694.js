(window.webpackJsonp=window.webpackJsonp||[]).push([[142],{527:function(e,t,r){"use strict";r.r(t);var a=r(1),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h2",{attrs:{id:"terminology"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#terminology"}},[e._v("#")]),e._v(" Terminology")]),e._v(" "),r("ul",[r("li",[e._v("SubQuery Project ("),r("em",[e._v("where the magic happens")]),e._v("): A definition ("),r("a",{attrs:{href:"https://www.npmjs.com/package/@subql/cli",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("@subql/cli")]),r("OutboundLink")],1),e._v(") of how a SubQuery Node should traverse and aggregate a projects network and how the data should the transformed and stored to enable useful GraphQL queries")]),e._v(" "),r("li",[e._v("SubQuery Node ("),r("em",[e._v("where the work is done")]),e._v("): A package ("),r("a",{attrs:{href:"https://www.npmjs.com/package/@subql/node",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("@subql/node")]),r("OutboundLink")],1),e._v(") that will accept a SubQuery project definiton, and run a node that constantly indexes a connected network to a database")]),e._v(" "),r("li",[e._v("SubQuery Query Service ("),r("em",[e._v("where we get the data from")]),e._v("): A package ("),r("a",{attrs:{href:"https://www.npmjs.com/package/@subql/query",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("@subql/query")]),r("OutboundLink")],1),e._v(") that interacts with the GraphQL API of a deployed SubQuery node to query and view the indexed data")]),e._v(" "),r("li",[e._v("GraphQL ("),r("em",[e._v("how we query the data")]),e._v("): A query langage for APIs that is specifically suited for flexible graph based data - see "),r("a",{attrs:{href:"https://graphql.org/learn/",target:"_blank",rel:"noopener noreferrer"}},[e._v("graphql.org"),r("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=n.exports},559:function(e,t,r){"use strict";r.r(t);var a=r(1),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h2",{attrs:{id:"terminology"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#terminology"}},[e._v("#")]),e._v(" Terminology")]),e._v(" "),r("ul",[r("li",[e._v("SubQuery Project ("),r("em",[e._v("where the magic happens")]),e._v("): A definition ("),r("a",{attrs:{href:"https://www.npmjs.com/package/@subql/cli",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("@subql/cli")]),r("OutboundLink")],1),e._v(") of how a SubQuery Node should traverse and aggregate a projects network and how the data should the transformed and stored to enable useful GraphQL queries")]),e._v(" "),r("li",[e._v("SubQuery Node ("),r("em",[e._v("where the work is done")]),e._v("): A package ("),r("a",{attrs:{href:"https://www.npmjs.com/package/@subql/node",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("@subql/node")]),r("OutboundLink")],1),e._v(") that will accept a SubQuery project definiton, and run a node that constantly indexes a connected network to a database")]),e._v(" "),r("li",[e._v("SubQuery Query Service ("),r("em",[e._v("where we get the data from")]),e._v("): A package ("),r("a",{attrs:{href:"https://www.npmjs.com/package/@subql/query",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("@subql/query")]),r("OutboundLink")],1),e._v(") that interacts with the GraphQL API of a deployed SubQuery node to query and view the indexed data")]),e._v(" "),r("li",[e._v("GraphQL ("),r("em",[e._v("how we query the data")]),e._v("): A query langage for APIs that is specifically suited for flexible graph based data - see "),r("a",{attrs:{href:"https://graphql.org/learn/",target:"_blank",rel:"noopener noreferrer"}},[e._v("graphql.org"),r("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=n.exports},623:function(e,t,r){"use strict";r.r(t);var a=r(1),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h2",{attrs:{id:"terminology"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#terminology"}},[e._v("#")]),e._v(" Terminology")]),e._v(" "),r("ul",[r("li",[e._v("SubQuery Project ("),r("em",[e._v("where the magic happens")]),e._v("): A definition ("),r("a",{attrs:{href:"https://www.npmjs.com/package/@subql/cli",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("@subql/cli")]),r("OutboundLink")],1),e._v(") of how a SubQuery Node should traverse and aggregate a projects network and how the data should the transformed and stored to enable useful GraphQL queries")]),e._v(" "),r("li",[e._v("SubQuery Node ("),r("em",[e._v("where the work is done")]),e._v("): A package ("),r("a",{attrs:{href:"https://www.npmjs.com/package/@subql/node",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("@subql/node")]),r("OutboundLink")],1),e._v(") that will accept a SubQuery project definiton, and run a node that constantly indexes a connected network to a database")]),e._v(" "),r("li",[e._v("SubQuery Query Service ("),r("em",[e._v("where we get the data from")]),e._v("): A package ("),r("a",{attrs:{href:"https://www.npmjs.com/package/@subql/query",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("@subql/query")]),r("OutboundLink")],1),e._v(") that interacts with the GraphQL API of a deployed SubQuery node to query and view the indexed data")]),e._v(" "),r("li",[e._v("GraphQL ("),r("em",[e._v("how we query the data")]),e._v("): A query langage for APIs that is specifically suited for flexible graph based data - see "),r("a",{attrs:{href:"https://graphql.org/learn/",target:"_blank",rel:"noopener noreferrer"}},[e._v("graphql.org"),r("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=n.exports},656:function(e,t,r){"use strict";r.r(t);var a=r(1),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h2",{attrs:{id:"terminology"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#terminology"}},[e._v("#")]),e._v(" Terminology")]),e._v(" "),r("ul",[r("li",[e._v("SubQuery Project ("),r("em",[e._v("where the magic happens")]),e._v("): A definition ("),r("a",{attrs:{href:"https://www.npmjs.com/package/@subql/cli",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("@subql/cli")]),r("OutboundLink")],1),e._v(") of how a SubQuery Node should traverse and aggregate a projects network and how the data should the transformed and stored to enable useful GraphQL queries")]),e._v(" "),r("li",[e._v("SubQuery Node ("),r("em",[e._v("where the work is done")]),e._v("): A package ("),r("a",{attrs:{href:"https://www.npmjs.com/package/@subql/node",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("@subql/node")]),r("OutboundLink")],1),e._v(") that will accept a SubQuery project definiton, and run a node that constantly indexes a connected network to a database")]),e._v(" "),r("li",[e._v("SubQuery Query Service ("),r("em",[e._v("where we get the data from")]),e._v("): A package ("),r("a",{attrs:{href:"https://www.npmjs.com/package/@subql/query",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("@subql/query")]),r("OutboundLink")],1),e._v(") that interacts with the GraphQL API of a deployed SubQuery node to query and view the indexed data")]),e._v(" "),r("li",[e._v("GraphQL ("),r("em",[e._v("how we query the data")]),e._v("): A query langage for APIs that is specifically suited for flexible graph based data - see "),r("a",{attrs:{href:"https://graphql.org/learn/",target:"_blank",rel:"noopener noreferrer"}},[e._v("graphql.org"),r("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=n.exports},804:function(e,t,r){"use strict";r.r(t);var a=r(1),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"terminology"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#terminology"}},[e._v("#")]),e._v(" Terminology")]),e._v(" "),r("ul",[r("li",[e._v("SubQuery Project ("),r("em",[e._v("where the magic happens")]),e._v("): A definition ("),r("a",{attrs:{href:"https://www.npmjs.com/package/@subql/cli",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("@subql/cli")]),r("OutboundLink")],1),e._v(") of how a SubQuery Node should traverse and aggregate a projects network and how the data should the transformed and stored to enable useful GraphQL queries")]),e._v(" "),r("li",[e._v("SubQuery Node ("),r("em",[e._v("where the work is done")]),e._v("): A package ("),r("a",{attrs:{href:"https://www.npmjs.com/package/@subql/node",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("@subql/node")]),r("OutboundLink")],1),e._v(") that will accept a SubQuery project definiton, and run a node that constantly indexes a connected network to a database")]),e._v(" "),r("li",[e._v("SubQuery Query Service ("),r("em",[e._v("where we get the data from")]),e._v("): A package ("),r("a",{attrs:{href:"https://www.npmjs.com/package/@subql/query",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("@subql/query")]),r("OutboundLink")],1),e._v(") that interacts with the GraphQL API of a deployed SubQuery node to query and view the indexed data")]),e._v(" "),r("li",[e._v("GraphQL ("),r("em",[e._v("how we query the data")]),e._v("): A query langage for APIs that is specifically suited for flexible graph based data - see "),r("a",{attrs:{href:"https://graphql.org/learn/",target:"_blank",rel:"noopener noreferrer"}},[e._v("graphql.org"),r("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=n.exports},836:function(e,t,r){"use strict";r.r(t);var a=r(1),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h2",{attrs:{id:"terminology"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#terminology"}},[e._v("#")]),e._v(" Terminology")]),e._v(" "),r("ul",[r("li",[e._v("SubQuery Project ("),r("em",[e._v("where the magic happens")]),e._v("): A definition ("),r("a",{attrs:{href:"https://www.npmjs.com/package/@subql/cli",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("@subql/cli")]),r("OutboundLink")],1),e._v(") of how a SubQuery Node should traverse and aggregate a projects network and how the data should the transformed and stored to enable useful GraphQL queries")]),e._v(" "),r("li",[e._v("SubQuery Node ("),r("em",[e._v("where the work is done")]),e._v("): A package ("),r("a",{attrs:{href:"https://www.npmjs.com/package/@subql/node",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("@subql/node")]),r("OutboundLink")],1),e._v(") that will accept a SubQuery project definiton, and run a node that constantly indexes a connected network to a database")]),e._v(" "),r("li",[e._v("Служба запитів SubQuery (_ звідки ми отримуємо дані _): Пакет ("),r("a",{attrs:{href:"https://www.npmjs.com/package/@subql/query",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("@subql/query")]),r("OutboundLink")],1),e._v("), який взаємодіє з API GraphQL розгорнутого вузла (ноди) SubQuery для здійснення запитів та перегляду індексованих даних")]),e._v(" "),r("li",[e._v("GraphQL ("),r("em",[e._v("how we query the data")]),e._v("): A query langage for APIs that is specifically suited for flexible graph based data - see "),r("a",{attrs:{href:"https://graphql.org/learn/",target:"_blank",rel:"noopener noreferrer"}},[e._v("graphql.org"),r("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=n.exports}}]);