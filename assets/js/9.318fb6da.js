(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{374:function(t,e,a){"use strict";a.r(e);var s=a(42),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"define-the-subquery"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#define-the-subquery"}},[t._v("#")]),t._v(" Define the SubQuery")]),t._v(" "),a("h2",{attrs:{id:"the-manifest"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#the-manifest"}},[t._v("#")]),t._v(" The Manifest")]),t._v(" "),a("p",[t._v("The Manifest "),a("code",[t._v("project.yaml")]),t._v(" can be seen as an entry point of your project, it provides the following specifications in order to index and query a SubQuery.")]),t._v(" "),a("p",[t._v("The Manifest can be in either YAML or JSON format.")]),t._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("specVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.0.1"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("description")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"This subquery indexes kitty\'s birth info"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("repository")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://github.com/onfinality-io/subql-examples"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("schema")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./schema.graphql"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("network")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("endpoint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ws://host.kittychain.io/public-ws"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("types")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v('"KittyIndex"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"u32"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v('"Kitty"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[u8; 16]"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# typesChain: { chain: { Type5: 'example' } }")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# typesSpec: { spec: { Type6: 'example' } }")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("dataSources")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" runtime\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" substrate/Runtime\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("startBlock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mapping")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("handlers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("handler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" handleKittyBred\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" substrate/CallHandler\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("module")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" kitties\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("method")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" breed\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("success")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n")])])]),a("ul",[a("li",[a("p",[a("code",[t._v("specVersion")]),t._v(" indicating which version of this API is being used.")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("schema")]),t._v(" pointing to the GraphQL schema of this SubQuery.")])]),t._v(" "),a("li",[a("p",[t._v("The "),a("code",[t._v("network.endpoint")]),t._v(" defined the endpoint of the blockchain to be indexed.")])]),t._v(" "),a("li",[a("p",[t._v("We support the additional types used by substrate runtime modules.\nThe "),a("code",[t._v("network.types")]),t._v(" declare the specific types supported by this blockchain, also "),a("code",[t._v("typesAlias")]),t._v(","),a("code",[t._v("typesBundle")]),t._v(","),a("code",[t._v("typesChain")]),t._v(" and "),a("code",[t._v("typesSpec")]),t._v(" are supported.")])]),t._v(" "),a("li",[a("p",[t._v("The dataSources defines the data will be extracted and the logic of data transformation to be applied.")]),t._v(" "),a("ul",[a("li",[t._v("For "),a("code",[t._v("dataSources.kind")]),t._v(", we are only supporting "),a("code",[t._v("substrate/Runtime")]),t._v(" at the moment.")]),t._v(" "),a("li",[t._v("The "),a("code",[t._v("startBlock")]),t._v(" specify the block height to start indexing from.")]),t._v(" "),a("li",[t._v("In "),a("code",[t._v("mapping.handlers")]),t._v(" will list all the "),a("a",{attrs:{href:"#mapping-function"}},[t._v("mapping functions")]),t._v(" and their corresponding handler types,\nalso "),a("a",{attrs:{href:"#apply-filter"}},[t._v("filters")]),t._v(".")])])])]),t._v(" "),a("h3",{attrs:{id:"apply-filter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#apply-filter"}},[t._v("#")]),t._v(" Apply filter")]),t._v(" "),a("p",[t._v("In above, you may have noticed we are supporting the optional filter feature.\nThe applied filtering decide which block/event/extrinsic will trigger the mapping.\nIncoming data does not meet the requirement will not be processed further; this implementation will significantly reduce the mapping function side's workload.")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Example filter from callHandler")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n   "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("module")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" balances\n   "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("method")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Deposit\n   "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("success")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n")])])]),a("p",[t._v("Following table explain filters supported by different handlers.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Handler")]),t._v(" "),a("th",[t._v("Supported filter")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("a",{attrs:{href:"#blockhandler"}},[t._v("BlockHandler")])]),t._v(" "),a("td",[a("code",[t._v("specVersion")])])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"#eventhandler"}},[t._v("EventHandler")])]),t._v(" "),a("td",[a("code",[t._v("module")]),t._v(","),a("code",[t._v("method")])])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"#callhandler"}},[t._v("CallHandler")])]),t._v(" "),a("td",[a("code",[t._v("module")]),t._v(","),a("code",[t._v("method")]),t._v(" ,"),a("code",[t._v("success")])])])])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Module and method filter are supported to any substrate based chain.")])]),t._v(" "),a("li",[a("p",[t._v("The "),a("code",[t._v("success")]),t._v(" filter takes a boolean value, and can use to filtering the extrinsic by its success status.")])]),t._v(" "),a("li",[a("p",[t._v("The "),a("code",[t._v("specVersion")]),t._v(" filter specifies the spec version range for substrate block.\nFollowing example describe how to set version ranges.")])])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("specVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Index block with specVersion in between 23 and 24.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# specVersion: [100]      #Index block with specVersion greater than or equal 100.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# specVersion: [null, 23] #Index block with specVersion less than or equal 23.")]),t._v("\n")])])]),a("h2",{attrs:{id:"the-graphql-schema"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#the-graphql-schema"}},[t._v("#")]),t._v(" The GraphQL Schema")]),t._v(" "),a("p",[t._v("It is must define the GraphQL schemas inside of "),a("code",[t._v("schema.graphql")]),t._v(' file. To know how to write in  "GraphQL schema language",\nwe recommend to check out on '),a("a",{attrs:{href:"https://graphql.org/learn/schema/#type-language",target:"_blank",rel:"noopener noreferrer"}},[t._v("Schemas and Types"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("p",[t._v("We currently supporting flowing types:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("ID")])]),t._v(" "),a("li",[a("code",[t._v("Int")])]),t._v(" "),a("li",[a("code",[t._v("String")])]),t._v(" "),a("li",[a("code",[t._v("BigInt")])]),t._v(" "),a("li",[a("code",[t._v("Date")])])]),t._v(" "),a("h2",{attrs:{id:"mapping-function"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mapping-function"}},[t._v("#")]),t._v(" Mapping function")]),t._v(" "),a("p",[t._v("The mappings function defined how to transform the indexed data into the entities have defined in the schema above. Mappings are written\nin a subset of TypeScript called AssemblyScript which can be compiled to WASM (WebAssembly).")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("In the "),a("RouterLink",{attrs:{to:"/define_a_subquery.html#examples"}},[t._v("examples")]),t._v(" and its "),a("code",[t._v("project.yaml")]),t._v(" under mapping.handlers, create an exported function of the same name.")],1)]),t._v(" "),a("li",[a("p",[t._v("Also, under the "),a("code",[t._v("src/index.ts")]),t._v(", you have to export the functions of handlers as defined in above.")])])]),t._v(" "),a("p",[t._v("According to the different input parameters, they can be classified into three types, namely "),a("a",{attrs:{href:"#blockhandler"}},[t._v("Blockhandler")]),t._v(", "),a("a",{attrs:{href:"#eventhandler"}},[t._v("EventHandler")]),t._v(" and "),a("a",{attrs:{href:"#callhandler"}},[t._v("CallHandler")]),t._v(".")]),t._v(" "),a("h3",{attrs:{id:"blockhandler"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#blockhandler"}},[t._v("#")]),t._v(" BlockHandler")]),t._v(" "),a("p",[t._v("Each time a new block is attached to the Substrate chain, it is likely we want to capture some useful information, e.g. block number.\nTo achieve this this, a defined BlockHandler will be called once for every block.")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("SubstrateBlock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@subql/types"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleBlock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("block"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" SubstrateBlock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Create a new starterEntity with ID using block hash")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" record "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("starterEntity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("block"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("block"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("header"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    record"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("field1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" block"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("block"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("header"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toNumber")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" record"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("save")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"substrateblock"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#substrateblock"}},[t._v("#")]),t._v(" SubstrateBlock")]),t._v(" "),a("p",[t._v("A "),a("a",{attrs:{href:"https://github.com/OnFinality-io/subql/blob/a5ab06526dcffe5912206973583669c7f5b9fdc9/packages/types/src/interfaces.ts#L16",target:"_blank",rel:"noopener noreferrer"}},[t._v("SubstrateBlock"),a("OutboundLink")],1),t._v(" is an extend interface type of "),a("a",{attrs:{href:"https://polkadot.js.org/docs/api/cookbook/blocks/",target:"_blank",rel:"noopener noreferrer"}},[t._v("signedBlock"),a("OutboundLink")],1),t._v(",\nbut also record the "),a("code",[t._v("specVersion")]),t._v(" and "),a("code",[t._v("timestamp")]),t._v(" from a block.")]),t._v(" "),a("h3",{attrs:{id:"eventhandler"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eventhandler"}},[t._v("#")]),t._v(" EventHandler")]),t._v(" "),a("p",[t._v("The events that are part of the default Substrate runtime and a block may contain multiple events.\nDuring the processing, the event handler will receive a substrate event as an argument with the event's typed inputs and outputs. Any type of events will trigger the mapping, allowing activity with the data source to be captured.")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("SubstrateEvent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@subql/types"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleEvent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" SubstrateEvent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("event"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("account"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" balance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Retrieve the record by its ID")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" record "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" starterEntity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("extrinsic"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("block"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("block"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("header"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    record"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("field2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" account"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    record"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("field3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("balance "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" Balance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toBigInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" record"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("save")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"substrateevent"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#substrateevent"}},[t._v("#")]),t._v(" SubstrateEvent")]),t._v(" "),a("p",[t._v("A "),a("a",{attrs:{href:"https://github.com/OnFinality-io/subql/blob/a5ab06526dcffe5912206973583669c7f5b9fdc9/packages/types/src/interfaces.ts#L30",target:"_blank",rel:"noopener noreferrer"}},[t._v("SubstrateEvent"),a("OutboundLink")],1),t._v(" is an extend interface type of the "),a("a",{attrs:{href:"https://github.com/polkadot-js/api/blob/f0ce53f5a5e1e5a77cc01bf7f9ddb7fcf8546d11/packages/types/src/interfaces/system/types.ts#L149",target:"_blank",rel:"noopener noreferrer"}},[t._v("EventRecord"),a("OutboundLink")],1),t._v(".\nBesides the event data, it is now also attached with an id, the block to which this event belongs, and the extrinsic inside of this block.")]),t._v(" "),a("h3",{attrs:{id:"callhandler"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#callhandler"}},[t._v("#")]),t._v(" CallHandler")]),t._v(" "),a("p",[t._v("The CallHandler is an exported function in the mapping script that should handle the specified substrate extrinsic.")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleCall")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("extrinsic"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" SubstrateExtrinsic"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" record "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" starterEntity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("extrinsic"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("block"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("block"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("header"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    record"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("field4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" extrinsic"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("block"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timestamp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" record"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("save")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"substrateextrinsic"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#substrateextrinsic"}},[t._v("#")]),t._v(" SubstrateExtrinsic")]),t._v(" "),a("p",[t._v("The "),a("a",{attrs:{href:"https://github.com/OnFinality-io/subql/blob/a5ab06526dcffe5912206973583669c7f5b9fdc9/packages/types/src/interfaces.ts#L21",target:"_blank",rel:"noopener noreferrer"}},[t._v("SubstrateExtrinsic"),a("OutboundLink")],1),t._v(" assigned with an id, it provide an extrinsic property which extends "),a("a",{attrs:{href:"https://github.com/polkadot-js/api/blob/a9c9fb5769dec7ada8612d6068cf69de04aa15ed/packages/types/src/extrinsic/Extrinsic.ts#L170",target:"_blank",rel:"noopener noreferrer"}},[t._v("GenericExtrinsic"),a("OutboundLink")],1),t._v(", the block to which this extrinsic belongs, and the events among this block.\nLast, it records the success status of this extrinsic.")]),t._v(" "),a("h3",{attrs:{id:"query-states"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#query-states"}},[t._v("#")]),t._v(" Query States")]),t._v(" "),a("p",[t._v("We wish to cover all data sources for the user in the mapping handler, other than the three configured interface types above. Therefore, we have exposed some of the @polkadot/api interfaces to increase the scalability.\nThese are the interface we supporting now:")]),t._v(" "),a("ul",[a("li",[a("p",[a("a",{attrs:{href:"https://polkadot.js.org/docs/api/start/api.query",target:"_blank",rel:"noopener noreferrer"}},[t._v("api.query.module.method()"),a("OutboundLink")],1),t._v(" will query the "),a("strong",[t._v("current")]),t._v(" block.")])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://polkadot.js.org/docs/api/start/api.query.multi/#multi-queries-same-type",target:"_blank",rel:"noopener noreferrer"}},[t._v("api.query.module.method.multi()"),a("OutboundLink")],1),t._v(" will multi queries of the "),a("strong",[t._v("same")]),t._v(" types at the current block.")])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://polkadot.js.org/docs/api/start/api.query.multi/#multi-queries-distinct-types",target:"_blank",rel:"noopener noreferrer"}},[t._v("api.queryMulti()"),a("OutboundLink")],1),t._v(" will multi queries of the "),a("strong",[t._v("different")]),t._v(" types at the current block.")])])]),t._v(" "),a("p",[t._v("See an example of using the API in "),a("a",{attrs:{href:"https://github.com/subquery/subql-examples/tree/main/validator-threshold",target:"_blank",rel:"noopener noreferrer"}},[t._v("validator-threshold"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("h3",{attrs:{id:"examples"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#examples"}},[t._v("#")]),t._v(" Examples")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Example")]),t._v(" "),a("th",[t._v("Description")]),t._v(" "),a("th",[t._v("Keywords")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("a",{attrs:{href:"https://github.com/subquery/subql-examples/tree/main/extrinsic-finalized-block",target:"_blank",rel:"noopener noreferrer"}},[t._v("extrinsic-finalized-block"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("Index extrinsics and so they can be queried by hash.")]),t._v(" "),a("td",[t._v("blockHandler")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://github.com/subquery/subql-examples/tree/main/block-timestamp",target:"_blank",rel:"noopener noreferrer"}},[t._v("block-timestamp"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("Indexes timestamp of each finalized block.")]),t._v(" "),a("td",[t._v("callHandler")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://github.com/subquery/subql-examples/tree/main/sum-reward",target:"_blank",rel:"noopener noreferrer"}},[t._v("sum-reward"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("Indexes staking bond, reward and slash from events of finalized block.")]),t._v(" "),a("td",[t._v("eventHandler")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://github.com/subquery/subql-examples/tree/main/kitty",target:"_blank",rel:"noopener noreferrer"}},[t._v("kitty"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("Indexes birthinfo of kitties.")]),t._v(" "),a("td",[t._v("callHandler, eventHandler, customTypes")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://github.com/subquery/subql-examples/tree/main/validator-threshold",target:"_blank",rel:"noopener noreferrer"}},[t._v("validator-threshold"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("Indexes the least staking amount required for a validator to be elected.")]),t._v(" "),a("td",[t._v("blockHandler, @polkadot/api")])])])]),t._v(" "),a("h2",{attrs:{id:"code-generation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#code-generation"}},[t._v("#")]),t._v(" Code Generation")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("yarn codegen\n")])])]),a("ul",[a("li",[a("p",[t._v("This will create a new directory "),a("code",[t._v("src/types")]),t._v(" which contains all generated entities in typescript.")])]),t._v(" "),a("li",[a("p",[t._v("Generated entity class for each type you have defined previously in "),a("code",[t._v("schema.graphql")]),t._v(". These classes provide type-safe\nentity loading, read and write access to entity fields.")])])]),t._v(" "),a("h2",{attrs:{id:"build"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#build"}},[t._v("#")]),t._v(" Build")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("yarn build\n")])])]),a("p",[t._v("Run build command will compile the project.")]),t._v(" "),a("h2",{attrs:{id:"pack"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pack"}},[t._v("#")]),t._v(" Pack")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("yarn pack\n")])])]),a("p",[t._v("Run pack command will compile and pack the project.")])])}),[],!1,null,null,null);e.default=n.exports}}]);