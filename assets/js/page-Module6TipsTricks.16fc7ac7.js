(window.webpackJsonp=window.webpackJsonp||[]).push([[115],{492:function(t,e,a){"use strict";a.r(e);var s=a(1),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"module-6-tips-tricks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#module-6-tips-tricks"}},[t._v("#")]),t._v(" Module 6: Tips & Tricks")]),t._v(" "),a("h2",{attrs:{id:"introduction"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),a("p",[t._v("In these exercises, we will learn what SubQuery Project is, how to deploy a project to\nSubQuery Project, and learn about SubQuery Explorer.")]),t._v(" "),a("h2",{attrs:{id:"pre-requisites"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pre-requisites"}},[t._v("#")]),t._v(" Pre-requisites")]),t._v(" "),a("p",[t._v("None")]),t._v(" "),a("h2",{attrs:{id:"block-v-events-v-calls"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#block-v-events-v-calls"}},[t._v("#")]),t._v(" Block v Events v Calls")]),t._v(" "),a("p",[t._v("To make a SubQuery project process and index data as fast and as efficient as\npossible, it is necessary to understand how things work under the covers. SubQuery has\nthree handlers to process blockchain data. They are "),a("a",{attrs:{href:"https://doc.subquery.network/create/mapping/#block-handler",target:"_blank",rel:"noopener noreferrer"}},[t._v("block handlers"),a("OutboundLink")],1),t._v(", "),a("a",{attrs:{href:"https://doc.subquery.network/create/mapping/#event-handler",target:"_blank",rel:"noopener noreferrer"}},[t._v("event handlers"),a("OutboundLink")],1),t._v(", and "),a("a",{attrs:{href:"https://doc.subquery.network/create/mapping/#call-handler",target:"_blank",rel:"noopener noreferrer"}},[t._v("call handlers"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("p",[t._v("Block handlers are very inefficient. They inspect every single block to grab data to\nindex. This means that with over seven million blocks, if each block could be indexed in\n10ms, this would take over eight (8) days to fully index the blockchain. Therefore, it is\nadvisable to avoid using block handlers if possible.")]),t._v(" "),a("p",[t._v("Event and call handlers are the recommended handlers to use, in conjunction with mapping\nfilters of course, as the performance is much better. The mapping filter allows the project to\nindex only the blocks that satisfy the filter criteria. For example, below shows a filter indexing\nthe "),a("strong",[t._v("staking")]),t._v(" module and the "),a("strong",[t._v("Rewarded")]),t._v(" method.")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("- handler: myCustomHandle\n    kind: substrate/EventHandler\n    filter:\n       module: staking\n       method: Rewarded\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("For even more performance gains, using a dictionary is also highly recommended.")]),t._v(" "),a("h2",{attrs:{id:"using-a-dictionary"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#using-a-dictionary"}},[t._v("#")]),t._v(" Using a dictionary")]),t._v(" "),a("p",[t._v("The dictionary concept was introduced in previous modules (e.g. Module 5 “Overriding\nendpoints) but mentioned here again due to its importance. See "),a("a",{attrs:{href:"https://doc.subquery.network/tutorials_examples/dictionary/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Understanding how a dictionary works"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"event-extrinsic-names"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#event-extrinsic-names"}},[t._v("#")]),t._v(" Event & Extrinsic Names")]),t._v(" "),a("p",[t._v("A popular question when creating SubQuery projects is how do I know what data I can\nextract from the Polkadot blockchain? There are several resource options:")]),t._v(" "),a("ol",[a("li",[t._v("Polkadot documentation")]),t._v(" "),a("li",[t._v("Polkadot blockchain explorer")]),t._v(" "),a("li",[t._v("Interacting with the Polkadot API directly.")])]),t._v(" "),a("p",[t._v("Note: These options may also apply to other blockchains.")]),t._v(" "),a("h3",{attrs:{id:"polkadot-documentation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#polkadot-documentation"}},[t._v("#")]),t._v(" Polkadot Documentation")]),t._v(" "),a("p",[t._v("The Polkadot documentation can be found at: "),a("a",{attrs:{href:"https://polkadot.js.org/docs/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://polkadot.js.org/docs/"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("ul",[a("li",[t._v("Events: "),a("a",{attrs:{href:"https://polkadot.js.org/docs/substrate/events/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://polkadot.js.org/docs/substrate/events/"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("Extrinsics: "),a("a",{attrs:{href:"https://polkadot.js.org/docs/substrate/extrinsics/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://polkadot.js.org/docs/substrate/extrinsics/"),a("OutboundLink")],1)])]),t._v(" "),a("h3",{attrs:{id:"polkadot-explorer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#polkadot-explorer"}},[t._v("#")]),t._v(" Polkadot Explorer")]),t._v(" "),a("p",[t._v("The Polkadot blockchain explorer is also a great place to become familiar with what\ninformation is available to be extracted. There are several options to choose from:")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://polkadot.js.org/apps/#/explorer",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://polkadot.js.org/apps/#/explorer"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://polkadot.subscan.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://polkadot.subscan.io/"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://polkascan.io/polkadot",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://polkascan.io/polkadot"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://dotscanner.com/polkadot/search",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://dotscanner.com/polkadot/search"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://polkastats.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://polkastats.io/"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("Note that not all explorers are equal and some may be easier to use and some represent the\ndata you need in a clearer manner. You’ll end up with a few favourites over time.")]),t._v(" "),a("h3",{attrs:{id:"the-polkadot-cli-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#the-polkadot-cli-api"}},[t._v("#")]),t._v(" The Polkadot CLI API")]),t._v(" "),a("p",[t._v("The previous two methods of understanding what blockchain data is available and also the\n"),a("strong",[t._v("type")]),t._v(" (which is just as important) is great but learning to connect directly to the Polkadot API\nvia command line provides several advantages.")]),t._v(" "),a("p",[t._v("Firstly, it provides access to the most up to date API specifications because the\n"),a("a",{attrs:{href:"https://polkadot.js.org/docs/substrate/events/",target:"_blank",rel:"noopener noreferrer"}},[t._v("documentation"),a("OutboundLink")],1),t._v(" could be slightly outdated. Secondly,it allows developers to understand the\nexact arguments and their types. This is especially important when there are issues and\ndebugging is required. And finally, this is very useful when integrating with custom chains\nwhere sometimes documentation is not available.")]),t._v(" "),a("h4",{attrs:{id:"connecting-to-the-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#connecting-to-the-api"}},[t._v("#")]),t._v(" Connecting to the API")]),t._v(" "),a("p",[t._v("To connect to the API, run the following:")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" --save @polkadot/api\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("node --experimental-repl-await\nconst "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" ApiPromise, WsProvider "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" require"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("@polkadot/api"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconst provider "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" new\nWsProvider"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("wss://polkadot.api.onfinality.io/public-ws"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("If custom chainTypes are required:")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("const "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("types")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("If types are needed:")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("api "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" await ApiPromise.create"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" provider, types"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("Without types:")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("api "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" await ApiPromise.create"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" provider "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h4",{attrs:{id:"fetching-a-block"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fetching-a-block"}},[t._v("#")]),t._v(" Fetching a block")]),t._v(" "),a("p",[t._v("To get block hash at height "),a("code",[t._v("h")]),t._v(", we can get run const blockHash = await\napi.rpc.chain.getBlockHash(h)")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("const blockHash "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" await api.rpc.chain.getBlockHash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1234567")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("Then:")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("const block "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" await api.rpc.chain.getBlock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("blockHash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h4",{attrs:{id:"getting-extrinsics-within-a-block"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getting-extrinsics-within-a-block"}},[t._v("#")]),t._v(" Getting extrinsics within a block")]),t._v(" "),a("p",[t._v("To get all extrinsics:")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("const extrinsics "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" block.block.extrinsics"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("For a particular extrinsic: (Change the 1 to a desired extrinsic number)")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("const myExtrinsic "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" extrinsic"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("To check the args (input for transaction) types, enter:")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("myExtrinsic.meta.args\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("You should see a Vec / array. The size of the array means how many arg this extrinsics\ntakes, and each arg metadata info should include 'name', 'type', 'typeName'. The "),a("code",[t._v("type")]),t._v(" is\nwhat we are looking for. eg: 'MultiAddress' is the type interface from Polkadot/api.")]),t._v(" "),a("h4",{attrs:{id:"getting-events-at-a-certain-block-height"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getting-events-at-a-certain-block-height"}},[t._v("#")]),t._v(" Getting events at a certain block height")]),t._v(" "),a("p",[t._v("Events can not be extracted from a block, but they can be queried. Since we already have\nthe blockHash (from above), we can ‘lock’ the current API to this particular block height. Start\nwith:")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("const apiAt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" await api.at"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("blockHash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("Then:")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("const events "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" await apiAt.query.system.events"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("Next, specify the specific event of interest. Eg for event number 4:")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("const myEvent "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" events"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("Finally, enter:")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("myEvent.event.meta.toJSON"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("And you should see something like this:")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" myEvent.event.meta."),a("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("toJSON")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    name: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Withdraw'")]),t._v(",\n    fields: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name: null, type: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" , typeName: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'T::AccountId'")]),t._v(", docs: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name: null, type: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(" , typeName: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'T::Balance'")]),t._v(", docs: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n    index: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" ,\n    docs: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Some amount was withdrawn from the account (e.g. for transaction fees). "),a("span",{pre:!0,attrs:{class:"token entity",title:"\\\\"}},[t._v("\\\\")]),t._v("[who, value"),a("span",{pre:!0,attrs:{class:"token entity",title:"\\\\"}},[t._v("\\\\")]),t._v("]'")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n    args: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" \n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'AccountId32'")]),t._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'u128'")]),t._v(" \n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br")])]),a("h2",{attrs:{id:"type-safe-properties"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#type-safe-properties"}},[t._v("#")]),t._v(" Type Safe Properties")]),t._v(" "),a("p",[t._v('"Type safe" usually refers to languages that ensure that an operation is working on the right\nkind of data at some point before the operation is actually performed. This may be at compile\ntime or at run time.')]),t._v(" "),a("p",[t._v("In Polkadot, "),a("a",{attrs:{href:"https://polkadot.js.org/docs/api/start/types.basics/#everything-is-a-type",target:"_blank",rel:"noopener noreferrer"}},[t._v("everything has a type"),a("OutboundLink")],1),t._v(". This means that any variable created needs to have a type cast. For example:")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("record.blockNumber "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" event.block.block.header.number.toBigInt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nrecord.amount "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("numberYes as Int"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".toNumber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nrecord.bigAmount "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data as Balance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".toBigInt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nrecord.bool "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data as bool"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".valueOf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h2",{attrs:{id:"logging"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#logging"}},[t._v("#")]),t._v(" Logging")]),t._v(" "),a("p",[t._v("To log data to the CLI from within the mappings functions, when a subql node is running, the\nlogger.info command can be used:")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("logger.info"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Blockheight: "')]),t._v(" + event.block.block.header.number.toNumber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("When running a subql node locally via a command line, a log level can also be added to help\ntroubleshoot. See "),a("a",{attrs:{href:"https://doc.subquery.network/references/references/#log-level",target:"_blank",rel:"noopener noreferrer"}},[t._v("Subql CLI logging reference"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"debugging"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#debugging"}},[t._v("#")]),t._v(" Debugging")]),t._v(" "),a("p",[t._v("In order to debug SubQuery projects such as stepping through code, setting breakpoints,\nand inspecting variables, you will have to use a Node.js inspector in conjunction with\nChrome developer tools. See "),a("a",{attrs:{href:"https://doc.subquery.network/tutorials_examples/debug-projects/",target:"_blank",rel:"noopener noreferrer"}},[t._v("How to debug a SubQuery project?"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("To debug a local subql node, the --debug flag can also be used from the command line. Eg")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" subql-node -f. --debug\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("ul",[a("li",[a("a",{attrs:{href:"https://doc.subquery.network/references/references/#debug",target:"_blank",rel:"noopener noreferrer"}},[t._v("Subql CLI debug reference"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"changing-the-batch-block-size"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#changing-the-batch-block-size"}},[t._v("#")]),t._v(" Changing the batch block size")]),t._v(" "),a("p",[t._v("Using a smaller batch size can reduce memory usage and not leave users hanging for large\nqueries. In other words, your application can be more responsive. See "),a("a",{attrs:{href:"https://doc.subquery.network/tutorials_examples/batch-size/",target:"_blank",rel:"noopener noreferrer"}},[t._v("How to change the batch block size"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"changing-the-starting-block"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#changing-the-starting-block"}},[t._v("#")]),t._v(" Changing the starting block")]),t._v(" "),a("p",[t._v("Note that some events only start to occur at higher block height so one way to test a\nmapping function faster is to adjust the starting block height. See "),a("a",{attrs:{href:"https://doc.subquery.network/tutorials_examples/block-height/",target:"_blank",rel:"noopener noreferrer"}},[t._v("How to start at a different block height?"),a("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=n.exports},535:function(t,e,a){"use strict";a.r(e);var s=a(1),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"module-6-tips-tricks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#module-6-tips-tricks"}},[t._v("#")]),t._v(" Module 6: Tips & Tricks")]),t._v(" "),a("p",[a("strong",[t._v("Coming Soon!")])]),t._v(" "),a("p",[t._v("This module will be released on Friday 26th November 2021.")]),t._v(" "),a("p",[t._v("Make sure you join our "),a("a",{attrs:{href:"https://discord.com/invite/subquery",target:"_blank",rel:"noopener noreferrer"}},[t._v("Discord community"),a("OutboundLink")],1),t._v(" or follow us on "),a("a",{attrs:{href:"https://twitter.com/SubQueryNetwork",target:"_blank",rel:"noopener noreferrer"}},[t._v("Twitter"),a("OutboundLink")],1),t._v(" to be notified!")])])}),[],!1,null,null,null);e.default=n.exports},925:function(t,e,a){"use strict";a.r(e);var s=a(1),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"module-6-tips-tricks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#module-6-tips-tricks"}},[t._v("#")]),t._v(" Module 6: Tips & Tricks")]),t._v(" "),a("p",[a("strong",[t._v("Coming Soon!")])]),t._v(" "),a("p",[t._v("This module will be released on Friday 26th November 2021.")]),t._v(" "),a("p",[t._v("Make sure you join our "),a("a",{attrs:{href:"https://discord.com/invite/subquery",target:"_blank",rel:"noopener noreferrer"}},[t._v("Discord community"),a("OutboundLink")],1),t._v(" or follow us on "),a("a",{attrs:{href:"https://twitter.com/SubQueryNetwork",target:"_blank",rel:"noopener noreferrer"}},[t._v("Twitter"),a("OutboundLink")],1),t._v(" to be notified!")])])}),[],!1,null,null,null);e.default=n.exports},965:function(t,e,a){"use strict";a.r(e);var s=a(1),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"module-6-tips-tricks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#module-6-tips-tricks"}},[t._v("#")]),t._v(" Module 6: Tips & Tricks")]),t._v(" "),a("p",[a("strong",[t._v("Coming Soon!")])]),t._v(" "),a("p",[t._v("This module will be released on Friday 26th November 2021.")]),t._v(" "),a("p",[t._v("Make sure you join our "),a("a",{attrs:{href:"https://discord.com/invite/subquery",target:"_blank",rel:"noopener noreferrer"}},[t._v("Discord community"),a("OutboundLink")],1),t._v(" or follow us on "),a("a",{attrs:{href:"https://twitter.com/SubQueryNetwork",target:"_blank",rel:"noopener noreferrer"}},[t._v("Twitter"),a("OutboundLink")],1),t._v(" to be notified!")])])}),[],!1,null,null,null);e.default=n.exports}}]);