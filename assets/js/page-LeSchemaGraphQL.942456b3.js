(window.webpackJsonp=window.webpackJsonp||[]).push([[92],{600:function(s,t,a){"use strict";a.r(t);var e=a(1),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"le-schema-graphql"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#le-schema-graphql"}},[s._v("#")]),s._v(" Le Schema GraphQL")]),s._v(" "),a("h2",{attrs:{id:"definition-d-entites"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#definition-d-entites"}},[s._v("#")]),s._v(" Définition d'entités")]),s._v(" "),a("p",[s._v("Le fichier "),a("code",[s._v("schema.graphql")]),s._v(" définit les différents schemas GraphQL. En raison de la façon dont le langage de requête GraphQL fonctionne, le fichier schema dicte essentiellement la forme de vos données venant de SubQuery. Pour en savoir plus sur la façon d'écrire dans le langage de schema GraphQL, nous vous recommandons de consulter "),a("a",{attrs:{href:"https://graphql.org/learn/schema/#type-language",target:"_blank",rel:"noopener noreferrer"}},[s._v("Schemas et Types"),a("OutboundLink")],1),s._v(".")]),s._v(" "),a("p",[a("strong",[s._v("Important : Lorsque vous apportez des modifications au fichier schema, veuillez vous assurer que vous régénérez le répertoire de vos types avec la commande suivante "),a("code",[s._v("yarn codegen")])])]),s._v(" "),a("h3",{attrs:{id:"entites"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#entites"}},[s._v("#")]),s._v(" Entités")]),s._v(" "),a("p",[s._v("Chaque entité doit définir ses champs requis "),a("code",[s._v("id")]),s._v(" avec le type "),a("code",[s._v("ID!")]),s._v(". Il est utilisé comme clé primaire et unique parmi toutes les entités du même type.")]),s._v(" "),a("p",[s._v("Les champs non nullables dans l'entité sont indiqués par "),a("code",[s._v("!")]),s._v(". Veuillez consulter l'exemple ci-dessous:")]),s._v(" "),a("div",{staticClass:"language-graphql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-graphql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Exemple")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@entity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# id field is always required and must look like this")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" String"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Ceci est un champ obligatoire")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("address")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" String "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Ceci est un champ facultatif")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h3",{attrs:{id:"les-scalaires-et-les-types-supportes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#les-scalaires-et-les-types-supportes"}},[s._v("#")]),s._v(" Les scalaires et les types supportés")]),s._v(" "),a("p",[s._v("Nous prenons actuellement en charge les types de scalars fluides :")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("ID")])]),s._v(" "),a("li",[a("code",[s._v("Int")])]),s._v(" "),a("li",[a("code",[s._v("String")])]),s._v(" "),a("li",[a("code",[s._v("BigInt")])]),s._v(" "),a("li",[a("code",[s._v("Float")])]),s._v(" "),a("li",[a("code",[s._v("Date")])]),s._v(" "),a("li",[a("code",[s._v("Boolean")])]),s._v(" "),a("li",[a("code",[s._v("<EntityName>")]),s._v(" pour les entités de relation imbriquées, vous pouvez utiliser le nom de l'entité définie comme l'un des champs. Veuillez consulter la section "),a("a",{attrs:{href:"#entity-relationships"}},[s._v("Relations avec les entités")]),s._v(".")]),s._v(" "),a("li",[a("code",[s._v("JSON")]),s._v(" peut alternativement stocker des données structurées, voir "),a("a",{attrs:{href:"#json-type"}},[s._v("type JSON")])]),s._v(" "),a("li",[a("code",[s._v("<EnumName>")]),s._v(" Les types sont un type spécial de scalaire énuméré qui est limité à un ensemble particulier de valeurs autorisées. Veuillez consulter "),a("a",{attrs:{href:"https://graphql.org/learn/schema/#enumeration-types",target:"_blank",rel:"noopener noreferrer"}},[s._v("Énum Graphql"),a("OutboundLink")],1)])]),s._v(" "),a("h2",{attrs:{id:"indexation-par-le-champ-cle-non-primaire"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#indexation-par-le-champ-cle-non-primaire"}},[s._v("#")]),s._v(" Indexation par le champ clé non primaire")]),s._v(" "),a("p",[s._v("Pour améliorer les performances de requêtes, indexer un champ d'entité simplement en implémentant l'annotation "),a("code",[s._v("@index")]),s._v(" sur un champ clé non primaire.")]),s._v(" "),a("p",[s._v("Cependant, nous n'autorisons pas les utilisateurs à ajouter une annotation "),a("code",[s._v("@index")]),s._v(" à aucun objet "),a("a",{attrs:{href:"#json-type"}},[s._v("JSON")]),s._v(". Par défaut, les index sont automatiquement ajoutés aux clés étrangères et pour les champs JSON dans la base de données, mais uniquement pour améliorer les performances du service de requête.")]),s._v(" "),a("p",[s._v("Voici un exemple:")]),s._v(" "),a("div",{staticClass:"language-graphql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-graphql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("User")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@entity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" String"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@index")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("unique")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# unique peut être défini sur true ou false")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("title")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Title"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Les index sont automatiquement ajoutés au champ de clé étrangère")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Title")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@entity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("  \n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" String"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@index")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("unique")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("En supposant que nous connaissions le nom de cet utilisateur, mais nous ne connaissons pas la valeur exacte de l'id plutôt que d'extraire tous les utilisateurs puis de filtrer par nom, nous pouvons ajouter "),a("code",[s._v("@index")]),s._v(" derrière le champ de nom. Cela rend la requête beaucoup plus rapide et nous pouvons également passer le "),a("code",[s._v("unique : true")]),s._v(" pour assurer l'unicité.")]),s._v(" "),a("p",[a("strong",[s._v("Si un champ n'est pas unique, la taille maximum du champs de résultats est de 100")])]),s._v(" "),a("p",[s._v("Lorsque la génération de code est exécutée, cela créera automatiquement un "),a("code",[s._v("getByName")]),s._v(" sous le modèle "),a("code",[s._v("User")]),s._v(" et le champ clé étrangère "),a("code",[s._v("titre")]),s._v(" créera une méthode "),a("code",[s._v("getByTitleId")]),s._v(" , qui sont directement accessibles dans la fonction de mapping.")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Préparer un enregistrement pour l'entité titre */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" titles "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'id_1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Captain'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("div",{staticClass:"language-typescript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Handler dans la fonction de mapping")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("User"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"../types/models/User"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("Title"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"../types/models/Title"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" jack "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" User"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getByName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Jack Sparrow'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" captainTitle "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" Title"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getByName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Captain'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" pirateLords "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" User"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getByTitleId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("captainTitle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// List of all Captains")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h2",{attrs:{id:"relations-entre-entites"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#relations-entre-entites"}},[s._v("#")]),s._v(" Relations entre entités")]),s._v(" "),a("p",[s._v("Une entité a souvent des relations imbriquées avec d'autres entités. Définir la valeur du champ à un autre nom d'entité définira par défaut une relation entre ces deux entités.")]),s._v(" "),a("p",[s._v("Différentes relations entre les entités (une à une, une à une et plusieurs à plusieurs) peuvent être configurées en utilisant les exemples ci-dessous.")]),s._v(" "),a("h3",{attrs:{id:"relations-individuelles"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#relations-individuelles"}},[s._v("#")]),s._v(" Relations individuelles")]),s._v(" "),a("p",[s._v("Les relations individuelles sont la valeur par défaut lorsque seule une seule entité est associée à une autre.")]),s._v(" "),a("p",[s._v("Exemple: Un passeport n'appartiendra qu'à une seule personne et une seule personne n'a qu'un passeport (dans cet exemple) :")]),s._v(" "),a("div",{staticClass:"language-graphql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-graphql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@entity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Passport")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@entity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("owner")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Person"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("ou")]),s._v(" "),a("div",{staticClass:"language-graphql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-graphql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@entity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("passport")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Passport"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Passport")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@entity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("owner")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Person"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h3",{attrs:{id:"relations-une-a-plusieurs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#relations-une-a-plusieurs"}},[s._v("#")]),s._v(" Relations une à plusieurs")]),s._v(" "),a("p",[s._v("Vous pouvez utiliser des crochets pour indiquer qu'un type de champ contient plusieurs entités.")]),s._v(" "),a("p",[s._v("Exemple: Une personne peut avoir plusieurs comptes.")]),s._v(" "),a("div",{staticClass:"language-graphql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-graphql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@entity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("accounts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Account"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Account")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@entity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("publicAddress")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" String"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h3",{attrs:{id:"relations-de-plusieurs-a-plusieurs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#relations-de-plusieurs-a-plusieurs"}},[s._v("#")]),s._v(" Relations de plusieurs à plusieurs")]),s._v(" "),a("p",[s._v("Une relation de plusieurs à plusieurs peut être obtenue en implémentant une entité de cartographie pour relier les deux autres entités.")]),s._v(" "),a("p",[s._v("Exemple: Chaque personne fait partie de groupes multiples (Groupe de personnes) et les groupes ont plusieurs personnes différentes (Groupe de personnes).")]),s._v(" "),a("div",{staticClass:"language-graphql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-graphql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@entity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" String"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("groups")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("PersonGroup"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PersonGroup")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@entity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Person"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("Group")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Group"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Group")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@entity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" String"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("persons")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("PersonGroup"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("p",[s._v("De plus, il est possible de créer une connexion de la même entité dans plusieurs champs de l'entité moyenne.")]),s._v(" "),a("p",[s._v("Par exemple, un compte peut avoir plusieurs transferts, et chaque transfert a un compte source et de destination.")]),s._v(" "),a("p",[s._v("Cela établira une relation bidirectionnelle entre deux comptes clients (de et vers) par le biais de la table de transfert.")]),s._v(" "),a("div",{staticClass:"language-graphql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-graphql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Account")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@entity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("publicAddress")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" String"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Transfer")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@entity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("amount")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" BigInt\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Account"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("to")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Account"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("h3",{attrs:{id:"recherche-inversee"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#recherche-inversee"}},[s._v("#")]),s._v(" Recherche inversée")]),s._v(" "),a("p",[s._v("Pour activer une recherche inversée sur une entité à une relation, attachez "),a("code",[s._v("@derivedDe")]),s._v(" au champ et pointez vers son champ de recherche inversé d'une autre entité.")]),s._v(" "),a("p",[s._v("Cela crée un champ virtuel sur l'entité qui peut être interrogée.")]),s._v(" "),a("p",[s._v("Le transfert « à partir » d'un compte est accessible à partir de l'entité du compte en définissant la valeur de sentTransfer ou receivedTransfer comme ayant leur valeur dérivée des champs respectifs ou des champs.")]),s._v(" "),a("div",{staticClass:"language-graphql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-graphql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Account")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@entity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("publicAddress")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" String"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("sentTransfers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Transfer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@derivedFrom")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("field")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"from"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("receivedTransfers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Transfer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@derivedFrom")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("field")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"to"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Transfer")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@entity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("amount")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" BigInt\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Account"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("to")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Account"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h2",{attrs:{id:"type-json"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#type-json"}},[s._v("#")]),s._v(" Type JSON")]),s._v(" "),a("p",[s._v("Nous prenons en charge l'enregistrement des données en tant que type JSON, ce qui est un moyen rapide de stocker des données structurées. Nous générerons automatiquement les interfaces JSON correspondantes pour interroger ces données et vous économiserons du temps pour définir et gérer les entités.")]),s._v(" "),a("p",[s._v("Nous recommandons aux utilisateurs d'utiliser le type JSON dans les scénarios suivants :")]),s._v(" "),a("ul",[a("li",[s._v("Lorsque vous stockez des données structurées dans un seul champ est plus facile à gérer que de créer plusieurs entités séparées.")]),s._v(" "),a("li",[s._v("Sauvegarde des préférences utilisateur de clé arbitraire (où la valeur peut être booléenne, textuelle, ou numérique, et vous ne voulez pas avoir de colonnes séparées pour différents types de données)")]),s._v(" "),a("li",[s._v("Le schema est volatil et évolue fréquemment")])]),s._v(" "),a("h3",{attrs:{id:"definissez-la-directive-json"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#definissez-la-directive-json"}},[s._v("#")]),s._v(" Définissez la directive JSON")]),s._v(" "),a("p",[s._v("Définissez la propriété en tant que type JSON en ajoutant l'annotation "),a("code",[s._v("jsonField")]),s._v(" dans l'entité. Cela générera automatiquement des interfaces pour tous les objets JSON de votre projet sous "),a("code",[s._v("types/interfaces.ts")]),s._v(", et vous pouvez y accéder dans votre fonction de mapping.")]),s._v(" "),a("p",[s._v("Contrairement à l'entité, l'objet directive jsonField ne nécessite aucun champ "),a("code",[s._v("id")]),s._v(". Un objet JSON est également capable de s'imbriquer avec d'autres objets JSON.")]),s._v(" "),a("div",{staticClass:"language-graphql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-graphql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AddressDetail")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@jsonField")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("street")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" String"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("district")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" String"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ContactCard")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@jsonField")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("phone")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" String"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("address")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" AddressDetail "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Nested JSON")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("User")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token directive function"}},[s._v("@entity")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" \n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("contact")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("ContactCard"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Stocker une liste d'objets JSON")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("h3",{attrs:{id:"requete-des-champs-json"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#requete-des-champs-json"}},[s._v("#")]),s._v(" Requête des champs JSON")]),s._v(" "),a("p",[s._v("L'inconvénient d'utiliser des types JSON se retrouve sur l'efficacité de la requête lors du filtrage, comme chaque fois qu'il effectue une recherche de texte, cela se fait sur l'entité entière.")]),s._v(" "),a("p",[s._v("Cependant, l'impact est acceptable dans notre service de requêtes. Voici un exemple de comment utiliser l'opérateur "),a("code",[s._v("contient")]),s._v(" dans la requête GraphQL sur un champ JSON pour trouver les 5 premiers utilisateurs qui possèdent un numéro de téléphone qui contient '0064'.")]),s._v(" "),a("div",{staticClass:"language-graphql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-graphql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#To find the the first 5 users own phone numbers contains '0064'.")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("query")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("first")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("contactCard")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("contains")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("phone")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0064"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    nodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      id\n      contactCard\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])])])}),[],!1,null,null,null);t.default=n.exports}}]);